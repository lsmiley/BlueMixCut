@model SizingToolNew2.Models.AvProduct

@{
    <link href="http://netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    @*<script src="http://bootstrapcdn.com/bootstrap/3.1.0/js/bootstrap.min.js"></script>*@
    <script src="~/Scripts/bootstrap.min.js" ></script>
    <script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
}

<div class="row">
    <div class="col-md-4">
        <img src="~/Images/ibm security shield wordmark stack blue20_by_30pct.png" />

    </div>
    <div class="col-md-6">

        <h1 class="panel-title list-panel-title">Create a New - Security Product</h1>

    </div>
    <div class="col-md-2">
        .
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div id="AvProductHead">

            <div class="row">
                <div class="col-md-2">
                    <div class="box box-default">
                        <div class="box-header with-border">
                            <h3 class="box-title">Vendor / Delivery</h3>
                            <div class="box-tools pull-right">
                                <span class="label label-default">Info:</span>
                            </div><!-- /.box-tools -->
                        </div><!-- /.box-header -->
                        <div class="box-body">

                            <div class="row">
                                <div class="col-4" style="font-size:10px">
                                    Select Vendor:
                                </div>
                                <div class="col-8">
                                    @Html.DropDownList("ProdVendorId", null, htmlAttributes: new { @class = "form-control", style = "font-size:12px" })
                                    @Html.ValidationMessageFor(model => model.ProdVendorId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-4" style="font-size:10px">
                                    Select Category:
                                </div>
                                <div class="col-8">
                                    @Html.DropDownList("ProdCategoryId", null, htmlAttributes: new { @class = "form-control", style = "font-size:12px" })
                                    @Html.ValidationMessageFor(model => model.ProdCategoryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div><!-- /.box-body -->
                    </div><!-- /.box -->
                </div>
                <div class="col-md-6">
                    <div class="box box-default">
                        <div class="box-header with-border">
                            <h3 class="box-title">Product Details</h3>
                            <div class="box-tools pull-right">
                                <span class="label label-default">Details</span>
                            </div><!-- /.box-tools -->
                        </div><!-- /.box-header -->
                        <div class="box-body">
                            <div class="row">
                                <div class="col-3">Product Code:</div>
                                <div class="col-3" style="font-size:10px">
                                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control", style = "font-size:12px" } })
                                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-3">PrimaryCompponent</div>
                                <div class="col-3" style="font-size:10px">
                                    @Html.EditorFor(model => model.PrimaryComp, new { htmlAttributes = new { @class = "form-control", @placeholder = "SEPM, EPO, Etc.", style = "font-size:12px" } })
                                    @Html.ValidationMessageFor(model => model.PrimaryComp, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                @*   <div class="col-3">Product Type</div>
                                    <div class="col-3">
                                        @Html.EditorFor(model => model.ProductType, new { htmlAttributes = new { @class = "form-control", @placeholder = "Anti-Virus, URL Filter, Etc.", style = "font-size:12px" } })
                                        @Html.ValidationMessageFor(model => model.ProductType, "", new { @class = "text-danger" })
                                    </div>
                                                            <div class="col-3">Primary Comp. Desc</div>
                                                            <div class="col-3">
                                                                @Html.EditorFor(model => model.PrimaryCompDesc, new { htmlAttributes = new { @class = "form-control", @placeholder = "Component's Description", style = "font-size:12px" } })
                                                                @Html.ValidationMessageFor(model => model.PrimaryCompDesc, "", new { @class = "text-danger" })
                                                            </div> *@
                            </div>
                            <div class="row">
                                <div class="col-3">Description:</div>
                                <div class="col-3">
                                    @Html.EditorFor(model => model.ProductDesc, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Vendor's Description", style = "font-size:12px" } })
                                    @Html.ValidationMessageFor(model => model.ProductDesc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-3">Support Type:</div>
                                <div class="col-3">
                                    @Html.EditorFor(model => model.ProductTypeFamily, new { htmlAttributes = new { @class = "form-control", @placeholder = "Manage Console/Appliance...?", style = "font-size:12px" } })
                                    @Html.ValidationMessageFor(model => model.ProductTypeFamily, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div><!-- /.box-body -->
                    </div><!-- /.box -->
                </div>
                <div class="col-md-3">
                    <div class="box box-default">
                        <div class="box-header with-border">
                            <h3 class="box-title">Description and Info:</h3>
                            <div class="box-tools pull-right">
                                <span class="label label-default">8 New Messages</span>
                            </div><!-- /.box-tools -->
                        </div><!-- /.box-header -->
                        <div class="box-body">
                            <div class="row">
                                <div class="col-5" style="font-size:12px">Base (Hours) Complexity:</div>
                                <div class="col-6">
                                    @Html.EditorFor(model => model.ProductComplexityBase, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductComplexityBase, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-5" style="font-size:12px">Primary Complexity:</div>
                                <div class="col-6">
                                    @Html.EditorFor(model => model.PrimaryComplexity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PrimaryComplexity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div hidden class="row">
                                <div class="col-5">Complexity Factor:</div>
                                <div class="col-6">
                                    @Html.EditorFor(model => model.ProductComplexityFac, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductComplexityFac, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div hidden class="row">
                                <div class="col-5">Total Complexity</div>
                                <div class="col-6">
                                    @Html.EditorFor(model => model.TotalComplexity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TotalComplexity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div><!-- /.box-body -->
            </div><!-- /.box -->
        </div>
        <div class="col-md-2"></div>


        <div id="ProductsPane">

            <div class="row" style="width:95%">

                <div class="col-md-4">
                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Default Components</h3>
                            <div class="box-tools pull-right">
                                <!-- Buttons, labels, and many other things can be placed here! -->
                                <!-- Here is a label for example -->
                                <span class="label label-primary">Info:</span>
                            </div><!-- /.box-tools -->
                        </div><!-- /.box-header -->
                        <div class="box-body">
                            <div id="HighestComplexityComponent" class="row">
                                <div class="col-md-6">Name</div>
                                <div class="col-md-3">Factor</div>
                                <div class="col-md-3">Default?</div>
                            </div>
                            <div id="AvCompnent1" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component1Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component1Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac1, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component1)
                                        @Html.ValidationMessageFor(model => model.Component1, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div id="AvCompnent2" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component2Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component2Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac2, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component2)
                                        @Html.ValidationMessageFor(model => model.Component2, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div id="AvCompnent3" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component3Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component3Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac3, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac3, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component3)
                                        @Html.ValidationMessageFor(model => model.Component3, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div id="AvCompnent4" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component4Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component4Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac4, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac4, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component4)
                                        @Html.ValidationMessageFor(model => model.Component4, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div id="AvCompnent5" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component5Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component5Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac5, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac5, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component5)
                                        @Html.ValidationMessageFor(model => model.Component5, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div><!-- /.box-body -->
                        <div class="box-footer">
                            The footer of the box
                        </div><!-- box-footer -->
                    </div><!-- /.box -->
                </div>
                <div class="col-md-4">

                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Higher( Complexity ) Components</h3>
                            <div class="box-tools pull-right">
                                <!-- Buttons, labels, and many other things can be placed here! -->
                                <!-- Here is a label for example -->
                                <span class="label label-primary">Info:</span>
                            </div><!-- /.box-tools -->
                        </div><!-- /.box-header -->
                        <div class="box-body">
                            <div id="HighestComplexityComponent" class="row">
                                <div class="col-md-6">Name</div>
                                <div class="col-md-3">Factor</div>
                                <div class="col-md-3" style="text-align:left">Default?</div>
                            </div>
                            <div id="AvCompnent6" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component6Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component6Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac6, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac6, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component6)
                                        @Html.ValidationMessageFor(model => model.Component6, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div id="AvCompnent7" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component7Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component7Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac7, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac7, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component7)
                                        @Html.ValidationMessageFor(model => model.Component7, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div id="AvCompnent8" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component8Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component8Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac8, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac8, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component8)
                                        @Html.ValidationMessageFor(model => model.Component8, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div id="AvCompnent9" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component9Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component9Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac9, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac9, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component9)
                                        @Html.ValidationMessageFor(model => model.Component9, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div id="AvCompnent10" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component10Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component10Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac10, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac10, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component10)
                                        @Html.ValidationMessageFor(model => model.Component10, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div><!-- /.box-body -->
                        <div class="box-footer">
                            The footer of the box
                        </div><!-- box-footer -->
                    </div><!-- /.box -->
                </div>
                <div class="col-md-4">
                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Highest ( Complexity ) Components</h3>
                            <div class="box-tools pull-right">
                                <!-- Buttons, labels, and many other things can be placed here! -->
                                <!-- Here is a label for example -->
                                <span class="label label-primary">Info:</span>
                            </div><!-- /.box-tools -->
                        </div><!-- /.box-header -->
                        <div class="box-body">
                            <div id="HighestComplexityComponent" class="row">
                                <div class="col-md-6">Name</div>
                                <div class="col-md-3">Factor</div>
                                <div class="col-md-3">Default?</div>
                            </div>
                            <div id="AvCompnent11" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component11Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component11Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac11, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac11, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component11)
                                        @Html.ValidationMessageFor(model => model.Component11, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div id="AvCompnent12" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component12Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component12Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac12, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac12, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component12)
                                        @Html.ValidationMessageFor(model => model.Component12, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div id="AvCompnent13" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component13Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component13Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac13, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac13, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component13)
                                        @Html.ValidationMessageFor(model => model.Component13, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div id="AvCompnent14" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component14Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component14Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac14, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac14, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component14)
                                        @Html.ValidationMessageFor(model => model.Component14, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div id="AvCompnent15" class="row">
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Component15Desc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Component15Desc, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ComponentComplexityFac15, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ComponentComplexityFac15, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Component15)
                                        @Html.ValidationMessageFor(model => model.Component15, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div><!-- /.box-body -->
                        <div class="box-footer">
                            The footer of the box
                        </div><!-- box-footer -->
                    </div><!-- /.box -->
                </div>


            </div>


        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumComponents, "# Active Components:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.NumComponents, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumComponents, "", new { @class = "text-danger" })
            </div>

            <div class="col-3">Note:</div>
            <div class="col-3">
                @Html.EditorFor(model => model.ProductNote, new { htmlAttributes = new { @class = "form-control", style = "font-size:12px" } })
                @Html.ValidationMessageFor(model => model.ProductNote, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="Legend1">@Html.Partial("_ComponentComplexityFactor")</div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="https://code.jquery.com/ui/1.10.4/jquery-ui.min.js"></script>
    <script src="~/ckeditor/ckeditor.js"></script>
    <script src="~/ckeditor/adapters/jquery.js"></script>


    @*Code to Block Use of "Enter Key" from saving or entering Records*@
    <script>
        $(document).keypress(function (e) {
            if (e.keyCode === 13) {
                e.preventDefault();
                return false;
            }
        });
    </script>

    @*Style for Slider*@
    <style>
        body {
            padding-top: 50px;
            padding-bottom: 50px;
        }

        .price-box {
            margin: 0 auto;
            background: #E9E9E9;
            border-radius: 10px;
            padding: 40px 15px;
            width: 500px;
        }

        .ui-widget-content {
            border: 1px solid #bdc3c7;
            background: #e1e1e1;
            color: #222222;
            margin-top: 4px;
        }

        .ui-slider .ui-slider-handle {
            position: absolute;
            z-index: 2;
            width: 5.2em;
            height: 2.2em;
            cursor: default;
            margin: 0 -40px auto !important;
            text-align: center;
            line-height: 30px;
            color: #FFFFFF;
            font-size: 15px;
        }

            .ui-slider .ui-slider-handle .glyphicon {
                color: #FFFFFF;
                margin: 0 3px;
                font-size: 11px;
                opacity: 0.5;
            }

        .ui-corner-all {
            border-radius: 20px;
        }

        .ui-slider-horizontal .ui-slider-handle {
            top: -.9em;
        }

        .ui-state-default,
        .ui-widget-content .ui-state-default {
            border: 1px solid #f9f9f9;
            background: #3498db;
        }

        .ui-slider-horizontal .ui-slider-handle {
            margin-left: -0.5em;
        }

        .ui-slider .ui-slider-handle {
            cursor: pointer;
        }

        .ui-slider a,
        .ui-slider a:focus {
            cursor: pointer;
            outline: none;
        }

        .price, .lead p {
            font-weight: 600;
            font-size: 32px;
            display: inline-block;
            line-height: 60px;
        }

        h4.great {
            background: #00ac98;
            margin: 0 0 25px -60px;
            padding: 7px 15px;
            color: #ffffff;
            font-size: 18px;
            font-weight: 600;
            border-radius: 5px;
            display: inline-block;
            -moz-box-shadow: 2px 4px 5px 0 #ccc;
            -webkit-box-shadow: 2px 4px 5px 0 #ccc;
            box-shadow: 2px 4px 5px 0 #ccc;
        }

        .total {
            border-bottom: 1px solid #7f8c8d;
            /*display: inline;
        padding: 10px 5px;*/
            position: relative;
            padding-bottom: 20px;
        }

            .total:before {
                content: "";
                display: inline;
                position: absolute;
                left: 0;
                bottom: 5px;
                width: 100%;
                height: 3px;
                background: #7f8c8d;
                opacity: 0.5;
            }

        .price-slider {
            margin-bottom: 70px;
        }

            .price-slider span {
                font-weight: 200;
                display: inline-block;
                color: #7f8c8d;
                font-size: 13px;
            }

        .form-pricing {
            background: #ffffff;
            padding: 20px;
            border-radius: 4px;
        }

        .price-form {
            background: #ffffff;
            margin-bottom: 10px;
            padding: 20px;
            border: 1px solid #eeeeee;
            border-radius: 4px;
            /*-moz-box-shadow:    0 5px 5px 0 #ccc;
        -webkit-box-shadow: 0 5px 5px 0 #ccc;
        box-shadow:         0 5px 5px 0 #ccc;*/
        }

        .form-group {
            margin-bottom: 0;
        }

            .form-group span.price {
                font-weight: 200;
                display: inline-block;
                color: #7f8c8d;
                font-size: 14px;
            }

        .help-text {
            display: block;
            margin-top: 32px;
            margin-bottom: 10px;
            color: #737373;
            position: absolute;
            /*margin-left: 20px;*/
            font-weight: 200;
            text-align: right;
            width: 188px;
        }

        .price-form label {
            font-weight: 200;
            font-size: 21px;
        }

        img.payment {
            display: block;
            margin-left: auto;
            margin-right: auto
        }

        .ui-slider-range-min {
            background: #2980b9;
        }

        /* HR */

        hr.style {
            margin-top: 0;
            border: 0;
            border-bottom: 1px dashed #ccc;
            background: #999;
        }
    </style>

    @*Slider Control*@
    <script>
        $(document).ready(function () {
            $("#slider").slider({
                animate: true,
                value: 0,
                min: 0,
                max: 24,
                step: .25,
                slide: function (event, ui) {
                    update(1, ui.value); //changed
                }
            });

            $("#slider2").slider({
                animate: true,
                value: 1,
                min: 1,
                max: 10,
                step: 1,
                slide: function (event, ui) {
                    update(2, ui.value); //changed
                }
            });

            $("#slider3").slider({
                animate: true,
                value: 0,
                min: 0,
                max: 168,
                step: 1,
                slide: function (event, ui) {
                    update(3, ui.value); //changed
                }
            });

            //Added, set initial value.
            $("#amount").val(0);
            $("#duration").val(0);
            $("#frequency").val(0);
            $("#amount-label").text(0);
            $("#duration-label").text(0);
            $("#frequency-label").text(0);

            update();
        });

        //changed. now with parameter
        function update(slider, val) {
            //changed. Now, directly take value from ui.value. if not set (initial, will use current value.)
            var $amount = slider == 1 ? val : $("#amount").val();
            var $duration = slider == 2 ? val : $("#duration").val();
            var $frequency = slider == 3 ? val : $("#frequency").val();

            /* commented
            $amount = $( "#slider" ).slider( "value" );
            $duration = $( "#slider2" ).slider( "value" );
            */

            $total = " " + ($amount * $duration) * $frequency;
            $("#amount").val($amount);
            $("#amount-label").text($amount);
            $("#duration").val($duration);
            $("#duration-label").text($duration);
            $("#frequency").val($frequency);
            $("#frequency-label").text($frequency);
            $("#total").val($total);
            $("#total-label").text($total);

            $('#slider a').html('<label><span class="glyphicon glyphicon-chevron-left"></span> ' + $amount + ' <span class="glyphicon glyphicon-chevron-right"></span></label>');
            $('#slider2 a').html('<label><span class="glyphicon glyphicon-chevron-left"></span> ' + $duration + ' <span class="glyphicon glyphicon-chevron-right"></span></label>');
            $('#slider3 a').html('<label><span class="glyphicon glyphicon-chevron-left"></span> ' + $frequency + ' <span class="glyphicon glyphicon-chevron-right"></span></label>');
        }


    </script>

    @*CKEditor Scripts for TextArea Fields *@
    <script>
        $(function () {
            $('#my-textarea').ckeditor();
        });

    </script>

    <script>
        $(function () {
            $('#MemoProductNote').ckeditor();
        });

    </script>



}
