@model SizingToolNew2.Models.Sizing

@{
    /**/

    /**/

    ViewBag.Title = "Edit";
}

@{
    #region Calculations and variables




    // Workstation FTE Calc

    var FracHrs = .130625;
    // var NewHoursFactor = 0.07031;
    //  var CalcAvProductBase = Model.AvProduct.ProductComplexityBase;
    // var CalcLaborFTE = Model.LaborDelivery.DefaultFTE_Year;
    //   var BaseFac = (Model.AvProduct.ProductComplexityBase / Model.LaborDelivery.DefaultFTE_Year); // 0.0247619047619048
    // var AdjWkstn = (Model.NumWorkstation * FracHrs); // 577
    // var AdjSvrs = (Model.NumServer * FracHrs); // 577
    // var AdjIPs = (Model.NumIpAddress * FracHrs);
    // var SvrCalc = (FracHrs * Model.NumServer);
    var NewHoursFactor = 0.07031;
    var AppChangeFac = 0.25;



    #region Servers_Hours_Calc

    var SeversCalc = (FracHrs * Model.NumServer);

    if (Model.NumServer == 0)

    {
        Model.SrvsHoursCalc = 0;
    }

    else

        if (Model.NumServer >= 200000)

    {
        Model.SrvsHoursCalc = (((0.0275 * Model.AvProduct.ProductComplexityFac) * Model.NumServer) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_1) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

if (Model.NumServer >= 150000)

    {
        Model.SrvsHoursCalc = (((0.055 * Model.AvProduct.ProductComplexityFac) * Model.NumServer) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_1) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else


if (Model.NumServer >= 100000)

    {

        Model.SrvsHoursCalc = ((Model.NumServer) * (.14 / 12) * Model.NumMonths_1);
    }

    else


    if (Model.NumServer >= 85000)

    {

        Model.SrvsHoursCalc = ((Model.NumServer) * (.1425 / 12) * Model.NumMonths_1);
    }

    else


    if (Model.NumServer >= 75000)

    {

        Model.SrvsHoursCalc = ((Model.NumServer) * (.145 / 12) * Model.NumMonths_1);
    }

    else




if (Model.NumServer >= 50000)

    {

        Model.SrvsHoursCalc = ((Model.NumServer) * (.135 / 12) * Model.NumMonths_1);
    }

    else

if (Model.NumServer >= 42000)

    {

        Model.SrvsHoursCalc = ((Model.NumServer) * (.16 / 12) * Model.NumMonths_1);
    }

    else

if (Model.NumServer >= 37000)

    {

        Model.SrvsHoursCalc = ((Model.NumServer) * (.163 / 12) * Model.NumMonths_1);
    }

    else

if (Model.NumServer >= 35000)

    {

        Model.SrvsHoursCalc = ((Model.NumServer) * (.165 / 12) * Model.NumMonths_1);
    }

    else

if (Model.NumServer >= 25000)

    {

        Model.SrvsHoursCalc = ((Model.NumServer) * (.17 / 12) * Model.NumMonths_1);
    }

    else

if (Model.NumServer >= 15000)

    {

        Model.SrvsHoursCalc = ((Model.NumServer) * (.18 / 12) * Model.NumMonths_1);
    }


    else

if (Model.NumServer >= 10000)

    {

        Model.SrvsHoursCalc = ((Model.NumServer) * (.19 / 12) * Model.NumMonths_1);
    }


    else

if (Model.NumServer >= 5000)

    {


        Model.SrvsHoursCalc = ((Model.NumServer) * (.195 / 12) * Model.NumMonths_1);
    }

    else

if (Model.NumServer >= 3000)

    {
        Model.SrvsHoursCalc = ((Model.NumServer) * (.2 / 12) * Model.NumMonths_1);
    }

    else

    if (Model.NumServer >= 2601)
    {

        Model.SrvsHoursCalc = ((Model.NumServer) * (.21 / 12) * Model.NumMonths_1);

    }


    else

    if (Model.NumServer < 2600)

    {
        Model.SrvsHoursCalc = Model.Prod1ComplexityBase;
    }


    {

    };



    #endregion Servers_Hours_Calc

    #region Servers_Hours_Calc1

    var SeversCalc1 = (FracHrs * Model.NumServer1);

    if (Model.NumServer1 == 0)

    {
        Model.SrvsHoursCalc1 = 0;
    }

    else

        if (Model.NumServer1 >= 200000)

    {
        Model.SrvsHoursCalc1 = (((0.0275 * Model.AvProduct.ProductComplexityFac) * Model.NumServer1) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_2) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

if (Model.NumServer1 >= 150000)

    {
        Model.SrvsHoursCalc1 = (((0.055 * Model.AvProduct.ProductComplexityFac) * Model.NumServer1) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_2) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

if (Model.NumServer1 >= 100000)

    {

        Model.SrvsHoursCalc1 = ((Model.NumServer1) * (.14 / 12) * Model.NumMonths_2);
    }

    else

if (Model.NumServer1 >= 85000)

    {

        Model.SrvsHoursCalc1 = ((Model.NumServer1) * (.1425 / 12) * Model.NumMonths_2);
    }

    else
if (Model.NumServer1 >= 75000)

    {

        Model.SrvsHoursCalc1 = ((Model.NumServer1) * (.145 / 12) * Model.NumMonths_2);
    }

    else

if (Model.NumServer1 >= 50000)

    {

        Model.SrvsHoursCalc1 = ((Model.NumServer1) * (.15 / 12) * Model.NumMonths_2);
    }

    else

if (Model.NumServer1 >= 42000)

    {

        Model.SrvsHoursCalc1 = ((Model.NumServer1) * (.16 / 12) * Model.NumMonths_2);
    }

    else

if (Model.NumServer1 >= 37000)

    {

        Model.SrvsHoursCalc1 = ((Model.NumServer1) * (.163 / 12) * Model.NumMonths_2);
    }

    else

if (Model.NumServer1 >= 35000)

    {

        Model.SrvsHoursCalc1 = ((Model.NumServer1) * (.165 / 12) * Model.NumMonths_2);
    }

    else

if (Model.NumServer1 >= 25000)

    {

        Model.SrvsHoursCalc1 = ((Model.NumServer1) * (.17 / 12) * Model.NumMonths_2);
    }

    else

if (Model.NumServer1 >= 15000)

    {

        Model.SrvsHoursCalc1 = ((Model.NumServer1) * (.18 / 12) * Model.NumMonths_2);
    }


    else

if (Model.NumServer1 >= 10000)

    {

        Model.SrvsHoursCalc1 = ((Model.NumServer1) * (.19 / 12) * Model.NumMonths_2);
    }


    else

if (Model.NumServer1 >= 5000)

    {


        Model.SrvsHoursCalc1 = ((Model.NumServer1) * (.195 / 12) * Model.NumMonths_2);
    }

    else

if (Model.NumServer1 >= 3000)

    {
        Model.SrvsHoursCalc1 = ((Model.NumServer1) * (.2 / 12) * Model.NumMonths_2);
    }

    else

    if (Model.NumServer1 >= 2601)
    {

        Model.SrvsHoursCalc1 = ((Model.NumServer1) * (.21 / 12) * Model.NumMonths_2);

    }


    else

    if (Model.NumServer1 < 2600)

    {
        Model.SrvsHoursCalc1 = Model.AvProduct.ProductComplexityBase;
    }


    {

    };



    #endregion Servers_Hours_Calc1

    #region Servers_Hours_Calc2

    var SeversCalc2 = (FracHrs * Model.NumServer2);

    if (Model.NumServer2 == 0)

    {
        Model.SrvsHoursCalc2 = 0;
    }

    else

        if (Model.NumServer2 >= 200000)

    {
        Model.SrvsHoursCalc2 = (((0.0275 * Model.AvProduct.ProductComplexityFac) * Model.NumServer2) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_3) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

if (Model.NumServer2 >= 150000)

    {
        Model.SrvsHoursCalc2 = (((0.055 * Model.AvProduct.ProductComplexityFac) * Model.NumServer2) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_3) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

if (Model.NumServer2 >= 100000)

    {

        Model.SrvsHoursCalc2 = ((Model.NumServer2) * (.14 / 12) * Model.NumMonths_3);
    }

    else




if (Model.NumServer2 >= 50000)

    {

        Model.SrvsHoursCalc2 = ((Model.NumServer2) * (.15 / 12) * Model.NumMonths_3);
    }

    else

if (Model.NumServer2 >= 42000)

    {

        Model.SrvsHoursCalc2 = ((Model.NumServer2) * (.16 / 12) * Model.NumMonths_3);
    }

    else

if (Model.NumServer2 >= 37000)

    {

        Model.SrvsHoursCalc2 = ((Model.NumServer2) * (.163 / 12) * Model.NumMonths_3);
    }

    else

if (Model.NumServer2 >= 35000)

    {

        Model.SrvsHoursCalc2 = ((Model.NumServer2) * (.165 / 12) * Model.NumMonths_3);
    }

    else

if (Model.NumServer2 >= 25000)

    {

        Model.SrvsHoursCalc2 = ((Model.NumServer2) * (.17 / 12) * Model.NumMonths_3);
    }

    else

if (Model.NumServer2 >= 15000)

    {

        Model.SrvsHoursCalc2 = ((Model.NumServer2) * (.18 / 12) * Model.NumMonths_3);
    }


    else

if (Model.NumServer2 >= 10000)

    {

        Model.SrvsHoursCalc2 = ((Model.NumServer2) * (.19 / 12) * Model.NumMonths_3);
    }


    else

if (Model.NumServer2 >= 5000)

    {


        Model.SrvsHoursCalc2 = ((Model.NumServer2) * (.195 / 12) * Model.NumMonths_3);
    }

    else

if (Model.NumServer2 >= 3000)

    {
        Model.SrvsHoursCalc2 = ((Model.NumServer2) * (.2 / 12) * Model.NumMonths_3);
    }

    else

    if (Model.NumServer2 >= 2601)
    {

        Model.SrvsHoursCalc2 = ((Model.NumServer2) * (.21 / 12) * Model.NumMonths_3);

    }


    else

    if (Model.NumServer2 < 2600)

    {
        Model.SrvsHoursCalc2 = Model.AvProduct.ProductComplexityBase;
    }


    {

    };



    #endregion Servers_Hours_Calc2

    #region Servers_Hours_Calc3

    var SeversCalc3 = (FracHrs * Model.NumServer3);

    if (Model.NumServer3 == 0)

    {
        Model.SrvsHoursCalc3 = 0;
    }

    else

        if (Model.NumServer3 >= 200000)

    {
        Model.SrvsHoursCalc3 = (((0.0275 * Model.AvProduct.ProductComplexityFac) * Model.NumServer3) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_4) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

if (Model.NumServer3 >= 150000)

    {
        Model.SrvsHoursCalc3 = (((0.055 * Model.AvProduct.ProductComplexityFac) * Model.NumServer3) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_4) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

if (Model.NumServer3 >= 100000)

    {

        Model.SrvsHoursCalc3 = ((Model.NumServer3) * (.14 / 12) * Model.NumMonths_4);
    }

    else

if (Model.NumServer3 >= 50000)

    {

        Model.SrvsHoursCalc3 = ((Model.NumServer3) * (.15 / 12) * Model.NumMonths_4);
    }

    else

if (Model.NumServer3 >= 42000)

    {

        Model.SrvsHoursCalc3 = ((Model.NumServer3) * (.16 / 12) * Model.NumMonths_4);
    }

    else

if (Model.NumServer3 >= 37000)

    {

        Model.SrvsHoursCalc3 = ((Model.NumServer3) * (.163 / 12) * Model.NumMonths_4);
    }

    else

if (Model.NumServer3 >= 35000)

    {

        Model.SrvsHoursCalc3 = ((Model.NumServer3) * (.165 / 12) * Model.NumMonths_4);
    }

    else

if (Model.NumServer3 >= 25000)

    {

        Model.SrvsHoursCalc3 = ((Model.NumServer3) * (.17 / 12) * Model.NumMonths_4);
    }

    else

if (Model.NumServer3 >= 15000)

    {

        Model.SrvsHoursCalc3 = ((Model.NumServer3) * (.18 / 12) * Model.NumMonths_4);
    }


    else

if (Model.NumServer3 >= 10000)

    {

        Model.SrvsHoursCalc3 = ((Model.NumServer3) * (.19 / 12) * Model.NumMonths_4);
    }


    else

if (Model.NumServer3 >= 5000)

    {


        Model.SrvsHoursCalc3 = ((Model.NumServer3) * (.195 / 12) * Model.NumMonths_4);
    }

    else

if (Model.NumServer3 >= 3000)

    {
        Model.SrvsHoursCalc3 = ((Model.NumServer3) * (.2 / 12) * Model.NumMonths_4);
    }

    else

    if (Model.NumServer3 >= 2601)
    {

        Model.SrvsHoursCalc3 = ((Model.NumServer3) * (.21 / 12) * Model.NumMonths_4);

    }


    else

    if (Model.NumServer3 < 2600)

    {
        Model.SrvsHoursCalc3 = Model.AvProduct.ProductComplexityBase;
    }


    {

    };



    #endregion Servers_Hours_Calc3


    // Product #1......., Product Numbering is Offset by 1
    #region Workstion_Hours_Calc


    var WkstnCalc = (FracHrs * Model.NumWorkstation);

    if (Model.NumWorkstation == 0)

    {
        Model.WkstnsHoursCalc = 0;
    }

    else

    if (Model.NumWorkstation >= 200000)

    {
        Model.WkstnsHoursCalc = (((0.0275 * Model.AvProduct.ProductComplexityFac) * Model.NumWorkstation) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_1) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

    if (Model.NumWorkstation >= 150000)

    {
        Model.WkstnsHoursCalc = (((0.055 * Model.AvProduct.ProductComplexityFac) * Model.NumWorkstation) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_1) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else


    if (Model.NumWorkstation >= 100000)

    {


        Model.WkstnsHoursCalc = ((Model.NumWorkstation) * (.14 / 12) * Model.NumMonths_1);
    }


    else

        if (Model.NumWorkstation >= 50000)

    {

        Model.WkstnsHoursCalc = ((Model.NumWorkstation) * (.135 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumWorkstation >= 42000)

    {

        Model.WkstnsHoursCalc = ((Model.NumWorkstation) * (.16 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumWorkstation >= 37000)

    {

        Model.WkstnsHoursCalc = ((Model.NumWorkstation) * (.162 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumWorkstation >= 35000)

    {

        Model.WkstnsHoursCalc = ((Model.NumWorkstation) * (.165 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumWorkstation >= 25000)

    {

        Model.WkstnsHoursCalc = ((Model.NumWorkstation) * (.17 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumWorkstation >= 15000)

    {

        Model.WkstnsHoursCalc = ((Model.NumWorkstation) * (.18 / 12) * Model.NumMonths_1);

    }


    else

        if (Model.NumWorkstation >= 10000)

    {

        Model.WkstnsHoursCalc = ((Model.NumWorkstation) * (.19 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumWorkstation >= 5000)

    {

        Model.WkstnsHoursCalc = ((Model.NumWorkstation) * (.195 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumWorkstation >= 3000)

    {

        Model.WkstnsHoursCalc = ((Model.NumWorkstation) * (.2 / 12) * Model.NumMonths_1);

    }


    else

        if (Model.NumWorkstation >= 2601)
    {

        Model.WkstnsHoursCalc = ((Model.NumWorkstation) * (.21 / 12) * Model.NumMonths_1);

    }


    else

        if (Model.NumWorkstation < 2600)
    {
        Model.WkstnsHoursCalc = Model.AvProduct.ProductComplexityBase;
    }



    {

    };

    #endregion

    // Product #2......., Product Numbering is Offset by 1
    #region Workstion_Hours_Calc1


    var WkstnCalc1 = (FracHrs * Model.NumWorkstation1);

    if (Model.NumWorkstation1 == 0)

    {
        Model.WkstnsHoursCalc1 = 0;
    }

    else

    if (Model.NumWorkstation1 >= 200000)

    {
        Model.WkstnsHoursCalc1 = (((0.0275 * Model.AvProduct.ProductComplexityFac) * Model.NumWorkstation1) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_2) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

    if (Model.NumWorkstation1 >= 150000)

    {
        Model.WkstnsHoursCalc1 = (((0.055 * Model.AvProduct.ProductComplexityFac) * Model.NumWorkstation1) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_2) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else


    if (Model.NumWorkstation1 >= 100000)

    {


        Model.WkstnsHoursCalc1 = ((Model.NumWorkstation1) * (.14 / 12) * Model.NumMonths_2);
    }


    else

        if (Model.NumWorkstation1 >= 50000)

    {

        Model.WkstnsHoursCalc1 = ((Model.NumWorkstation1) * (.15 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumWorkstation1 >= 42000)

    {

        Model.WkstnsHoursCalc1 = ((Model.NumWorkstation1) * (.16 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumWorkstation1 >= 37000)

    {

        Model.WkstnsHoursCalc1 = ((Model.NumWorkstation1) * (.162 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumWorkstation1 >= 35000)

    {

        Model.WkstnsHoursCalc1 = ((Model.NumWorkstation1) * (.165 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumWorkstation1 >= 25000)

    {

        Model.WkstnsHoursCalc1 = ((Model.NumWorkstation1) * (.17 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumWorkstation1 >= 15000)

    {

        Model.WkstnsHoursCalc1 = ((Model.NumWorkstation1) * (.18 / 12) * Model.NumMonths_2);

    }


    else

        if (Model.NumWorkstation1 >= 10000)

    {

        Model.WkstnsHoursCalc1 = ((Model.NumWorkstation1) * (.19 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumWorkstation1 >= 5000)

    {

        Model.WkstnsHoursCalc1 = ((Model.NumWorkstation1) * (.195 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumWorkstation1 >= 3000)

    {

        Model.WkstnsHoursCalc1 = ((Model.NumWorkstation1) * (.2 / 12) * Model.NumMonths_2);

    }


    else

        if (Model.NumWorkstation1 >= 2601)
    {

        Model.WkstnsHoursCalc1 = ((Model.NumWorkstation1) * (.21 / 12) * Model.NumMonths_2);

    }


    else

        if (Model.NumWorkstation1 < 2600)
    {
        Model.WkstnsHoursCalc1 = Model.AvProduct.ProductComplexityBase;
    }



    {

    };

    #endregion WkstnsHoursCalc1


    // Product #3......., Product Numbering is Offset by 1
    #region Workstion_Hours_Calc2


    var WkstnCalc2 = (FracHrs * Model.NumWorkstation2);

    if (Model.NumWorkstation2 == 0)

    {
        Model.WkstnsHoursCalc2 = 0;
    }

    else

    if (Model.NumWorkstation2 >= 200000)

    {
        Model.WkstnsHoursCalc2 = (((0.0275 * Model.AvProduct.ProductComplexityFac) * Model.NumWorkstation2) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_3) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

    if (Model.NumWorkstation2 >= 150000)

    {
        Model.WkstnsHoursCalc2 = (((0.055 * Model.AvProduct.ProductComplexityFac) * Model.NumWorkstation2) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_3) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else


    if (Model.NumWorkstation2 >= 100000)

    {


        Model.WkstnsHoursCalc2 = ((Model.NumWorkstation2) * (.14 / 12) * Model.NumMonths_3);
    }


    else

        if (Model.NumWorkstation2 >= 50000)

    {

        Model.WkstnsHoursCalc2 = ((Model.NumWorkstation2) * (.15 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumWorkstation2 >= 42000)

    {

        Model.WkstnsHoursCalc2 = ((Model.NumWorkstation2) * (.16 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumWorkstation2 >= 37000)

    {

        Model.WkstnsHoursCalc2 = ((Model.NumWorkstation2) * (.162 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumWorkstation2 >= 35000)

    {

        Model.WkstnsHoursCalc2 = ((Model.NumWorkstation2) * (.165 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumWorkstation2 >= 25000)

    {

        Model.WkstnsHoursCalc2 = ((Model.NumWorkstation2) * (.17 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumWorkstation2 >= 15000)

    {

        Model.WkstnsHoursCalc2 = ((Model.NumWorkstation2) * (.18 / 12) * Model.NumMonths_3);

    }


    else

        if (Model.NumWorkstation2 >= 10000)

    {

        Model.WkstnsHoursCalc2 = ((Model.NumWorkstation2) * (.19 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumWorkstation2 >= 5000)

    {

        Model.WkstnsHoursCalc2 = ((Model.NumWorkstation2) * (.195 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumWorkstation2 >= 3000)

    {

        Model.WkstnsHoursCalc2 = ((Model.NumWorkstation2) * (.2 / 12) * Model.NumMonths_3);

    }


    else

        if (Model.NumWorkstation2 >= 2601)
    {

        Model.WkstnsHoursCalc2 = ((Model.NumWorkstation2) * (.21 / 12) * Model.NumMonths_3);

    }


    else

        if (Model.NumWorkstation2 < 2600)
    {
        Model.WkstnsHoursCalc2 = Model.AvProduct.ProductComplexityBase;
    }



    {

    };

    #endregion WkstnsHoursCalc2

    // Product #4......., Product Numbering is Offset by 1
    #region Workstion_Hours_Calc3


    var WkstnCalc3 = (FracHrs * Model.NumWorkstation3);

    if (Model.NumWorkstation3 == 0)

    {
        Model.WkstnsHoursCalc3 = 0;
    }

    else

    if (Model.NumWorkstation3 >= 200000)

    {
        Model.WkstnsHoursCalc3 = (((0.0275 * Model.AvProduct.ProductComplexityFac) * Model.NumWorkstation3) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_4) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

    if (Model.NumWorkstation3 >= 150000)

    {
        Model.WkstnsHoursCalc3 = (((0.055 * Model.AvProduct.ProductComplexityFac) * Model.NumWorkstation3) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_4) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else


    if (Model.NumWorkstation3 >= 100000)

    {


        Model.WkstnsHoursCalc3 = ((Model.NumWorkstation3) * (.14 / 12) * Model.NumMonths_4);
    }


    else

        if (Model.NumWorkstation3 >= 50000)

    {

        Model.WkstnsHoursCalc3 = ((Model.NumWorkstation3) * (.15 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumWorkstation3 >= 42000)

    {

        Model.WkstnsHoursCalc3 = ((Model.NumWorkstation3) * (.16 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumWorkstation3 >= 37000)

    {

        Model.WkstnsHoursCalc3 = ((Model.NumWorkstation3) * (.162 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumWorkstation3 >= 35000)

    {

        Model.WkstnsHoursCalc3 = ((Model.NumWorkstation3) * (.165 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumWorkstation3 >= 25000)

    {

        Model.WkstnsHoursCalc3 = ((Model.NumWorkstation3) * (.17 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumWorkstation3 >= 15000)

    {

        Model.WkstnsHoursCalc3 = ((Model.NumWorkstation3) * (.18 / 12) * Model.NumMonths_4);

    }


    else

        if (Model.NumWorkstation3 >= 10000)

    {

        Model.WkstnsHoursCalc3 = ((Model.NumWorkstation3) * (.19 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumWorkstation3 >= 5000)

    {

        Model.WkstnsHoursCalc3 = ((Model.NumWorkstation3) * (.195 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumWorkstation3 >= 3000)

    {

        Model.WkstnsHoursCalc3 = ((Model.NumWorkstation3) * (.2 / 12) * Model.NumMonths_4);

    }


    else

        if (Model.NumWorkstation3 >= 2601)
    {

        Model.WkstnsHoursCalc3 = ((Model.NumWorkstation3) * (.21 / 12) * Model.NumMonths_4);

    }


    else

        if (Model.NumWorkstation3 < 2600)
    {
        Model.WkstnsHoursCalc3 = Model.AvProduct.ProductComplexityBase;
    }



    {

    };

    #endregion WkstnsHoursCalc3



    #region IP_Hours_Calc


    var IPCalc = (FracHrs * Model.NumIpAddress);


    if (Model.NumIpAddress == 0)

    {
        Model.IPsHoursCalc = 0;
    }

    else

    if (Model.NumIpAddress >= 200000)

    {
        Model.IPsHoursCalc = ((Model.NumIpAddress) * (0.035 / 12) * Model.NumMonths_1);
    }

    else

    if (Model.NumIpAddress >= 150000)

    {
        Model.IPsHoursCalc = ((Model.NumIpAddress) * (0.038 / 12) * Model.NumMonths_1);
    }

    else


    if (Model.NumIpAddress >= 100000)

    {


        Model.IPsHoursCalc = ((Model.NumIpAddress) * (0.042 / 12) * Model.NumMonths_1);
    }


    else

        if (Model.NumIpAddress >= 50000)

    {

        Model.IPsHoursCalc = ((Model.NumIpAddress) * (0.049 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumIpAddress >= 42000)

    {

        Model.IPsHoursCalc = ((Model.NumIpAddress) * (0.050 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumIpAddress >= 37000)

    {

        Model.IPsHoursCalc = ((Model.NumIpAddress) * (0.052 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumIpAddress >= 35000)

    {

        Model.IPsHoursCalc = ((Model.NumIpAddress) * (0.054 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumIpAddress >= 25000)

    {

        Model.IPsHoursCalc = ((Model.NumIpAddress) * (0.0566 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumIpAddress >= 15000)

    {

        Model.IPsHoursCalc = ((Model.NumIpAddress) * (0.060 / 12) * Model.NumMonths_1);

    }


    else

        if (Model.NumIpAddress >= 10000)

    {

        Model.IPsHoursCalc = ((Model.NumIpAddress) * (0.0633 / 12) * Model.NumMonths_1);
    }



    else

        if (Model.NumIpAddress >= 5050)
    {
        Model.IPsHoursCalc = (((Model.AvProduct.ProductComplexityFac) * Model.NumIpAddress) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_1) / 12) + Model.AvProduct.ProductComplexityBase;


    }


    else

        if (Model.NumIpAddress < 5000)
    {
        Model.IPsHoursCalc = Model.AvProduct.ProductComplexityBase;
    }

    {

    };


    #endregion IP_Hours_Calc


    #region IP_Hours_Calc1


    var IPCalc1 = (FracHrs * Model.NumIpAddress1);


    if (Model.NumIpAddress1 == 0)

    {
        Model.IPsHoursCalc1 = 0;
    }

    else

    if (Model.NumIpAddress1 >= 200000)

    {
        Model.IPsHoursCalc1 = ((Model.NumIpAddress1) * (0.035 / 12) * Model.NumMonths_2);
    }

    else

    if (Model.NumIpAddress1 >= 150000)

    {
        Model.IPsHoursCalc1 = ((Model.NumIpAddress1) * (0.038 / 12) * Model.NumMonths_2);
    }

    else


    if (Model.NumIpAddress1 >= 100000)

    {


        Model.IPsHoursCalc1 = ((Model.NumIpAddress1) * (0.042 / 12) * Model.NumMonths_2);
    }


    else

        if (Model.NumIpAddress1 >= 50000)

    {

        Model.IPsHoursCalc1 = ((Model.NumIpAddress1) * (0.049 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumIpAddress1 >= 42000)

    {

        Model.IPsHoursCalc1 = ((Model.NumIpAddress1) * (0.050 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumIpAddress1 >= 37000)

    {

        Model.IPsHoursCalc1 = ((Model.NumIpAddress1) * (0.052 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumIpAddress1 >= 35000)

    {

        Model.IPsHoursCalc1 = ((Model.NumIpAddress1) * (0.054 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumIpAddress1 >= 25000)

    {

        Model.IPsHoursCalc1 = ((Model.NumIpAddress1) * (0.0566 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumIpAddress1 >= 15000)

    {

        Model.IPsHoursCalc1 = ((Model.NumIpAddress1) * (0.060 / 12) * Model.NumMonths_2);

    }


    else

        if (Model.NumIpAddress1 >= 10000)

    {

        Model.IPsHoursCalc1 = ((Model.NumIpAddress1) * (0.0633 / 12) * Model.NumMonths_2);
    }



    else

        if (Model.NumIpAddress1 >= 5050)
    {
        Model.IPsHoursCalc1 = ((Model.NumIpAddress1) * (0.0633 / 12) * Model.NumMonths_2);


    }


    else

        if (Model.NumIpAddress1 < 5000)
    {
        Model.IPsHoursCalc1 = Model.AvProduct.ProductComplexityBase;
    }

    {

    };


    #endregion IP_Hours_Calc1

    #region IP_Hours_Calc2


    var IPCalc2 = (FracHrs * Model.NumIpAddress2);


    if (Model.NumIpAddress2 == 0)

    {
        Model.IPsHoursCalc2 = 0;
    }

    else

    if (Model.NumIpAddress2 >= 200000)

    {
        Model.IPsHoursCalc2 = (((0.0275 * Model.AvProduct.ProductComplexityFac) * Model.NumIpAddress2) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_3) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

    if (Model.NumIpAddress2 >= 150000)

    {
        Model.IPsHoursCalc2 = (((0.055 * Model.AvProduct.ProductComplexityFac) * Model.NumIpAddress2) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_3) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else


    if (Model.NumIpAddress2 >= 100000)

    {


        Model.IPsHoursCalc2 = ((Model.NumIpAddress2) * (.14 / 12) * Model.NumMonths_3);
    }


    else

        if (Model.NumIpAddress2 >= 50000)

    {

        Model.IPsHoursCalc2 = ((Model.NumIpAddress2) * (.15 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumIpAddress2 >= 42000)

    {

        Model.IPsHoursCalc2 = ((Model.NumIpAddress2) * (.16 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumIpAddress2 >= 37000)

    {

        Model.IPsHoursCalc2 = ((Model.NumIpAddress2) * (.162 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumIpAddress2 >= 35000)

    {

        Model.IPsHoursCalc2 = ((Model.NumIpAddress2) * (.165 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumIpAddress2 >= 25000)

    {

        Model.IPsHoursCalc2 = ((Model.NumIpAddress2) * (.17 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumIpAddress2 >= 15000)

    {

        Model.IPsHoursCalc2 = ((Model.NumIpAddress2) * (.18 / 12) * Model.NumMonths_3);

    }


    else

        if (Model.NumIpAddress2 >= 10000)

    {

        Model.IPsHoursCalc2 = ((Model.NumIpAddress2) * (.19 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumIpAddress2 >= 5000)

    {

        Model.IPsHoursCalc2 = ((Model.NumIpAddress2) * (.195 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumIpAddress2 >= 3000)

    {

        Model.IPsHoursCalc2 = ((Model.NumIpAddress2) * (.2 / 12) * Model.NumMonths_3);

    }


    else

        if (Model.NumIpAddress2 >= 2600)
    {
        Model.IPsHoursCalc2 = (((Model.AvProduct.ProductComplexityFac) * Model.NumIpAddress2) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_3) / 12) + Model.AvProduct.ProductComplexityBase;


    }


    else

        if (Model.NumIpAddress2 < 2600)
    {
        Model.IPsHoursCalc2 = Model.AvProduct.ProductComplexityBase;
    }

    {

    };



    #endregion IP_Hours_Calc2

    #region IP_Hours_Calc3


    var IPCalc3 = (FracHrs * Model.NumIpAddress3);


    if (Model.NumIpAddress3 == 0)

    {
        Model.IPsHoursCalc3 = 0;
    }

    else

    if (Model.NumIpAddress3 >= 200000)

    {
        Model.IPsHoursCalc3 = (((0.0275 * Model.AvProduct.ProductComplexityFac) * Model.NumIpAddress3) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_4) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

    if (Model.NumIpAddress3 >= 150000)

    {
        Model.IPsHoursCalc3 = (((0.055 * Model.AvProduct.ProductComplexityFac) * Model.NumIpAddress3) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_4) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else


    if (Model.NumIpAddress3 >= 100000)

    {


        Model.IPsHoursCalc3 = ((Model.NumIpAddress3) * (.14 / 12) * Model.NumMonths_4);
    }


    else

        if (Model.NumIpAddress3 >= 50000)

    {

        Model.IPsHoursCalc3 = ((Model.NumIpAddress3) * (.15 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumIpAddress3 >= 42000)

    {

        Model.IPsHoursCalc3 = ((Model.NumIpAddress3) * (.16 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumIpAddress3 >= 37000)

    {

        Model.IPsHoursCalc3 = ((Model.NumIpAddress3) * (.162 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumIpAddress3 >= 35000)

    {

        Model.IPsHoursCalc3 = ((Model.NumIpAddress3) * (.165 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumIpAddress3 >= 25000)

    {

        Model.IPsHoursCalc3 = ((Model.NumIpAddress3) * (.17 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumIpAddress3 >= 15000)

    {

        Model.IPsHoursCalc3 = ((Model.NumIpAddress3) * (.18 / 12) * Model.NumMonths_4);

    }


    else

        if (Model.NumIpAddress3 >= 10000)

    {

        Model.IPsHoursCalc3 = ((Model.NumIpAddress3) * (.19 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumIpAddress3 >= 5000)

    {

        Model.IPsHoursCalc3 = ((Model.NumIpAddress3) * (.195 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumIpAddress3 >= 3000)

    {

        Model.IPsHoursCalc3 = ((Model.NumIpAddress3) * (.2 / 12) * Model.NumMonths_4);

    }


    else

        if (Model.NumIpAddress3 >= 2600)
    {
        Model.IPsHoursCalc3 = (((Model.AvProduct.ProductComplexityFac) * Model.NumIpAddress3) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_4) / 12) + Model.AvProduct.ProductComplexityBase;


    }


    else

        if (Model.NumIpAddress3 < 2600)
    {
        Model.IPsHoursCalc3 = Model.AvProduct.ProductComplexityBase;
    }

    {

    };



    #endregion IP_Hours_Calc3



    #region AddConsole_Hours_Calc


    var AddlConCalc = (FracHrs * Model.NumAddlCon);


    if (Model.NumAddlCon == 0)

    {
        Model.AddlConHoursCalc = 0;
    }

    else

    if (Model.NumAddlCon >= 200000)

    {
        Model.AddlConHoursCalc = (((0.0275 * Model.AvProduct.ProductComplexityFac) * Model.NumAddlCon) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_1) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

    if (Model.NumAddlCon >= 150000)

    {
        Model.AddlConHoursCalc = (((0.055 * Model.AvProduct.ProductComplexityFac) * Model.NumAddlCon) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_1) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else


    if (Model.NumAddlCon >= 100000)

    {


        Model.AddlConHoursCalc = ((Model.NumAddlCon) * (.14 / 12) * Model.NumMonths_1);
    }


    else

        if (Model.NumAddlCon >= 50000)

    {

        Model.AddlConHoursCalc = ((Model.NumAddlCon) * (.15 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumAddlCon >= 42000)

    {

        Model.AddlConHoursCalc = ((Model.NumAddlCon) * (.16 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumAddlCon >= 37000)

    {

        Model.AddlConHoursCalc = ((Model.NumAddlCon) * (.162 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumAddlCon >= 35000)

    {

        Model.AddlConHoursCalc = ((Model.NumAddlCon) * (.165 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumAddlCon >= 25000)

    {

        Model.AddlConHoursCalc = ((Model.NumAddlCon) * (.17 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumAddlCon >= 15000)

    {

        Model.AddlConHoursCalc = ((Model.NumAddlCon) * (.18 / 12) * Model.NumMonths_1);

    }


    else

        if (Model.NumAddlCon >= 10000)

    {

        Model.AddlConHoursCalc = ((Model.NumAddlCon) * (.19 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumAddlCon >= 5000)

    {

        Model.AddlConHoursCalc = ((Model.NumAddlCon) * (.195 / 12) * Model.NumMonths_1);
    }

    else

        if (Model.NumAddlCon >= 3000)

    {

        Model.AddlConHoursCalc = ((Model.NumAddlCon) * (.2 / 12) * Model.NumMonths_1);

    }


    else

        if (Model.NumAddlCon >= 2600)
    {
        Model.AddlConHoursCalc = (((Model.AvProduct.ProductComplexityFac) * Model.NumAddlCon) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_1) / 12) + Model.AvProduct.ProductComplexityBase;


    }


    else

        if (Model.NumAddlCon < 2600)
    {
        Model.AddlConHoursCalc = Model.AvProduct.ProductComplexityBase;
    }

    {

    };



    #endregion AddConsole_Hours_Calc

    #region AddConsole_Hours_Calc1

    var AddlConCalc1 = (FracHrs * Model.NumAddlCon1);


    if (Model.NumAddlCon1 == 0)

    {
        Model.AddlConHoursCalc1 = 0;
    }

    else

    if (Model.NumAddlCon1 >= 200000)

    {
        Model.AddlConHoursCalc1 = (((0.0275 * Model.AvProduct.ProductComplexityFac) * Model.NumAddlCon1) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_2) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

    if (Model.NumAddlCon1 >= 150000)

    {
        Model.AddlConHoursCalc1 = (((0.055 * Model.AvProduct.ProductComplexityFac) * Model.NumAddlCon1) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_2) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else


    if (Model.NumAddlCon1 >= 100000)

    {


        Model.AddlConHoursCalc1 = ((Model.NumAddlCon1) * (.14 / 12) * Model.NumMonths_2);
    }


    else

        if (Model.NumAddlCon1 >= 50000)

    {

        Model.AddlConHoursCalc1 = ((Model.NumAddlCon1) * (.15 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumAddlCon1 >= 42000)

    {

        Model.AddlConHoursCalc1 = ((Model.NumAddlCon1) * (.16 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumAddlCon1 >= 37000)

    {

        Model.AddlConHoursCalc1 = ((Model.NumAddlCon1) * (.162 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumAddlCon1 >= 35000)

    {

        Model.AddlConHoursCalc1 = ((Model.NumAddlCon1) * (.165 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumAddlCon1 >= 25000)

    {

        Model.AddlConHoursCalc1 = ((Model.NumAddlCon1) * (.17 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumAddlCon1 >= 15000)

    {

        Model.AddlConHoursCalc1 = ((Model.NumAddlCon1) * (.18 / 12) * Model.NumMonths_2);

    }


    else

        if (Model.NumAddlCon1 >= 10000)

    {

        Model.AddlConHoursCalc1 = ((Model.NumAddlCon1) * (.19 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumAddlCon1 >= 5000)

    {

        Model.AddlConHoursCalc1 = ((Model.NumAddlCon1) * (.195 / 12) * Model.NumMonths_2);
    }

    else

        if (Model.NumAddlCon1 >= 3000)

    {

        Model.AddlConHoursCalc1 = ((Model.NumAddlCon1) * (.2 / 12) * Model.NumMonths_2);

    }


    else

        if (Model.NumAddlCon1 >= 2600)
    {
        Model.AddlConHoursCalc1 = (((Model.AvProduct.ProductComplexityFac) * Model.NumAddlCon1) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_2) / 12) + Model.AvProduct.ProductComplexityBase;


    }


    else

        if (Model.NumAddlCon1 < 2600)
    {
        Model.AddlConHoursCalc1 = Model.AvProduct.ProductComplexityBase;
    }

    {

    };



    #endregion AddConsole_Hours_Calc1

    #region AddConsole_Hours_Calc2

    var AddlConCalc2 = (FracHrs * Model.NumAddlCon2);


    if (Model.NumAddlCon2 == 0)

    {
        Model.AddlConHoursCalc2 = 0;
    }

    else

    if (Model.NumAddlCon2 >= 200000)

    {
        Model.AddlConHoursCalc2 = (((0.0275 * Model.AvProduct.ProductComplexityFac) * Model.NumAddlCon2) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_3) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

    if (Model.NumAddlCon2 >= 150000)

    {
        Model.AddlConHoursCalc2 = (((0.055 * Model.AvProduct.ProductComplexityFac) * Model.NumAddlCon2) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_3) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else


    if (Model.NumAddlCon2 >= 100000)

    {


        Model.AddlConHoursCalc2 = ((Model.NumAddlCon2) * (.14 / 12) * Model.NumMonths_3);
    }


    else

        if (Model.NumAddlCon2 >= 50000)

    {

        Model.AddlConHoursCalc2 = ((Model.NumAddlCon2) * (.15 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumAddlCon2 >= 42000)

    {

        Model.AddlConHoursCalc2 = ((Model.NumAddlCon2) * (.16 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumAddlCon2 >= 37000)

    {

        Model.AddlConHoursCalc2 = ((Model.NumAddlCon2) * (.162 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumAddlCon2 >= 35000)

    {

        Model.AddlConHoursCalc2 = ((Model.NumAddlCon2) * (.165 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumAddlCon2 >= 25000)

    {

        Model.AddlConHoursCalc2 = ((Model.NumAddlCon2) * (.17 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumAddlCon2 >= 15000)

    {

        Model.AddlConHoursCalc2 = ((Model.NumAddlCon2) * (.18 / 12) * Model.NumMonths_3);

    }


    else

        if (Model.NumAddlCon2 >= 10000)

    {

        Model.AddlConHoursCalc2 = ((Model.NumAddlCon2) * (.19 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumAddlCon2 >= 5000)

    {

        Model.AddlConHoursCalc2 = ((Model.NumAddlCon2) * (.195 / 12) * Model.NumMonths_3);
    }

    else

        if (Model.NumAddlCon2 >= 3000)

    {

        Model.AddlConHoursCalc2 = ((Model.NumAddlCon2) * (.2 / 12) * Model.NumMonths_3);

    }


    else

        if (Model.NumAddlCon2 >= 2600)
    {
        Model.AddlConHoursCalc2 = (((Model.AvProduct.ProductComplexityFac) * Model.NumAddlCon2) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_3) / 12) + Model.AvProduct.ProductComplexityBase;


    }


    else

        if (Model.NumAddlCon2 < 2600)
    {
        Model.AddlConHoursCalc2 = Model.AvProduct.ProductComplexityBase;
    }

    {

    };



    #endregion AddConsole_Hours_Calc2

    #region AddConsole_Hours_Calc3

    var AddlConCalc3 = (FracHrs * Model.NumAddlCon3);


    if (Model.NumAddlCon3 == 0)

    {
        Model.AddlConHoursCalc3 = 0;
    }

    else

    if (Model.NumAddlCon3 >= 200000)

    {
        Model.AddlConHoursCalc3 = (((0.0275 * Model.AvProduct.ProductComplexityFac) * Model.NumAddlCon3) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_4) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else

    if (Model.NumAddlCon3 >= 150000)

    {
        Model.AddlConHoursCalc3 = (((0.055 * Model.AvProduct.ProductComplexityFac) * Model.NumAddlCon3) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_4) / 12) + Model.AvProduct.ProductComplexityBase;
    }

    else


    if (Model.NumAddlCon3 >= 100000)

    {


        Model.AddlConHoursCalc3 = ((Model.NumAddlCon3) * (.14 / 12) * Model.NumMonths_4);
    }


    else

        if (Model.NumAddlCon3 >= 50000)

    {

        Model.AddlConHoursCalc3 = ((Model.NumAddlCon3) * (.15 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumAddlCon3 >= 42000)

    {

        Model.AddlConHoursCalc3 = ((Model.NumAddlCon3) * (.16 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumAddlCon3 >= 37000)

    {

        Model.AddlConHoursCalc3 = ((Model.NumAddlCon3) * (.162 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumAddlCon3 >= 35000)

    {

        Model.AddlConHoursCalc3 = ((Model.NumAddlCon3) * (.165 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumAddlCon3 >= 25000)

    {

        Model.AddlConHoursCalc3 = ((Model.NumAddlCon3) * (.17 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumAddlCon3 >= 15000)

    {

        Model.AddlConHoursCalc3 = ((Model.NumAddlCon3) * (.18 / 12) * Model.NumMonths_4);

    }


    else

        if (Model.NumAddlCon3 >= 10000)

    {

        Model.AddlConHoursCalc3 = ((Model.NumAddlCon3) * (.19 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumAddlCon3 >= 5000)

    {

        Model.AddlConHoursCalc3 = ((Model.NumAddlCon3) * (.195 / 12) * Model.NumMonths_4);
    }

    else

        if (Model.NumAddlCon3 >= 3000)

    {

        Model.AddlConHoursCalc3 = ((Model.NumAddlCon3) * (.2 / 12) * Model.NumMonths_4);

    }


    else

        if (Model.NumAddlCon3 >= 2600)
    {
        Model.AddlConHoursCalc3 = (((Model.AvProduct.ProductComplexityFac) * Model.NumAddlCon3) * (Model.AvProduct.ProductComplexityFac * Model.NumMonths_4) / 12) + Model.AvProduct.ProductComplexityBase;


    }


    else

        if (Model.NumAddlCon3 < 2600)
    {
        Model.AddlConHoursCalc3 = Model.AvProduct.ProductComplexityBase;
    }

    {

    };



    #endregion AddConsole_Hours_Calc3


    #region AppChange Hours Calc


    if (Model.NumAppChange == 0)

    {
        Model.AppChangeHoursCalc = 0;
    }

    else if (Model.NumAppChange > 0)
    {
        Model.AppChangeHoursCalc = (NewHoursFactor * Model.NumAppChange) * AppChangeFac;
    }

    {

    };

    #endregion AppChange Hours Calc

    // Model.IPEndpointFTE = ((AdjIPs + Model.AvProduct.ProductComplexityBase) * (Model.AvProduct.ProductComplexityFac)) / Model.LaborDelivery.DefaultFTE_Year;





    @* Model.WorkstationFTE = (Model.AvProduct.ProductComplexityBase) * (Model.AvProduct.ProductComplexityFac) / Model.LaborDelivery.DefaultFTE_Year;*@

    #region Server FTE Calc


    if (Model.NumServer == 0)
    {
        Model.ServerFTE = 0;
    }

    else

if (Model.NumServer <= 2600)

    {
        Model.ServerFTE = 0.25;
    }

    else if (Model.NumServer >= 2601)

    {
        Model.ServerFTE = (Model.SrvsHoursCalc / Model.LaborDelivery.DefaultFTE_Year);
    }

    {
    };

    #endregion Server FTE Calc

    #region Server FTE Calc1


    if (Model.NumServer1 == 0)
    {
        Model.ServerFTE1 = 0;
    }

    else

if (Model.NumServer1 <= 2600)

    {
        Model.ServerFTE1 = 0.25;
    }

    else if (Model.NumServer1 >= 2601)

    {
        Model.ServerFTE1 = (Model.SrvsHoursCalc1 / Model.LaborDelivery.DefaultFTE_Year);
    }

    {
    };

    #endregion Server FTE Calc1

    #region Server FTE Calc2


    if (Model.NumServer2 == 0)
    {
        Model.ServerFTE2 = 0;
    }

    else

if (Model.NumServer2 <= 2600)

    {
        Model.ServerFTE2 = 0.25;
    }

    else if (Model.NumServer2 >= 2601)

    {
        Model.ServerFTE2 = (Model.SrvsHoursCalc2 / Model.LaborDelivery.DefaultFTE_Year);
    }

    {
    };

    #endregion Server FTE Calc2

    #region Server FTE Calc3


    if (Model.NumServer3 == 0)
    {
        Model.ServerFTE3 = 0;
    }

    else

if (Model.NumServer3 <= 2600)

    {
        Model.ServerFTE3 = 0.25;
    }

    else if (Model.NumServer3 >= 2601)

    {
        Model.ServerFTE3 = (Model.SrvsHoursCalc3 / Model.LaborDelivery.DefaultFTE_Year);
    }

    {
    };

    #endregion Server FTE Calc3


    #region Workstation FTE Calc

    if (Model.NumWorkstation == 0)
    {
        Model.WorkstationFTE = 0;
    }

    else

if (Model.NumWorkstation <= 2600)

    {
        Model.WorkstationFTE = 0.25;
    }

    else if (Model.NumWorkstation >= 2601)

    {
        Model.WorkstationFTE = (Model.WkstnsHoursCalc) / Model.LaborDelivery.DefaultFTE_Year;
    }

    {
    };

    #endregion Workstation FTE Calc

    #region Workstation FTE Calc1

    if (Model.NumWorkstation1 == 0)
    {
        Model.WorkstationFTE1 = 0;
    }

    else

if (Model.NumWorkstation1 <= 2600)

    {
        Model.WorkstationFTE1 = 0.25;
    }

    else if (Model.NumWorkstation1 >= 2601)

    {
        Model.WorkstationFTE1 = (Model.WkstnsHoursCalc1) / Model.LaborDelivery.DefaultFTE_Year;
    }

    {
    };

    #endregion Workstation FTE Calc1

    #region Workstation FTE Calc2

    if (Model.NumWorkstation2 == 0)
    {
        Model.WorkstationFTE2 = 0;
    }

    else

if (Model.NumWorkstation2 <= 2600)

    {
        Model.WorkstationFTE2 = 0.25;
    }

    else if (Model.NumWorkstation2 >= 2601)

    {
        Model.WorkstationFTE2 = (Model.WkstnsHoursCalc2) / Model.LaborDelivery.DefaultFTE_Year;
    }

    {
    };

    #endregion Workstation FTE Calc2

    #region Workstation FTE Calc3

    if (Model.NumWorkstation3 == 0)
    {
        Model.WorkstationFTE3 = 0;
    }

    else

if (Model.NumWorkstation3 <= 2600)

    {
        Model.WorkstationFTE3 = 0.25;
    }

    else if (Model.NumWorkstation3 >= 2601)

    {
        Model.WorkstationFTE3 = (Model.WkstnsHoursCalc3) / Model.LaborDelivery.DefaultFTE_Year;
    }

    {
    };

    #endregion Workstation FTE Calc3



    #region IpAddress FTE Calc

    if (Model.NumIpAddress == 0)
    {
        Model.IPEndpointFTE = 0;
    }

    else

if (Model.NumIpAddress <= 2600)

    {
        Model.IPEndpointFTE = 0.25;
    }

    else if (Model.NumIpAddress >= 2601)

    {
        Model.IPEndpointFTE = (Model.IPsHoursCalc) / Model.LaborDelivery.DefaultFTE_Year;
    }

    {
    };


    #endregion IpAddress FTE Calc

    #region IpAddress FTE Calc1

    if (Model.NumIpAddress1 == 0)
    {
        Model.IPEndpointFTE1 = 0;
    }

    else

if (Model.NumIpAddress1 <= 2600)

    {
        Model.IPEndpointFTE1 = 0.25;
    }

    else if (Model.NumIpAddress1 >= 2601)

    {
        Model.IPEndpointFTE1 = (Model.IPsHoursCalc1) / Model.LaborDelivery.DefaultFTE_Year;
    }

    {
    };


    #endregion IpAddress FTE Calc1

    #region IpAddress FTE Calc2

    if (Model.NumIpAddress2 == 0)
    {
        Model.IPEndpointFTE2 = 0;
    }

    else

if (Model.NumIpAddress2 <= 2600)

    {
        Model.IPEndpointFTE2 = 0.25;
    }

    else if (Model.NumIpAddress2 >= 2601)

    {
        Model.IPEndpointFTE2 = (Model.IPsHoursCalc2) / Model.LaborDelivery.DefaultFTE_Year;
    }

    {
    };


    #endregion IpAddress FTE Calc2

    #region IpAddress FTE Calc3

    if (Model.NumIpAddress3 == 0)
    {
        Model.IPEndpointFTE3 = 0;
    }

    else

if (Model.NumIpAddress3 <= 2600)

    {
        Model.IPEndpointFTE3 = 0.25;
    }

    else if (Model.NumIpAddress3 >= 2601)

    {
        Model.IPEndpointFTE3 = (Model.IPsHoursCalc3) / Model.LaborDelivery.DefaultFTE_Year;
    }

    {
    };


    #endregion IpAddress FTE Calc3



    #region AddlCon FTE Calc


    if (Model.NumAddlCon == 0)
    {
        Model.AddlConFTE = 0;
    }

    else

if (Model.NumAddlCon <= 2600)

    {
        Model.AddlConFTE = 0.25;
    }

    else

    {
        Model.AddlConFTE = Model.AddlConHoursCalc / Model.LaborDelivery.DefaultFTE_Year;

    }

    {
    };

    #endregion AddlCon FTE Calc

    #region AddlCon FTE Calc1


    if (Model.NumAddlCon1 == 0)
    {
        Model.AddlConFTE1 = 0;
    }

    else

if (Model.NumAddlCon1 <= 2600)

    {
        Model.AddlConFTE1 = 0.25;
    }

    else

    {
        Model.AddlConFTE1 = Model.AddlConHoursCalc1 / Model.LaborDelivery.DefaultFTE_Year;

    }

    {
    };

    #endregion AddlCon FTE Calc1

    #region AddlCon FTE Calc2


    if (Model.NumAddlCon2 == 0)
    {
        Model.AddlConFTE2 = 0;
    }

    else

if (Model.NumAddlCon2 <= 2600)

    {
        Model.AddlConFTE2 = 0.25;
    }

    else

    {
        Model.AddlConFTE2 = Model.AddlConHoursCalc2 / Model.LaborDelivery.DefaultFTE_Year;

    }

    {
    };

    #endregion AddlCon FTE Calc2

    #region AddlCon FTE Calc3


    if (Model.NumAddlCon3 == 0)
    {
        Model.AddlConFTE3 = 0;
    }

    else

if (Model.NumAddlCon3 <= 2600)

    {
        Model.AddlConFTE3 = 0.25;
    }

    else

    {
        Model.AddlConFTE3 = Model.AddlConHoursCalc3 / Model.LaborDelivery.DefaultFTE_Year;

    }

    {
    };

    #endregion AddlCon FTE Calc3


    #region AppChange FTE Calc


    if (Model.NumAppChange == 0)
    {
        Model.AppChangeFTE = 0;
    }

    else

    {
        Model.AppChangeFTE = (Model.AppChangeHoursCalc / Model.LaborDelivery.DefaultFTE_Year);

    }

    {
    };

    #endregion AAppChange FTE Calc




    //Calc Product Complexity
    #region Calc Product Complexity


    // Product Complexity Computations
    #region Product Complexity Computations

    #endregion Product Complexity Computations
    // var CombinedComplexity = Model.AvProduct.ComponentComplexityFac2;

    var C1Complex1 = (Model.AvProduct.ComponentComplexityFac1 + Model.AvProduct.ComponentComplexityFac2 + Model.AvProduct.ComponentComplexityFac3 + Model.AvProduct.ComponentComplexityFac4 + Model.AvProduct.ComponentComplexityFac5 + Model.AvProduct.ComponentComplexityFac7 + Model.AvProduct.ComponentComplexityFac1);

    double Complex1 = (0);
    double Complex2 = (0);
    double Complex3 = (0);
    double Complex4 = (0);
    double Complex5 = (0);
    double Complex6 = (0);
    double Complex7 = (0);
    double Complex8 = (0);
    double Complex9 = (0);
    double Complex10 = (0);
    double Complex11 = (0);
    double Complex12 = (0);
    double Complex13 = (0);
    double Complex14 = (0);
    double Complex15 = (0);


    if (Model.Prod1Component1 == true)
    {
        Complex1 = Model.AvProduct.ComponentComplexityFac1;
    }
    else
    {
        Complex1 = 0;
    };

    // Component2 calc
    if (Model.Prod1Component2 == true)
    {
        Complex2 = Model.AvProduct.ComponentComplexityFac2;
    }
    else
    {
        Complex2 = 0;
    };


    // Component3 calc
    if (Model.Prod1Component3 == true)
    {
        Complex3 = Model.AvProduct.ComponentComplexityFac3;
    }
    else
    {
        Complex3 = 0;
    };


    // Component4 calc
    if (Model.Prod1Component4 == true)
    {
        Complex4 = Model.AvProduct.ComponentComplexityFac4;
    }
    else
    {
        Complex4 = 0;
    };


    // Component5 calc
    if (Model.Prod1Component5 == true)
    {
        Complex5 = Model.AvProduct.ComponentComplexityFac5;
    }
    else
    {
        Complex5 = 0;
    };


    // Component6 calc
    if (Model.Prod1Component6 == true)
    {
        Complex6 = Model.AvProduct.ComponentComplexityFac6;
    }
    else
    {
        Complex6 = 0;
    };


    // Component7 calc
    if (Model.Prod1Component7 == true)
    {
        Complex7 = Model.AvProduct.ComponentComplexityFac7;
    }
    else
    {
        Complex7 = 0;
    };


    // Component8 calc
    if (Model.Prod1Component8 == true)
    {
        Complex8 = Model.AvProduct.ComponentComplexityFac8;
    }
    else
    {
        Complex8 = 0;
    };


    // Component9 calc
    if (Model.Prod1Component9 == true)
    {
        Complex9 = Model.AvProduct.ComponentComplexityFac9;
    }
    else
    {
        Complex9 = 0;
    };

    // Component10 calc
    if (Model.Prod1Component10 == true)
    {
        Complex10 = Model.AvProduct.ComponentComplexityFac10;
    }
    else
    {
        Complex10 = 0;
    };

    // Component11 calc
    if (Model.Prod1Component11 == true)
    {
        Complex11 = Model.AvProduct.ComponentComplexityFac11;
    }
    else
    {
        Complex11 = 0;
    };

    // Component12 calc
    if (Model.Prod1Component12 == true)
    {
        Complex12 = Model.AvProduct.ComponentComplexityFac12;
    }
    else
    {
        Complex12 = 0;
    };

    // Component13 calc
    if (Model.Prod1Component13 == true)
    {
        Complex13 = Model.AvProduct.ComponentComplexityFac13;
    }
    else
    {
        Complex13 = 0;
    };

    // Component14 calc
    if (Model.Prod1Component14 == true)
    {
        Complex14 = Model.AvProduct.ComponentComplexityFac14;
    }
    else
    {
        Complex14 = 0;
    };

    // Component15 calc
    if (Model.Prod1Component15 == true)
    {
        Complex15 = Model.AvProduct.ComponentComplexityFac15;
    }
    else
    {
        Complex15 = 0;
    };


    #region - Components Calc Section


    //Product #1





    #region Product #1


    // Component Hours#1 Calc


    #region - Component Hours#1 Calc

    //Workstation




    if (Model.Prod1Component1_Wkstn == true)
    {
        Model.Prod1Component1_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac1);
    }
    else
    {
        Model.Prod1Component1_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component1_Svr == true)
    {
        Model.Prod1Component1_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac1);
    }
    else
    {
        Model.Prod1Component1_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component1_IP == true)
    {
        Model.Prod1Component1_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac1) * Model.Prod1Component_Qty1;
    }
    else
    {
        Model.Prod1Component1_IPHours = 0;
    };


    Model.Prod1ComponentHours1 = (Model.Prod1Component1_WkstnHours + Model.Prod1Component1_SvrHours + Model.Prod1Component1_IPHours);

    #endregion - - Component Hours#1 Calc


    // Component Hours#2 Calc

    //   var Prod2ComponentComplexityFac1_2 = 0;

    #region - Component Hours#2 Calc

    //Workstation
    if (Model.Prod1Component2_Wkstn == true)
    {
        Model.Prod1Component2_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac2);

    }
    else
    {
        Model.Prod1Component2_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component2_Svr == true)
    {
        Model.Prod1Component2_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac2);
    }
    else
    {
        Model.Prod1Component2_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component2_IP == true)
    {
        Model.Prod1Component2_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac2) * Model.Prod1Component_Qty2;
    }
    else
    {
        Model.Prod1Component2_IPHours = 0;
    };


    Model.Prod1ComponentHours2 = (Model.Prod1Component2_WkstnHours + Model.Prod1Component2_SvrHours + Model.Prod1Component2_IPHours);

    #endregion -Component Hours#2 Calc


    // Component Hours#3 Calc

    #region - Component Hours#3 Calc
    //Workstation
    if (Model.Prod1Component3_Wkstn == true)
    {
        Model.Prod1Component3_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac3);
    }
    else
    {
        Model.Prod1Component3_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component3_Svr == true)
    {
        Model.Prod1Component3_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac3);
    }
    else
    {
        Model.Prod1Component3_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component3_IP == true)
    {
        Model.Prod1Component3_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac3) * Model.Prod1Component_Qty3;
    }
    else
    {
        Model.Prod1Component3_IPHours = 0;
    };


    Model.Prod1ComponentHours3 = (Model.Prod1Component3_WkstnHours + Model.Prod1Component3_SvrHours + Model.Prod1Component3_IPHours);

    #endregion - Component Hours#3 Calc

    // Component Hours#4 Calc

    #region - Component Hours#4 Calc


    //Workstation
    if (Model.Prod1Component4_Wkstn == true)
    {
        Model.Prod1Component4_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac4);
    }
    else
    {
        Model.Prod1Component4_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component4_Svr == true)
    {
        Model.Prod1Component4_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac4);
    }
    else
    {
        Model.Prod1Component4_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component4_IP == true)
    {
        Model.Prod1Component4_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac4) * Model.Prod1Component_Qty4;
    }
    else
    {
        Model.Prod1Component4_IPHours = 0;
    };


    Model.Prod1ComponentHours4 = (Model.Prod1Component4_WkstnHours + Model.Prod1Component4_SvrHours + Model.Prod1Component4_IPHours);

    #endregion - Component Hours#4 Calc

    // Component Hours#5 Calc

    #region - Component Hours#5 Calc

    //Workstation
    if (Model.Prod1Component5_Wkstn == true)
    {
        Model.Prod1Component5_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac5);
    }
    else
    {
        Model.Prod1Component5_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component5_Svr == true)
    {
        Model.Prod1Component5_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac5);
    }
    else
    {
        Model.Prod1Component5_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component5_IP == true)
    {
        Model.Prod1Component5_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac5) * Model.Prod1Component_Qty5;
    }
    else
    {
        Model.Prod1Component5_IPHours = 0;
    };


    Model.Prod1ComponentHours5 = (Model.Prod1Component5_WkstnHours + Model.Prod1Component5_SvrHours + Model.Prod1Component5_IPHours);

    #endregion - Component Hours#5 Calc


    // Component Hours#6 Calc

    #region - Component Hours#6 Calc

    //Workstation
    if (Model.Prod1Component6_Wkstn == true)
    {
        Model.Prod1Component6_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac6);
    }
    else
    {
        Model.Prod1Component6_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component6_Svr == true)
    {
        Model.Prod1Component6_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac6);
    }
    else
    {
        Model.Prod1Component6_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component6_IP == true)
    {
        Model.Prod1Component6_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac6) * Model.Prod1Component_Qty6;
    }
    else
    {
        Model.Prod1Component6_IPHours = 0;
    };


    Model.Prod1ComponentHours6 = (Model.Prod1Component6_WkstnHours + Model.Prod1Component6_SvrHours + Model.Prod1Component6_IPHours);

    #endregion - Component Hours#6 Calc


    // Component Hours#7 Calc

    #region - Component Hours#7 Calc

    //Workstation
    if (Model.Prod1Component7_Wkstn == true)
    {
        Model.Prod1Component7_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac7);
    }
    else
    {
        Model.Prod1Component7_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component7_Svr == true)
    {
        Model.Prod1Component7_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac7);
    }
    else
    {
        Model.Prod1Component7_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component7_IP == true)
    {
        Model.Prod1Component7_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac7) * Model.Prod1Component_Qty7;
    }
    else
    {
        Model.Prod1Component7_IPHours = 0;
    };


    Model.Prod1ComponentHours7 = (Model.Prod1Component7_WkstnHours + Model.Prod1Component7_SvrHours + Model.Prod1Component7_IPHours);

    #endregion - Component Hours#7 Calc


    // Component Hours#8 Calc

    #region - Component Hours#8 Calc

    //Workstation
    if (Model.Prod1Component8_Wkstn == true)
    {
        Model.Prod1Component8_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac8);
    }
    else
    {
        Model.Prod1Component8_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component8_Svr == true)
    {
        Model.Prod1Component8_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac8);
    }
    else
    {
        Model.Prod1Component8_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component8_IP == true)
    {
        Model.Prod1Component8_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac8) * Model.Prod1Component_Qty8;
    }
    else
    {
        Model.Prod1Component8_IPHours = 0;
    };


    Model.Prod1ComponentHours8 = (Model.Prod1Component8_WkstnHours + Model.Prod1Component8_SvrHours + Model.Prod1Component8_IPHours);

    #endregion - Component Hours#8 Calc



    // Component Hours9 Calc

    #region - Component Hours#9 Calc

    //Workstation
    if (Model.Prod1Component9_Wkstn == true)
    {
        Model.Prod1Component9_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac9);
    }
    else
    {
        Model.Prod1Component9_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component9_Svr == true)
    {
        Model.Prod1Component9_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac9);
    }
    else
    {
        Model.Prod1Component9_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component9_IP == true)
    {
        Model.Prod1Component9_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac9) * Model.Prod1Component_Qty9;
    }
    else
    {
        Model.Prod1Component9_IPHours = 0;
    };


    Model.Prod1ComponentHours9 = (Model.Prod1Component9_WkstnHours + Model.Prod1Component9_SvrHours + Model.Prod1Component9_IPHours);

    #endregion - Component Hours#9 Calc


    // Component Hours10 Calc

    #region - Component Hours#10 Calc

    //Workstation
    if (Model.Prod1Component10_Wkstn == true)
    {
        Model.Prod1Component10_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac10);
    }
    else
    {
        Model.Prod1Component10_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component10_Svr == true)
    {
        Model.Prod1Component10_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac10);
    }
    else
    {
        Model.Prod1Component10_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component10_IP == true)
    {
        Model.Prod1Component10_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac10) * Model.Prod1Component_Qty10;
    }
    else
    {
        Model.Prod1Component10_IPHours = 0;
    };


    Model.Prod1ComponentHours10 = (Model.Prod1Component10_WkstnHours + Model.Prod1Component10_SvrHours + Model.Prod1Component10_IPHours);

    #endregion - Component Hours#10 Calc


    // Component Hours11 Calc

    #region - Component Hours#11 Calc

    //Workstation
    if (Model.Prod1Component11_Wkstn == true)
    {
        Model.Prod1Component11_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac11);
    }
    else
    {
        Model.Prod1Component11_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component11_Svr == true)
    {
        Model.Prod1Component11_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac11);
    }
    else
    {
        Model.Prod1Component11_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component11_IP == true)
    {
        Model.Prod1Component11_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac11) * Model.Prod1Component_Qty11;
    }
    else
    {
        Model.Prod1Component11_IPHours = 0;
    };


    Model.Prod1ComponentHours11 = (Model.Prod1Component11_WkstnHours + Model.Prod1Component11_SvrHours + Model.Prod1Component11_IPHours);

    #endregion - Component Hours#11 Calc

    // Component Hours12 Calc

    #region - Component Hours#12 Calc

    //Workstation
    if (Model.Prod1Component12_Wkstn == true)
    {
        Model.Prod1Component12_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac12);
    }
    else
    {
        Model.Prod1Component12_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component12_Svr == true)
    {
        Model.Prod1Component12_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac12);
    }
    else
    {
        Model.Prod1Component12_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component12_IP == true)
    {
        Model.Prod1Component12_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac12) * Model.Prod1Component_Qty12;
    }
    else
    {
        Model.Prod1Component12_IPHours = 0;
    };


    Model.Prod1ComponentHours12 = (Model.Prod1Component12_WkstnHours + Model.Prod1Component12_SvrHours + Model.Prod1Component12_IPHours);

    #endregion - Component Hours#12 Calc


    // Component Hours13 Calc

    #region - Component Hours#13 Calc

    //Workstation
    if (Model.Prod1Component13_Wkstn == true)
    {
        Model.Prod1Component13_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac13);
    }
    else
    {
        Model.Prod1Component13_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component13_Svr == true)
    {
        Model.Prod1Component13_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac13);
    }
    else
    {
        Model.Prod1Component13_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component13_IP == true)
    {
        Model.Prod1Component13_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac13) * Model.Prod1Component_Qty13;
    }
    else
    {
        Model.Prod1Component13_IPHours = 0;
    };


    Model.Prod1ComponentHours13 = (Model.Prod1Component13_WkstnHours + Model.Prod1Component13_SvrHours + Model.Prod1Component13_IPHours);

    #endregion - Component Hours#13 Calc


    // Component Hours14 Calc

    #region - Component Hours#14 Calc

    //Workstation
    if (Model.Prod1Component14_Wkstn == true)
    {
        Model.Prod1Component14_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac14);
    }
    else
    {
        Model.Prod1Component14_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component14_Svr == true)
    {
        Model.Prod1Component14_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac14);
    }
    else
    {
        Model.Prod1Component14_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component14_IP == true)
    {
        Model.Prod1Component14_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac14) * Model.Prod1Component_Qty14;
    }
    else
    {
        Model.Prod1Component14_IPHours = 0;
    };


    Model.Prod1ComponentHours14 = (Model.Prod1Component14_WkstnHours + Model.Prod1Component14_SvrHours + Model.Prod1Component14_IPHours);

    #endregion - Component Hours#14 Calc


    // Component Hours15 Calc

    #region - Component Hours#15 Calc

    //Workstation
    if (Model.Prod1Component15_Wkstn == true)
    {
        Model.Prod1Component15_WkstnHours = (Model.WkstnsHoursCalc * Model.AvProduct.ComponentComplexityFac15);
    }
    else
    {
        Model.Prod1Component15_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod1Component15_Svr == true)
    {
        Model.Prod1Component15_SvrHours = (Model.SrvsHoursCalc * Model.AvProduct.ComponentComplexityFac15);
    }
    else
    {
        Model.Prod1Component15_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod1Component15_IP == true)
    {
        Model.Prod1Component15_IPHours = (Model.IPsHoursCalc * Model.AvProduct.ComponentComplexityFac15) * Model.Prod1Component_Qty15;
    }
    else
    {
        Model.Prod1Component15_IPHours = 0;
    };


    Model.Prod1ComponentHours15 = (Model.Prod1Component15_WkstnHours + Model.Prod1Component15_SvrHours + Model.Prod1Component15_IPHours);

    #endregion - Component Hours#15 Calc


    #endregion Product #1





    //Product #2
    #region Product #2


    #region - Component Hours#1 Calc

    //Workstation
    if (Model.Prod2Component1_Wkstn == true)
    {
        Model.Prod2Component1_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac1_1);
    }
    else
    {
        Model.Prod2Component1_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component1_Svr == true)
    {
        Model.Prod2Component1_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac1_1);
    }
    else
    {
        Model.Prod2Component1_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component1_IP == true)
    {
        Model.Prod2Component1_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac1_1) * Model.Prod2Component_Qty1;
    }
    else
    {
        Model.Prod2Component1_IPHours = 0;
    };


    Model.Prod2ComponentHours1 = (Model.Prod2Component1_WkstnHours + Model.Prod2Component1_SvrHours + Model.Prod2Component1_IPHours);

    #endregion - Component Hours#1 Calc

    #region -  Component Hours#2 Calc
    // Component Hours#2 Calc

    //Workstation
    if (Model.Prod2Component2_Wkstn == true)
    {
        Model.Prod2Component2_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac2_1);
    }
    else
    {
        Model.Prod2Component2_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component2_Svr == true)
    {
        Model.Prod2Component2_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac2_1);
    }
    else
    {
        Model.Prod2Component2_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component2_IP == true)
    {
        Model.Prod2Component2_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac2_1) * Model.Prod2Component_Qty2;
    }
    else
    {
        Model.Prod2Component2_IPHours = 0;
    };

    Model.Prod2ComponentHours2 = (Model.Prod2Component2_WkstnHours + Model.Prod2Component2_SvrHours + Model.Prod2Component2_IPHours);

    #endregion - Component Hours#3 Calc

    #region - Component Hours#3 Calc
    // Component Hours#3 Calc

    //Workstation
    if (Model.Prod2Component3_Wkstn == true)
    {
        Model.Prod2Component3_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac3_1);
    }
    else
    {
        Model.Prod2Component3_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component3_Svr == true)
    {
        Model.Prod2Component3_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac3_1);
    }
    else
    {
        Model.Prod2Component3_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component3_IP == true)
    {
        Model.Prod2Component3_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac3_1) * Model.Prod2Component_Qty3;
    }
    else
    {
        Model.Prod2Component3_IPHours = 0;
    };

    Model.Prod2ComponentHours3 = (Model.Prod2Component3_WkstnHours + Model.Prod2Component3_SvrHours + Model.Prod2Component3_IPHours);
    #endregion

    #region - Component Hours#4 Calc
    // Component Hours#3 Calc

    //Workstation
    if (Model.Prod2Component4_Wkstn == true)
    {
        Model.Prod2Component4_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac4_1);
    }
    else
    {
        Model.Prod2Component4_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component4_Svr == true)
    {
        Model.Prod2Component4_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac4_1);
    }
    else
    {
        Model.Prod2Component4_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component4_IP == true)
    {
        Model.Prod2Component4_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac4_1) * Model.Prod2Component_Qty4;
    }
    else
    {
        Model.Prod2Component4_IPHours = 0;
    };

    Model.Prod2ComponentHours4 = (Model.Prod2Component4_WkstnHours + Model.Prod2Component4_SvrHours + Model.Prod2Component4_IPHours);
    #endregion

    #region - Component Hours#5 Calc
    // Component Hours#5 Calc

    //Workstation
    if (Model.Prod2Component5_Wkstn == true)
    {
        Model.Prod2Component5_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac5_1);
    }
    else
    {
        Model.Prod2Component5_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component5_Svr == true)
    {
        Model.Prod2Component5_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac5_1);
    }
    else
    {
        Model.Prod2Component5_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component5_IP == true)
    {
        Model.Prod2Component5_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac5_1) * Model.Prod2Component_Qty5;
    }
    else
    {
        Model.Prod2Component5_IPHours = 0;
    };

    Model.Prod2ComponentHours5 = (Model.Prod2Component5_WkstnHours + Model.Prod2Component5_SvrHours + Model.Prod2Component5_IPHours);
    #endregion

    #region - Component Hours#6 Calc
    // Component Hours#6 Calc

    //Workstation
    if (Model.Prod2Component6_Wkstn == true)
    {
        Model.Prod2Component6_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac6_1);
    }
    else
    {
        Model.Prod2Component6_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component6_Svr == true)
    {
        Model.Prod2Component6_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac6_1);
    }
    else
    {
        Model.Prod2Component6_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component6_IP == true)
    {
        Model.Prod2Component6_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac6_1) * Model.Prod2Component_Qty6;
    }
    else
    {
        Model.Prod2Component6_IPHours = 0;
    };

    Model.Prod2ComponentHours6 = (Model.Prod2Component6_WkstnHours + Model.Prod2Component6_SvrHours + Model.Prod2Component6_IPHours);
    #endregion

    #region - Component Hours#7 Calc
    // Component Hours#7 Calc

    //Workstation
    if (Model.Prod2Component7_Wkstn == true)
    {
        Model.Prod2Component7_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac7_1);
    }
    else
    {
        Model.Prod2Component7_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component7_Svr == true)
    {
        Model.Prod2Component7_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac7_1);
    }
    else
    {
        Model.Prod2Component7_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component7_IP == true)
    {
        Model.Prod2Component7_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac7_1) * Model.Prod2Component_Qty7;
    }
    else
    {
        Model.Prod2Component7_IPHours = 0;
    };

    Model.Prod2ComponentHours7 = (Model.Prod2Component7_WkstnHours + Model.Prod2Component7_SvrHours + Model.Prod2Component7_IPHours);
    #endregion

    #region - Component Hours#8 Calc
    // Component Hours#5 Calc

    //Workstation
    if (Model.Prod2Component8_Wkstn == true)
    {
        Model.Prod2Component8_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac8_1);
    }
    else
    {
        Model.Prod2Component8_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component8_Svr == true)
    {
        Model.Prod2Component8_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac8_1);
    }
    else
    {
        Model.Prod2Component8_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component8_IP == true)
    {
        Model.Prod2Component8_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac8_1) * Model.Prod2Component_Qty8;
    }
    else
    {
        Model.Prod2Component8_IPHours = 0;
    };

    Model.Prod2ComponentHours8 = (Model.Prod2Component8_WkstnHours + Model.Prod2Component8_SvrHours + Model.Prod2Component8_IPHours);
    #endregion

    #region - Component Hours9 Calc
    // Component Hours#9 Calc

    //Workstation
    if (Model.Prod2Component9_Wkstn == true)
    {
        Model.Prod2Component9_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac9_1);
    }
    else
    {
        Model.Prod2Component9_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component9_Svr == true)
    {
        Model.Prod2Component9_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac9_1);
    }
    else
    {
        Model.Prod2Component9_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component9_IP == true)
    {
        Model.Prod2Component9_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac9_1) * Model.Prod2Component_Qty9;
    }
    else
    {
        Model.Prod2Component9_IPHours = 0;
    };

    Model.Prod2ComponentHours9 = (Model.Prod2Component9_WkstnHours + Model.Prod2Component9_SvrHours + Model.Prod2Component9_IPHours);
    #endregion

    #region - Component Hours#10 Calc
    // Component Hours#10 Calc

    //Workstation
    if (Model.Prod2Component10_Wkstn == true)
    {
        Model.Prod2Component10_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac10_1);
    }
    else
    {
        Model.Prod2Component10_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component10_Svr == true)
    {
        Model.Prod2Component10_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac10_1);
    }
    else
    {
        Model.Prod2Component10_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component10_IP == true)
    {
        Model.Prod2Component10_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac10_1) * Model.Prod2Component_Qty10;
    }
    else
    {
        Model.Prod2Component10_IPHours = 0;
    };

    Model.Prod2ComponentHours10 = (Model.Prod2Component10_WkstnHours + Model.Prod2Component10_SvrHours + Model.Prod2Component10_IPHours);
    #endregion

    #region - Component Hours#11 Calc
    // Component Hours#11 Calc

    //Workstation
    if (Model.Prod2Component11_Wkstn == true)
    {
        Model.Prod2Component11_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac11_1);
    }
    else
    {
        Model.Prod2Component11_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component11_Svr == true)
    {
        Model.Prod2Component11_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac11_1);
    }
    else
    {
        Model.Prod2Component11_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component11_IP == true)
    {
        Model.Prod2Component11_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac11_1) * Model.Prod2Component_Qty11;
    }
    else
    {
        Model.Prod2Component11_IPHours = 0;
    };

    Model.Prod2ComponentHours11 = (Model.Prod2Component11_WkstnHours + Model.Prod2Component11_SvrHours + Model.Prod2Component11_IPHours);
    #endregion

    #region - Component Hours#12 Calc
    // Component Hours#12 Calc

    //Workstation
    if (Model.Prod2Component12_Wkstn == true)
    {
        Model.Prod2Component12_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac12_1);
    }
    else
    {
        Model.Prod2Component12_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component12_Svr == true)
    {
        Model.Prod2Component12_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac12_1);
    }
    else
    {
        Model.Prod2Component12_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component12_IP == true)
    {
        Model.Prod2Component12_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac12_1) * Model.Prod2Component_Qty12;
    }
    else
    {
        Model.Prod2Component12_IPHours = 0;
    };

    Model.Prod2ComponentHours12 = (Model.Prod2Component12_WkstnHours + Model.Prod2Component12_SvrHours + Model.Prod2Component12_IPHours);
    #endregion

    #region - Component Hours#13 Calc
    // Component Hours#13 Calc

    //Workstation
    if (Model.Prod2Component13_Wkstn == true)
    {
        Model.Prod2Component13_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac13_1);
    }
    else
    {
        Model.Prod2Component13_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component13_Svr == true)
    {
        Model.Prod2Component13_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac13_1);
    }
    else
    {
        Model.Prod2Component13_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component13_IP == true)
    {
        Model.Prod2Component13_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac13_1) * Model.Prod2Component_Qty13;
    }
    else
    {
        Model.Prod2Component13_IPHours = 0;
    };

    Model.Prod2ComponentHours13 = (Model.Prod2Component13_WkstnHours + Model.Prod2Component13_SvrHours + Model.Prod2Component13_IPHours);
    #endregion


    #region - Component Hours#14 Calc
    // Component Hours#14 Calc

    //Workstation
    if (Model.Prod2Component14_Wkstn == true)
    {
        Model.Prod2Component14_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac14_1);
    }
    else
    {
        Model.Prod2Component14_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component14_Svr == true)
    {
        Model.Prod2Component14_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac14_1);
    }
    else
    {
        Model.Prod2Component14_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component14_IP == true)
    {
        Model.Prod2Component14_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac14_1) * Model.Prod2Component_Qty14;
    }
    else
    {
        Model.Prod2Component14_IPHours = 0;
    };

    Model.Prod2ComponentHours14 = (Model.Prod2Component14_WkstnHours + Model.Prod2Component14_SvrHours + Model.Prod2Component14_IPHours);
    #endregion


    #region - Component Hours#15 Calc
    // Component Hours#15 Calc

    //Workstation
    if (Model.Prod2Component15_Wkstn == true)
    {
        Model.Prod2Component15_WkstnHours = (Model.WkstnsHoursCalc1 * Model.Prod2ComponentComplexityFac15_1);
    }
    else
    {
        Model.Prod2Component15_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod2Component15_Svr == true)
    {
        Model.Prod2Component15_SvrHours = (Model.SrvsHoursCalc1 * Model.Prod2ComponentComplexityFac15_1);
    }
    else
    {
        Model.Prod2Component15_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod2Component15_IP == true)
    {
        Model.Prod2Component15_IPHours = (Model.IPsHoursCalc1 * Model.Prod2ComponentComplexityFac15_1) * Model.Prod2Component_Qty15;
    }
    else
    {
        Model.Prod2Component15_IPHours = 0;
    };

    Model.Prod2ComponentHours15 = (Model.Prod2Component15_WkstnHours + Model.Prod2Component15_SvrHours + Model.Prod2Component15_IPHours);
    #endregion





    #endregion Product #2


    //Product #3


    #region - Component Hours#1 Calc

    //Workstation
    if (Model.Prod3Component1_Wkstn == true)
    {
        Model.Prod3Component1_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac1_1);
    }
    else
    {
        Model.Prod3Component1_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component1_Svr == true)
    {
        Model.Prod3Component1_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac1_1);
    }
    else
    {
        Model.Prod3Component1_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component1_IP == true)
    {
        Model.Prod3Component1_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac1_1) * Model.Prod3Component_Qty1;
    }
    else
    {
        Model.Prod3Component1_IPHours = 0;
    };


    Model.Prod3ComponentHours1 = (Model.Prod3Component1_WkstnHours + Model.Prod3Component1_SvrHours + Model.Prod3Component1_IPHours);

    #endregion - Component Hours#1 Calc

    #region -  Component Hours#2 Calc
    // Component Hours#2 Calc

    //Workstation
    if (Model.Prod3Component2_Wkstn == true)
    {
        Model.Prod3Component2_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac2_1);
    }
    else
    {
        Model.Prod3Component2_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component2_Svr == true)
    {
        Model.Prod3Component2_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac2_1);
    }
    else
    {
        Model.Prod3Component2_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component2_IP == true)
    {
        Model.Prod3Component2_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac2_1) * Model.Prod3Component_Qty2;
    }
    else
    {
        Model.Prod3Component2_IPHours = 0;
    };

    Model.Prod3ComponentHours2 = (Model.Prod3Component2_WkstnHours + Model.Prod3Component2_SvrHours + Model.Prod3Component2_IPHours);

    #endregion - Component Hours#3 Calc

    #region - Component Hours#3 Calc
    // Component Hours#3 Calc

    //Workstation
    if (Model.Prod3Component3_Wkstn == true)
    {
        Model.Prod3Component3_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac3_1);
    }
    else
    {
        Model.Prod3Component3_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component3_Svr == true)
    {
        Model.Prod3Component3_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac3_1);
    }
    else
    {
        Model.Prod3Component3_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component3_IP == true)
    {
        Model.Prod3Component3_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac3_1) * Model.Prod3Component_Qty3;
    }
    else
    {
        Model.Prod3Component3_IPHours = 0;
    };

    Model.Prod3ComponentHours3 = (Model.Prod3Component3_WkstnHours + Model.Prod3Component3_SvrHours + Model.Prod3Component3_IPHours);
    #endregion

    #region - Component Hours#4 Calc
    // Component Hours#3 Calc

    //Workstation
    if (Model.Prod3Component4_Wkstn == true)
    {
        Model.Prod3Component4_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac4_1);
    }
    else
    {
        Model.Prod3Component4_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component4_Svr == true)
    {
        Model.Prod3Component4_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac4_1);
    }
    else
    {
        Model.Prod3Component4_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component4_IP == true)
    {
        Model.Prod3Component4_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac4_1) * Model.Prod3Component_Qty4;
    }
    else
    {
        Model.Prod3Component4_IPHours = 0;
    };

    Model.Prod3ComponentHours4 = (Model.Prod3Component4_WkstnHours + Model.Prod3Component4_SvrHours + Model.Prod3Component4_IPHours);
    #endregion

    #region - Component Hours#5 Calc
    // Component Hours#5 Calc

    //Workstation
    if (Model.Prod3Component5_Wkstn == true)
    {
        Model.Prod3Component5_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac5_1);
    }
    else
    {
        Model.Prod3Component5_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component5_Svr == true)
    {
        Model.Prod3Component5_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac5_1);
    }
    else
    {
        Model.Prod3Component5_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component5_IP == true)
    {
        Model.Prod3Component5_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac5_1) * Model.Prod3Component_Qty5;
    }
    else
    {
        Model.Prod3Component5_IPHours = 0;
    };

    Model.Prod3ComponentHours5 = (Model.Prod3Component5_WkstnHours + Model.Prod3Component5_SvrHours + Model.Prod3Component5_IPHours);
    #endregion

    #region - Component Hours#6 Calc
    // Component Hours#6 Calc

    //Workstation
    if (Model.Prod3Component6_Wkstn == true)
    {
        Model.Prod3Component6_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac6_1);
    }
    else
    {
        Model.Prod3Component6_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component6_Svr == true)
    {
        Model.Prod3Component6_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac6_1);
    }
    else
    {
        Model.Prod3Component6_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component6_IP == true)
    {
        Model.Prod3Component6_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac6_1) * Model.Prod3Component_Qty6;
    }
    else
    {
        Model.Prod3Component6_IPHours = 0;
    };

    Model.Prod3ComponentHours6 = (Model.Prod3Component6_WkstnHours + Model.Prod3Component6_SvrHours + Model.Prod3Component6_IPHours);
    #endregion

    #region - Component Hours#7 Calc
    // Component Hours#7 Calc

    //Workstation
    if (Model.Prod3Component7_Wkstn == true)
    {
        Model.Prod3Component7_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac7_1);
    }
    else
    {
        Model.Prod3Component7_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component7_Svr == true)
    {
        Model.Prod3Component7_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac7_1);
    }
    else
    {
        Model.Prod3Component7_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component7_IP == true)
    {
        Model.Prod3Component7_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac7_1) * Model.Prod3Component_Qty7;
    }
    else
    {
        Model.Prod3Component7_IPHours = 0;
    };

    Model.Prod3ComponentHours7 = (Model.Prod3Component7_WkstnHours + Model.Prod3Component7_SvrHours + Model.Prod3Component7_IPHours);
    #endregion

    #region - Component Hours#8 Calc
    // Component Hours#5 Calc

    //Workstation
    if (Model.Prod3Component8_Wkstn == true)
    {
        Model.Prod3Component8_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac8_1);
    }
    else
    {
        Model.Prod3Component8_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component8_Svr == true)
    {
        Model.Prod3Component8_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac8_1);
    }
    else
    {
        Model.Prod3Component8_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component8_IP == true)
    {
        Model.Prod3Component8_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac8_1) * Model.Prod3Component_Qty8;
    }
    else
    {
        Model.Prod3Component8_IPHours = 0;
    };

    Model.Prod3ComponentHours8 = (Model.Prod3Component8_WkstnHours + Model.Prod3Component8_SvrHours + Model.Prod3Component8_IPHours);
    #endregion

    #region - Component Hours9 Calc
    // Component Hours#9 Calc

    //Workstation
    if (Model.Prod3Component9_Wkstn == true)
    {
        Model.Prod3Component9_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac9_1);
    }
    else
    {
        Model.Prod3Component9_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component9_Svr == true)
    {
        Model.Prod3Component9_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac9_1);
    }
    else
    {
        Model.Prod3Component9_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component9_IP == true)
    {
        Model.Prod3Component9_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac9_1) * Model.Prod3Component_Qty9;
    }
    else
    {
        Model.Prod3Component9_IPHours = 0;
    };

    Model.Prod3ComponentHours9 = (Model.Prod3Component9_WkstnHours + Model.Prod3Component9_SvrHours + Model.Prod3Component9_IPHours);
    #endregion

    #region - Component Hours#10 Calc
    // Component Hours#10 Calc

    //Workstation
    if (Model.Prod3Component10_Wkstn == true)
    {
        Model.Prod3Component10_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac10_1);
    }
    else
    {
        Model.Prod3Component10_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component10_Svr == true)
    {
        Model.Prod3Component10_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac10_1);
    }
    else
    {
        Model.Prod3Component10_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component10_IP == true)
    {
        Model.Prod3Component10_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac10_1) * Model.Prod3Component_Qty10;
    }
    else
    {
        Model.Prod3Component10_IPHours = 0;
    };

    Model.Prod3ComponentHours10 = (Model.Prod3Component10_WkstnHours + Model.Prod3Component10_SvrHours + Model.Prod3Component10_IPHours);
    #endregion

    #region - Component Hours#11 Calc
    // Component Hours#11 Calc

    //Workstation
    if (Model.Prod3Component11_Wkstn == true)
    {
        Model.Prod3Component11_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac11_1);
    }
    else
    {
        Model.Prod3Component11_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component11_Svr == true)
    {
        Model.Prod3Component11_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac11_1);
    }
    else
    {
        Model.Prod3Component11_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component11_IP == true)
    {
        Model.Prod3Component11_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac11_1) * Model.Prod3Component_Qty11;
    }
    else
    {
        Model.Prod3Component11_IPHours = 0;
    };

    Model.Prod3ComponentHours11 = (Model.Prod3Component11_WkstnHours + Model.Prod3Component11_SvrHours + Model.Prod3Component11_IPHours);
    #endregion

    #region - Component Hours#12 Calc
    // Component Hours#12 Calc

    //Workstation
    if (Model.Prod3Component12_Wkstn == true)
    {
        Model.Prod3Component12_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac12_1);
    }
    else
    {
        Model.Prod3Component12_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component12_Svr == true)
    {
        Model.Prod3Component12_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac12_1);
    }
    else
    {
        Model.Prod3Component12_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component12_IP == true)
    {
        Model.Prod3Component12_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac12_1) * Model.Prod3Component_Qty12;
    }
    else
    {
        Model.Prod3Component12_IPHours = 0;
    };

    Model.Prod3ComponentHours12 = (Model.Prod3Component12_WkstnHours + Model.Prod3Component12_SvrHours + Model.Prod3Component12_IPHours);
    #endregion

    #region - Component Hours#13 Calc
    // Component Hours#13 Calc

    //Workstation
    if (Model.Prod3Component13_Wkstn == true)
    {
        Model.Prod3Component13_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac13_1);
    }
    else
    {
        Model.Prod3Component13_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component13_Svr == true)
    {
        Model.Prod3Component13_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac13_1);
    }
    else
    {
        Model.Prod3Component13_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component13_IP == true)
    {
        Model.Prod3Component13_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac13_1) * Model.Prod3Component_Qty13;
    }
    else
    {
        Model.Prod3Component13_IPHours = 0;
    };

    Model.Prod3ComponentHours13 = (Model.Prod3Component13_WkstnHours + Model.Prod3Component13_SvrHours + Model.Prod3Component13_IPHours);
    #endregion

    #region - Component Hours#14 Calc
    // Component Hours#14 Calc

    //Workstation
    if (Model.Prod3Component14_Wkstn == true)
    {
        Model.Prod3Component14_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac14_1);
    }
    else
    {
        Model.Prod3Component14_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component14_Svr == true)
    {
        Model.Prod3Component14_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac14_1);
    }
    else
    {
        Model.Prod3Component14_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component14_IP == true)
    {
        Model.Prod3Component14_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac14_1) * Model.Prod3Component_Qty14;
    }
    else
    {
        Model.Prod3Component14_IPHours = 0;
    };

    Model.Prod3ComponentHours14 = (Model.Prod3Component14_WkstnHours + Model.Prod3Component14_SvrHours + Model.Prod3Component14_IPHours);
    #endregion

    #region - Component Hours#15 Calc
    // Component Hours#15 Calc

    //Workstation
    if (Model.Prod3Component15_Wkstn == true)
    {
        Model.Prod3Component15_WkstnHours = (Model.WkstnsHoursCalc2 * Model.Prod3ComponentComplexityFac15_1);
    }
    else
    {
        Model.Prod3Component15_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod3Component15_Svr == true)
    {
        Model.Prod3Component15_SvrHours = (Model.SrvsHoursCalc2 * Model.Prod3ComponentComplexityFac15_1);
    }
    else
    {
        Model.Prod3Component15_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod3Component15_IP == true)
    {
        Model.Prod3Component15_IPHours = (Model.IPsHoursCalc2 * Model.Prod3ComponentComplexityFac15_1) * Model.Prod3Component_Qty15;
    }
    else
    {
        Model.Prod3Component15_IPHours = 0;
    };

    Model.Prod3ComponentHours15 = (Model.Prod3Component15_WkstnHours + Model.Prod3Component15_SvrHours + Model.Prod3Component15_IPHours);
    #endregion




    //Product #4
    #region Product #4

    // Component Hours#1 Calc
    #region Component Hours#1 Calc

    //Workstation
    if (Model.Prod4Component1_Wkstn == true)
    {
        Model.Prod4Component1_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac1_1);
    }
    else
    {
        Model.Prod4Component1_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component1_Svr == true)
    {
        Model.Prod4Component1_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac1_1);
    }
    else
    {
        Model.Prod4Component1_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component1_IP == true)
    {
        Model.Prod4Component1_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac1_1) * Model.Prod4Component_Qty1;
    }
    else
    {
        Model.Prod4Component1_IPHours = 0;
    };


    Model.Prod4ComponentHours1 = (Model.Prod4Component1_WkstnHours + Model.Prod4Component1_SvrHours + Model.Prod4Component1_IPHours);

    #endregion Component Hours#1 Calc


    // Component Hours#2 Calc
    #region Component Hours#2 Calc

    //Workstation
    if (Model.Prod4Component2_Wkstn == true)
    {
        Model.Prod4Component2_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac2_1);
    }
    else
    {
        Model.Prod4Component2_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component2_Svr == true)
    {
        Model.Prod4Component2_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac2_1);
    }
    else
    {
        Model.Prod4Component2_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component2_IP == true)
    {
        Model.Prod4Component2_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac2_1) * Model.Prod4Component_Qty2;
    }
    else
    {
        Model.Prod4Component2_IPHours = 0;
    };


    Model.Prod4ComponentHours2 = (Model.Prod4Component2_WkstnHours + Model.Prod4Component2_SvrHours + Model.Prod4Component2_IPHours);


    #endregion Component Hours#2 Calc


    // Component Hours#3 Calc

    #region Component Hours#3 Calc
    //Workstation
    if (Model.Prod4Component3_Wkstn == true)
    {
        Model.Prod4Component3_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac3_1);
    }
    else
    {
        Model.Prod4Component3_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component3_Svr == true)
    {
        Model.Prod4Component3_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac3_1);
    }
    else
    {
        Model.Prod4Component3_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component3_IP == true)
    {
        Model.Prod4Component3_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac3_1) * Model.Prod4Component_Qty3;
    }
    else
    {
        Model.Prod4Component3_IPHours = 0;
    };


    Model.Prod4ComponentHours3 = (Model.Prod4Component3_WkstnHours + Model.Prod4Component3_SvrHours + Model.Prod4Component3_IPHours);

    #endregion Component Hours#3 Calc


    // Component Hours#4 Calc

    #region Component Hours#4 Calc

    //Workstation
    if (Model.Prod4Component4_Wkstn == true)
    {
        Model.Prod4Component4_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac4_1);
    }
    else
    {
        Model.Prod4Component4_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component4_Svr == true)
    {
        Model.Prod4Component4_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac4_1);
    }
    else
    {
        Model.Prod4Component4_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component4_IP == true)
    {
        Model.Prod4Component4_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac4_1) * Model.Prod4Component_Qty4;
    }
    else
    {
        Model.Prod4Component4_IPHours = 0;
    };


    Model.Prod4ComponentHours4 = (Model.Prod4Component4_WkstnHours + Model.Prod4Component4_SvrHours + Model.Prod4Component4_IPHours);

    #endregion Component Hours#4 Calc


    // Component Hours#5 Calc

    #region Component Hours#5 Calc

    if (Model.Prod4Component5_Wkstn == true)
    {
        Model.Prod4Component5_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac5_1);
    }
    else
    {
        Model.Prod4Component5_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component5_Svr == true)
    {
        Model.Prod4Component5_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac5_1);
    }
    else
    {
        Model.Prod4Component5_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component5_IP == true)
    {
        Model.Prod4Component5_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac5_1) * Model.Prod4Component_Qty5;
    }
    else
    {
        Model.Prod4Component5_IPHours = 0;
    };


    Model.Prod4ComponentHours5 = (Model.Prod4Component5_WkstnHours + Model.Prod4Component5_SvrHours + Model.Prod4Component5_IPHours);

    #endregion Component Hours#5 Calc


    // Component Hours#6 Calc

    #region Component Hours# Calc


    if (Model.Prod4Component6_Wkstn == true)
    {
        Model.Prod4Component6_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac6_1);
    }
    else
    {
        Model.Prod4Component6_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component6_Svr == true)
    {
        Model.Prod4Component6_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac6_1);
    }
    else
    {
        Model.Prod4Component6_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component6_IP == true)
    {
        Model.Prod4Component6_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac6_1) * Model.Prod4Component_Qty6;
    }
    else
    {
        Model.Prod4Component6_IPHours = 0;
    };


    Model.Prod4ComponentHours6 = (Model.Prod4Component6_WkstnHours + Model.Prod4Component6_SvrHours + Model.Prod4Component6_IPHours);

    #endregion Component Hours#6 Calc


    // Component Hours#7 Calc

    #region Component Hours#7 Calc

    if (Model.Prod4Component7_Wkstn == true)
    {
        Model.Prod4Component7_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac7_1);
    }
    else
    {
        Model.Prod4Component7_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component7_Svr == true)
    {
        Model.Prod4Component7_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac7_1);
    }
    else
    {
        Model.Prod4Component7_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component7_IP == true)
    {
        Model.Prod4Component7_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac7_1) * Model.Prod4Component_Qty7;
    }
    else
    {
        Model.Prod4Component7_IPHours = 0;
    };


    Model.Prod4ComponentHours7 = (Model.Prod4Component7_WkstnHours + Model.Prod4Component7_SvrHours + Model.Prod4Component7_IPHours);

    #endregion Component Hours#7 Calc


    // Component Hours#8 Calc

    #region Component Hours#8 Calc

    if (Model.Prod4Component8_Wkstn == true)
    {
        Model.Prod4Component8_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac8_1);
    }
    else
    {
        Model.Prod4Component8_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component8_Svr == true)
    {
        Model.Prod4Component8_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac8_1);
    }
    else
    {
        Model.Prod4Component8_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component8_IP == true)
    {
        Model.Prod4Component8_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac8_1) * Model.Prod4Component_Qty8;
    }
    else
    {
        Model.Prod4Component8_IPHours = 0;
    };


    Model.Prod4ComponentHours8 = (Model.Prod4Component8_WkstnHours + Model.Prod4Component8_SvrHours + Model.Prod4Component8_IPHours);

    #endregion Component Hours#8 Calc


    // Component Hours9 Calc

    #region Component Hours#9 Calc

    if (Model.Prod4Component9_Wkstn == true)
    {
        Model.Prod4Component9_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac9_1);
    }
    else
    {
        Model.Prod4Component9_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component9_Svr == true)
    {
        Model.Prod4Component9_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac9_1);
    }
    else
    {
        Model.Prod4Component9_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component9_IP == true)
    {
        Model.Prod4Component9_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac9_1) * Model.Prod4Component_Qty9;
    }
    else
    {
        Model.Prod4Component9_IPHours = 0;
    };


    Model.Prod4ComponentHours9 = (Model.Prod4Component9_WkstnHours + Model.Prod4Component9_SvrHours + Model.Prod4Component9_IPHours);

    #endregion Component Hours#9 Calc


    // Component Hours10 Calc

    #region Component Hours#10 Calc

    if (Model.Prod4Component10_Wkstn == true)
    {
        Model.Prod4Component10_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac10_1);
    }
    else
    {
        Model.Prod4Component10_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component10_Svr == true)
    {
        Model.Prod4Component10_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac10_1);
    }
    else
    {
        Model.Prod4Component10_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component10_IP == true)
    {
        Model.Prod4Component10_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac10_1) * Model.Prod4Component_Qty10;
    }
    else
    {
        Model.Prod4Component10_IPHours = 0;
    };


    Model.Prod4ComponentHours10 = (Model.Prod4Component10_WkstnHours + Model.Prod4Component10_SvrHours + Model.Prod4Component10_IPHours);

    #endregion Component Hours#10 Calc


    // Component Hours11 Calc

    #region Component Hours#11 Calc

    if (Model.Prod4Component11_Wkstn == true)
    {
        Model.Prod4Component11_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac11_1);
    }
    else
    {
        Model.Prod4Component11_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component11_Svr == true)
    {
        Model.Prod4Component11_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac11_1);
    }
    else
    {
        Model.Prod4Component11_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component11_IP == true)
    {
        Model.Prod4Component11_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac11_1) * Model.Prod4Component_Qty11;
    }
    else
    {
        Model.Prod4Component11_IPHours = 0;
    };


    Model.Prod4ComponentHours11 = (Model.Prod4Component11_WkstnHours + Model.Prod4Component11_SvrHours + Model.Prod4Component11_IPHours);

    #endregion Component Hours#11 Calc


    // Component Hours12 Calc

    #region Component Hours#12 Calc

    if (Model.Prod4Component12_Wkstn == true)
    {
        Model.Prod4Component12_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac12_1);
    }
    else
    {
        Model.Prod4Component12_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component12_Svr == true)
    {
        Model.Prod4Component12_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac12_1);
    }
    else
    {
        Model.Prod4Component12_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component12_IP == true)
    {
        Model.Prod4Component12_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac12_1) * Model.Prod4Component_Qty12;
    }
    else
    {
        Model.Prod4Component10_IPHours = 0;
    };


    Model.Prod4ComponentHours12 = (Model.Prod4Component12_WkstnHours + Model.Prod4Component12_SvrHours + Model.Prod4Component12_IPHours);

    #endregion Component Hours#12 Calc


    // Component Hours13 Calc

    #region Component Hours#13 Calc

    if (Model.Prod4Component13_Wkstn == true)
    {
        Model.Prod4Component13_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac13_1);
    }
    else
    {
        Model.Prod4Component13_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component13_Svr == true)
    {
        Model.Prod4Component13_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac13_1);
    }
    else
    {
        Model.Prod4Component13_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component13_IP == true)
    {
        Model.Prod4Component13_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac13_1) * Model.Prod4Component_Qty13;
    }
    else
    {
        Model.Prod4Component13_IPHours = 0;
    };


    Model.Prod4ComponentHours13 = (Model.Prod4Component13_WkstnHours + Model.Prod4Component13_SvrHours + Model.Prod4Component13_IPHours);

    #endregion Component Hours#13 Calc


    // Component Hours14 Calc

    #region Component Hours#14 Calc

    if (Model.Prod4Component14_Wkstn == true)
    {
        Model.Prod4Component14_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac14_1);
    }
    else
    {
        Model.Prod4Component14_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component14_Svr == true)
    {
        Model.Prod4Component14_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac14_1);
    }
    else
    {
        Model.Prod4Component14_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component14_IP == true)
    {
        Model.Prod4Component14_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac14_1) * Model.Prod4Component_Qty14;
    }
    else
    {
        Model.Prod4Component14_IPHours = 0;
    };


    Model.Prod4ComponentHours14 = (Model.Prod4Component14_WkstnHours + Model.Prod4Component14_SvrHours + Model.Prod4Component14_IPHours);

    #endregion Component Hours#14 Calc


    // Component Hours15 Calc

    #region Component Hours#15 Calc

    if (Model.Prod4Component15_Wkstn == true)
    {
        Model.Prod4Component15_WkstnHours = (Model.WkstnsHoursCalc3 * Model.Prod4ComponentComplexityFac15_1);
    }
    else
    {
        Model.Prod4Component15_WkstnHours = 0;
    };

    //Severs
    if (Model.Prod4Component15_Svr == true)
    {
        Model.Prod4Component15_SvrHours = (Model.SrvsHoursCalc3 * Model.Prod4ComponentComplexityFac15_1);
    }
    else
    {
        Model.Prod4Component15_SvrHours = 0;
    };

    // IP Address
    if (Model.Prod4Component15_IP == true)
    {
        Model.Prod4Component15_IPHours = (Model.IPsHoursCalc3 * Model.Prod4ComponentComplexityFac15_1) * Model.Prod4Component_Qty15;
    }
    else
    {
        Model.Prod4Component15_IPHours = 0;
    };


    Model.Prod4ComponentHours15 = (Model.Prod4Component15_WkstnHours + Model.Prod4Component15_SvrHours + Model.Prod4Component15_IPHours);

    #endregion Component Hours#15 Calc



    #endregion Product #4



    #endregion - Components Calc Section



    // Custom Hours Calc

    Model.CustomComponent1_TotalHours = (Model.CustomComponent1_Hours * Model.CustomComponent_Qty1);
    Model.CustomComponent2_TotalHours = (Model.CustomComponent2_Hours * Model.CustomComponent_Qty2);
    Model.CustomComponent3_TotalHours = (Model.CustomComponent3_Hours * Model.CustomComponent_Qty3);
    Model.CustomComponent4_TotalHours = (Model.CustomComponent4_Hours * Model.CustomComponent_Qty4);
    Model.CustomComponent5_TotalHours = (Model.CustomComponent5_Hours * Model.CustomComponent_Qty5);



    // Component1 Hours Calc
    if (Model.AvProduct.Component1 == true)
    {
        Model.Prod1Component1 = true;

    };

    // Component2 Hours Calc
    if (Model.AvProduct.Component2 == true)
    {
        Model.Prod1Component2 = true;

    };

    // Component3 Hours Calc
    if (Model.AvProduct.Component3 == true)
    {
        Model.Prod1Component3 = true;

    };
    // Component4 Hours Calc
    if (Model.AvProduct.Component4 == true)
    {
        Model.Prod1Component4 = true;

    };


    // Component5 Hours Calc
    if (Model.AvProduct.Component5 == true)
    {
        Model.Prod1Component5 = true;

    };


    var AddlServices = ((Model.AppChangeHoursCalc) + (Model.SoftLifeSrvHoursCalc) + (Model.SecCompHoursCalc) + (Model.RportingHoursCalc) + (Model.SlaRptHoursCalc));
    var Ttl_ApphrsCalc = Model.AppChangeHoursCalc;
    var Ttl_SoftLfSvrCalc = Model.SoftLifeSrvHoursCalc;

    var testTotal = (Ttl_SoftLfSvrCalc + 100);

    #endregion Calc Product Complexity



    // T and T WorkSheet
    #region T and T WorkSheet
    var LaborWorkWeek = Model.LaborDelivery.WorkWeek;

    // Tand T Totals
    Model.TnTWorksheet.TotalTransitionHoursItem = (Model.TransitionWeeks * LaborWorkWeek) + (Model.TnTWorksheet.SpecialItem1_TransitionHours + Model.TnTWorksheet.SpecialItem2_TransitionHours + Model.TnTWorksheet.SpecialItem3_TransitionHours + Model.TnTWorksheet.SpecialItem4_TransitionHours + Model.TnTWorksheet.SpecialItem5_TransitionHours);
    Model.TnTWorksheet.TotalTransformationHoursItem = (Model.TransformationWeeks * LaborWorkWeek) + (Model.TnTWorksheet.SpecialItem1_TransformationHours + Model.TnTWorksheet.SpecialItem2_TransformationHours + Model.TnTWorksheet.SpecialItem3_TransformationHours + Model.TnTWorksheet.SpecialItem4_TransformationHours + Model.TnTWorksheet.SpecialItem5_TransformationHours);

    //  **** Transformation and transformation Table Calc Section  ******    var TNT_Line4 = (0.30952380952381 * Model.TotalTransitionHoursItem);


    var TNT_Line4 = (0.30952380952381 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.ExecuteTransitionPlan_TransitionHoursItem = TNT_Line4;

    var TNT_Line5 = (0.0412698412698413 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.CreateBestPracticeCustom_TransitionHoursItem = TNT_Line5;

    var TNT_Line6 = (0.0412698412698413 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.TestInfrastructurePOC_TransitionHoursItem = TNT_Line6;

    var TNT_Line7 = (0.0412698412698413 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.TroubleshootTune_TransitionHoursItem = TNT_Line7;

    var TNT_Line8 = (0.0412698412698413 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.InstallConfigure_TransitionHoursItem = TNT_Line8;

    var TNT_Line9 = (0.0206349206349206 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.AdministratorTraining_TransitionHoursItem = TNT_Line9;

    var TNT_Line10 = (0.0165079365079365 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.DevelopServiceResponsibilityMatrix_TransitionHoursItem = TNT_Line10;

    var TNT_Line11 = (0.0165079365079365 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.EstablishAnyNeededServiceAccounts_TransitionHoursItem = TNT_Line11;

    var TNT_Line12 = (0.0165079365079365 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.ResearchAndSetupEmailAutomation_TransitionHoursItem = TNT_Line12;

    var TNT_Line13 = (0.0165079365079365 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.InstallConfigureRemoteConsoles_TransitionHoursItem = TNT_Line13;

    var TNT_Line14 = (0.0165079365079365 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.WorkWithSECOPS_TransitionHoursItem = TNT_Line14;

    var TNT_Line15 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.StaffingCcoordinating_TransitionHoursItem = TNT_Line15;

    var TNT_Line16 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.IdentifyTestDocument_TransitionHoursItem = TNT_Line16;

    var TNT_Line17 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.ObtainNetworkAndOsAccessWave1_TransitionHoursItem = TNT_Line17;

    var TNT_Line18 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.ObtainNetworkAndOsAccessWave2_TransitionHoursItem = TNT_Line18;

    var TNT_Line19 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.DevelopProvideAgentSoftware_TransitionHoursItem = TNT_Line19;

    var TNT_Line20 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.CustomerReviewSignoff_TransitionHoursItem = TNT_Line20;

    var TNT_Line21 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.InstallConfigureODBC_TransitionHoursItem = TNT_Line21;

    var TNT_Line22 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.EstablishHealthCheck_TransitionHoursItem = TNT_Line22;

    var TNT_Line23 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.DevelopWorkFlows_TransitionHoursItem = TNT_Line23;

    var TNT_Line24 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.OperationalDocumentation_TransitionHoursItem = TNT_Line24;

    var TNT_Line25 = (0.0619047619047619 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.ShadowEstablishReviewAllProcedures_TransitionHoursItem = TNT_Line25;

    var TNT_Line26 = (0.0619047619047619 * Model.TnTWorksheet.TotalTransitionHoursItem);
    Model.TnTWorksheet.OtherDetail_TransitionHoursItem = TNT_Line26;



    //Transformation

    var TNTForm_Line4 = (0.30952380952381 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.ExecuteTransitionPlan_TransformationHoursItem = TNTForm_Line4;

    var TNTForm_Line5 = (0.0412698412698413 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.CreateBestPracticeCustom_TransformationHoursItem = TNTForm_Line5;

    var TNTForm_Line6 = (0.0412698412698413 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.TestInfrastructurePOC_TransformationHoursItem = TNTForm_Line6;

    var TNTForm_Line7 = (0.0412698412698413 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.TroubleshootTune_TransformationHoursItem = TNTForm_Line7;

    var TNTForm_Line8 = (0.0412698412698413 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.InstallConfigure_TransformationHoursItem = TNTForm_Line8;

    var TNTForm_Line9 = (0.0206349206349206 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.AdministratorTraining_TransformationHoursItem = TNTForm_Line9;

    var TNTForm_Line10 = (0.0165079365079365 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.DevelopServiceResponsibilityMatrix_TransformationHoursItem = TNTForm_Line10;

    var TNTForm_Line11 = (0.0165079365079365 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.EstablishAnyNeededServiceAccounts_TransformationHoursItem = TNTForm_Line11;

    var TNTForm_Line12 = (0.0165079365079365 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.ResearchAndSetupEmailAutomation_TransformationHoursItem = TNTForm_Line12;

    var TNTForm_Line13 = (0.0165079365079365 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.InstallConfigureRemoteConsoles_TransformationHoursItem = TNTForm_Line13;

    var TNTForm_Line14 = (0.0165079365079365 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.WorkWithSECOPS_TransformationHoursItem = TNTForm_Line14;

    var TNTForm_Line15 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.StaffingCcoordinating_TransformationHoursItem = TNTForm_Line15;

    var TNTForm_Line16 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.IdentifyTestDocument_TransformationHoursItem = TNTForm_Line16;

    var TNTForm_Line17 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.ObtainNetworkAndOsAccessWave1_TransformationHoursItem = TNTForm_Line16;

    var TNTForm_Line18 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.ObtainNetworkAndOsAccessWave2_TransformationHoursItem = TNTForm_Line18;

    var TNTForm_Line19 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.DevelopProvideAgentSoftware_TransformationHoursItem = TNTForm_Line19;

    var TNTForm_Line20 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.CustomerReviewSignoff_TransformationHoursItem = TNTForm_Line20;

    var TNTForm_Line21 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.InstallConfigureODBC_TransformationHoursItem = TNTForm_Line21;

    var TNTForm_Line22 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.EstablishHealthCheck_TransformationHoursItem = TNTForm_Line22;

    var TNTForm_Line23 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.DevelopWorkFlows_TransformationHoursItem = TNTForm_Line23;

    var TNTForm_Line24 = (0.0103174603174603 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.OperationalDocumentation_TransformationHoursItem = TNTForm_Line24;

    var TNTForm_Line25 = (0.0619047619047619 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.ShadowEstablishReviewAllProcedures_TransformationHoursItem = TNTForm_Line25;

    var TNTForm_Line26 = (0.0619047619047619 * Model.TnTWorksheet.TotalTransformationHoursItem);
    Model.TnTWorksheet.OtherDetail_TransformationHoursItem = TNTForm_Line26;




    #endregion T and T WorkSheet

    // Band Calc and Distribution across Bands
    #region Band Calc and Distribution across Bands

    /// Model.AvSvrBand3 = Model.LaborDelivery.Band2Count;

    var ScanBBand3 = Model.LaborDelivery.Band2Count;

    // var DCSBand3 = Model.LaborDelivery?.Band2Count;
    // var NasBand3 = Model.LaborDelivery?.Band2Count;
    //var AppChgBand3 = Model.LaborDelivery?.Band2Count;
    // var SoftLfWkstnBand3 = Model.LaborDelivery?.Band2Count;
    //var SecCompRvBand3 = Model.LaborDelivery?.Band2Count;
    // var HealthSlaBand3 = Model.LaborDelivery?.Band2Count;

    // Old Workstation Band Calculation stored in DB
    //Model.AvWkstnBand3 = (Model.WorkstationFTE * Model.LaborDelivery.Band3Percentage);
    //Model.AvWkstnBand4 = (Model.WorkstationFTE * Model.LaborDelivery.Band4Percentage);
    //Model.AvWkstnBand5 = (Model.WorkstationFTE * Model.LaborDelivery.Band5Percentage);
    //Model.AvWkstnBand6 = (Model.WorkstationFTE * Model.LaborDelivery.Band6Percentage);
    //Model.AvWkstnBand7 = (Model.WorkstationFTE * Model.LaborDelivery.Band7Percentage);
    //Model.AvWkstnBand8 = (Model.WorkstationFTE * Model.LaborDelivery.Band8Percentage);
    //Model.AvWkstnBand9 = (Model.WorkstationFTE * Model.LaborDelivery.Band9Percentage);

    // New Workstation Run-Time Band Calc
    // var AvWkstnBand3_AZ = (Model.WorkstationFTE * Model.LaborDelivery.Band3Percentage);
    // var AvWkstnBand4_AZ = (Model.WorkstationFTE * Model.LaborDelivery.Band4Percentage);
    // var AvWkstnBand5_AZ = (Model.WorkstationFTE * Model.LaborDelivery.Band5Percentage);
    // var AvWkstnBand6_AZ = (Model.WorkstationFTE * Model.LaborDelivery.Band6Percentage);
    // var AvWkstnBand7_AZ = (Model.WorkstationFTE * Model.LaborDelivery.Band7Percentage);
    // var AvWkstnBand8_AZ = (Model.WorkstationFTE * Model.LaborDelivery.Band8Percentage);
    // var AvWkstnBand9_AZ = (Model.WorkstationFTE * Model.LaborDelivery.Band9Percentage);


    // Old Workstation Band Calculation stored in DB


    // New Workstation Run-Time Band Calc
    var AvWkstnBand3_A1Z = (Model.WorkstationFTE1 * Model.LaborDelivery.Band3Percentage);
    var AvWkstnBand4_A1Z = (Model.WorkstationFTE1 * Model.LaborDelivery.Band4Percentage);
    var AvWkstnBand5_A1Z = (Model.WorkstationFTE1 * Model.LaborDelivery.Band5Percentage);
    var AvWkstnBand6_A1Z = (Model.WorkstationFTE1 * Model.LaborDelivery.Band6Percentage);
    var AvWkstnBand7_A1Z = (Model.WorkstationFTE1 * Model.LaborDelivery.Band7Percentage);
    var AvWkstnBand8_A1Z = (Model.WorkstationFTE1 * Model.LaborDelivery.Band8Percentage);
    var AvWkstnBand9_A1Z = (Model.WorkstationFTE1 * Model.LaborDelivery.Band9Percentage);


    // Old Workstation Band Calculation stored in DB



    // New Workstation Run-Time Band Calc
    var AvWkstnBand3_A2Z = (Model.WorkstationFTE2 * Model.LaborDelivery.Band3Percentage);
    var AvWkstnBand4_A2Z = (Model.WorkstationFTE2 * Model.LaborDelivery.Band4Percentage);
    var AvWkstnBand5_A2Z = (Model.WorkstationFTE2 * Model.LaborDelivery.Band5Percentage);
    var AvWkstnBand6_A2Z = (Model.WorkstationFTE2 * Model.LaborDelivery.Band6Percentage);
    var AvWkstnBand7_A2Z = (Model.WorkstationFTE2 * Model.LaborDelivery.Band7Percentage);
    var AvWkstnBand8_A2Z = (Model.WorkstationFTE2 * Model.LaborDelivery.Band8Percentage);
    var AvWkstnBand9_A2Z = (Model.WorkstationFTE2 * Model.LaborDelivery.Band9Percentage);



    // Old Workstation Band Calculation stored in DB


    // New Workstation Run-Time Band Calc
    var AvWkstnBand3_A3Z = (Model.WorkstationFTE3 * Model.LaborDelivery.Band3Percentage);
    var AvWkstnBand4_A3Z = (Model.WorkstationFTE3 * Model.LaborDelivery.Band4Percentage);
    var AvWkstnBand5_A3Z = (Model.WorkstationFTE3 * Model.LaborDelivery.Band5Percentage);
    var AvWkstnBand6_A3Z = (Model.WorkstationFTE3 * Model.LaborDelivery.Band6Percentage);
    var AvWkstnBand7_A3Z = (Model.WorkstationFTE3 * Model.LaborDelivery.Band7Percentage);
    var AvWkstnBand8_A3Z = (Model.WorkstationFTE3 * Model.LaborDelivery.Band8Percentage);
    var AvWkstnBand9_A3Z = (Model.WorkstationFTE3 * Model.LaborDelivery.Band9Percentage);





    // AvSvrBand3




    //AScanBBand3



    //DCSBand3




    //NasBand3



    //AppChgBand3

    //   Model.AppChgBand3 = (Model.AppChangeFTE * Model.LaborDelivery.Band3Percentage);
    //   Model.AppChgBand4 = (Model.AppChangeFTE * Model.LaborDelivery.Band4Percentage);
    //   Model.AppChgBand5 = (Model.AppChangeFTE * Model.LaborDelivery.Band5Percentage);
    //   Model.AppChgBand6 = (Model.AppChangeFTE * Model.LaborDelivery.Band6Percentage);
    //   Model.AppChgBand7 = (Model.AppChangeFTE * Model.LaborDelivery.Band7Percentage);
    //   Model.AppChgBand8 = (Model.AppChangeFTE * Model.LaborDelivery.Band8Percentage);
    //   Model.AppChgBand9 = (Model.AppChangeFTE * Model.LaborDelivery.Band9Percentage);



    //AddConBand3









    var SubSubTtlHours = Model.SteadyStateHoursTtl + (Complex1 + Complex2 + Complex3 + Complex4 + Complex5 + Complex6 + Complex7 + Complex8);


    @*Model.SteadyStateTotalHours = SubSubTtlHours + Model.TotalTransitionHoursItem + Model.TotalTransformationHoursItem;*@
    Model.SteadyStateTotalHours = SubSubTtlHours;

    @* var Sum_1st_LineMgr = (Model.TransitionFirstLineManagementBand8Hours + Model.TransformationFirstLineManagementBand8 + Model.FirstLineMangerBand8Hours);
        //  var Sum_2nd_LineMgr = (Model.TransitionSecondLineManagementBand8 + Model.TransformationSecondLineManagementBand8 + Model.SecondLineMangerBand9Hours);
    *@
    #endregion Band Calc and Distribution across Bands


    // Additional Services Calc


    #region - Software Life Cycle Workstation

    @*   if (Model.SoftLifeWkstnYesNo == true)

        {
            Model.SoftLifeWkstnHoursCalc = 300;
        }

        else

        {
            Model.SoftLifeWkstnHoursCalc = 0;

        }

        {
        };



        if (Model.SoftLifeWkstnHoursCalc == 0)

        {
            Model.SoftLifeWkstnFTE = 0;
        }

        else

        {
            Model.SoftLifeWkstnFTE = (((Model.SoftLifeWkstnHoursCalc * FracHrs) + Model.AvProduct.ProductComplexityBase) / Model.LaborDelivery.DefaultFTE_Year);

        }

        {
        }; *@

    //SoftLfWkstnBand3

    //  Model.SoftLfWkstnBand3 = (Model.SoftLifeWkstnFTE * Model.LaborDelivery.Band3Percentage);
    //   Model.SoftLfWkstnBand4 = (Model.SoftLifeWkstnFTE * Model.LaborDelivery.Band4Percentage);
    //  Model.SoftLfWkstnBand5 = (Model.SoftLifeWkstnFTE * Model.LaborDelivery.Band5Percentage);
    //   Model.SoftLfWkstnBand6 = (Model.SoftLifeWkstnFTE * Model.LaborDelivery.Band6Percentage);
    //   Model.SoftLfWkstnBand7 = (Model.SoftLifeWkstnFTE * Model.LaborDelivery.Band7Percentage);
    //   Model.SoftLfWkstnBand8 = (Model.SoftLifeWkstnFTE * Model.LaborDelivery.Band8Percentage);
    //    Model.SoftLfWkstnBand9 = (Model.SoftLifeWkstnFTE * Model.LaborDelivery.Band9Percentage);
    #endregion - Software Life Cycle Workstation

    #region - Software Life Cycle Server


    if (Model.SoftLifeSvrYesNo == true)

    {
        Model.SoftLifeSrvHoursCalc = 788;
    }

    else

    {
        Model.SoftLifeSrvHoursCalc = 0;

    }

    {
    };



    if (Model.SoftLifeSrvHoursCalc == 0)

    {
        Model.SoftLifeSvrFTE = 0;
    }

    else

    {
        Model.SoftLifeSvrFTE = (((Model.SoftLifeSrvHoursCalc * FracHrs) + Model.AvProduct.ProductComplexityBase) / Model.LaborDelivery.DefaultFTE_Year);

    }

    {
    };

    //SoftLfSvrBand3

    // Model.SoftLfSvrBand3 = (Model.SoftLifeSvrFTE * Model.LaborDelivery.Band3Percentage);
    // Model.SoftLfSvrBand4 = (Model.SoftLifeSvrFTE * Model.LaborDelivery.Band4Percentage);
    // Model.SoftLfSvrBand5 = (Model.SoftLifeSvrFTE * Model.LaborDelivery.Band5Percentage);
    // Model.SoftLfSvrBand6 = (Model.SoftLifeSvrFTE * Model.LaborDelivery.Band6Percentage);
    // Model.SoftLfSvrBand7 = (Model.SoftLifeSvrFTE * Model.LaborDelivery.Band7Percentage);
    // Model.SoftLfSvrBand8 = (Model.SoftLifeSvrFTE * Model.LaborDelivery.Band8Percentage);
    // Model.SoftLfSvrBand9 = (Model.SoftLifeSvrFTE * Model.LaborDelivery.Band9Percentage);
    #endregion - Software Life Cycle Server

    #region - Security Compliance Reporting


    if (Model.SecCompRptYesNo == true)

    {
        Model.SecCompHoursCalc = 525;
    }

    else

    {
        Model.SecCompHoursCalc = 0;

    }

    {
    };



    if (Model.SecCompHoursCalc == 0)

    {
        Model.SecComplRptFTE = 0;
    }

    else

    {
        Model.SecComplRptFTE = (((Model.SecCompHoursCalc * FracHrs) + Model.AvProduct.ProductComplexityBase) / Model.LaborDelivery.DefaultFTE_Year);

    }

    {
    };

    //SSecCompRvBand3

    //    Model.SSecCompRvBand3 = (Model.SecComplRptFTE * Model.LaborDelivery.Band3Percentage);
    //    Model.SSecCompRvBand4 = (Model.SecComplRptFTE * Model.LaborDelivery.Band4Percentage);
    //    Model.SSecCompRvBand5 = (Model.SecComplRptFTE * Model.LaborDelivery.Band5Percentage);
    //    Model.SSecCompRvBand6 = (Model.SecComplRptFTE * Model.LaborDelivery.Band6Percentage);
    //    Model.SSecCompRvBand7 = (Model.SecComplRptFTE * Model.LaborDelivery.Band7Percentage);
    //    Model.SSecCompRvBand8 = (Model.SecComplRptFTE * Model.LaborDelivery.Band8Percentage);
    //    Model.SSecCompRvBand9 = (Model.SecComplRptFTE * Model.LaborDelivery.Band9Percentage);

    #endregion - Security Compliance Reporting

    #region - Detection Reporting

    if (Model.ReportingYesNo == true)

    {
        Model.RportingHoursCalc = 52;
    }

    else

    {
        Model.RportingHoursCalc = 0;

    }

    {
    };



    if (Model.RportingHoursCalc == 0)

    {
        Model.ReportingFTE = 0;
    }

    else

    {
        Model.ReportingFTE = (((Model.RportingHoursCalc * FracHrs) + Model.AvProduct.ProductComplexityBase) / Model.LaborDelivery.DefaultFTE_Year);

    }

    {
    };

    //DetectRepBand3

    //    Model.DetectRepBand3 = (Model.ReportingFTE * Model.LaborDelivery.Band3Percentage);
    //    Model.DetectRepBand4 = (Model.ReportingFTE * Model.LaborDelivery.Band4Percentage);
    //    Model.DetectRepBand5 = (Model.ReportingFTE * Model.LaborDelivery.Band5Percentage);
    //    Model.DetectRepBand6 = (Model.ReportingFTE * Model.LaborDelivery.Band6Percentage);
    //    Model.DetectRepBand7 = (Model.ReportingFTE * Model.LaborDelivery.Band7Percentage);
    //    Model.DetectRepBand8 = (Model.ReportingFTE * Model.LaborDelivery.Band8Percentage);
    //    Model.DetectRepBand9 = (Model.ReportingFTE * Model.LaborDelivery.Band9Percentage);
    #endregion - Detection Reporting

    #region - SLA / Health Reporting

    if (Model.SLAReportingYesNo == true)

    {
        Model.SlaRptHoursCalc = 52;
    }

    else

    {
        Model.SlaRptHoursCalc = 0;

    }

    {
    };



    if (Model.SlaRptHoursCalc == 0)

    {
        Model.SlaRprtFTE = 0;
    }

    else

    {
        Model.SlaRprtFTE = (((Model.SlaRptHoursCalc * FracHrs) + Model.AvProduct.ProductComplexityBase) / Model.LaborDelivery.DefaultFTE_Year);

    }

    {
    };

    //HealthSlaBand3

    //    Model.HealthSlaBand3 = (Model.SlaRprtFTE * Model.LaborDelivery.Band3Percentage);
    //    Model.HealthSlaBand4 = (Model.SlaRprtFTE * Model.LaborDelivery.Band4Percentage);
    //    Model.HealthSlaBand5 = (Model.SlaRprtFTE * Model.LaborDelivery.Band5Percentage);
    //    Model.HealthSlaBand6 = (Model.SlaRprtFTE * Model.LaborDelivery.Band6Percentage);
    //    Model.HealthSlaBand7 = (Model.SlaRprtFTE * Model.LaborDelivery.Band7Percentage);
    //    Model.HealthSlaBand8 = (Model.SlaRprtFTE * Model.LaborDelivery.Band8Percentage);
    //    Model.HealthSlaBand9 = (Model.SlaRprtFTE * Model.LaborDelivery.Band9Percentage);

    #endregion - SLA / Health Reporting





    // Product Component variables

    var ProdComp1 = Model.AvProduct.PrimaryComp;
    var ProdComp2 = Model.AvProduct.Component2Desc;
    var ProdComp3 = Model.AvProduct.Component3Desc;
    var ProdComp4 = Model.AvProduct.Component4Desc;
    var ProdComp5 = Model.AvProduct.Component5Desc;
    var ProdComp6 = Model.AvProduct.Component6Desc;
    var ProdComp7 = Model.AvProduct.Component7Desc;
    var ProdComp8 = Model.AvProduct.Component8Desc;


    // Other Costs

    //TravelCosts


    // Travel Cost
    Model.TravelCost = 3500;

    if (Model.TravelCostCount == 0)
    {
        Model.TravelCostAmt = 0;
    }
    else
    {
        Model.TravelCostAmt = (Model.TravelCostCount * Model.TravelCost);
    }

    // RemoteAttribute Cost

    Model.RemoteConsoleCost = 1500;

    if (Model.RemoteConsoleCostCount == 0)
    {
        Model.RemoteConsoleCostAmt = 0;
    }
    else
    {
        Model.RemoteConsoleCostAmt = (Model.RemoteConsoleCostCount * Model.RemoteConsoleCost);
    }

    //Education Cost

    Model.EducationCost = 4000;

    if (Model.EducationCostCount == 0)
    {
        Model.EducationCostAmt = 0;
    }
    else
    {
        Model.EducationCostAmt = (Model.EducationCostCount * Model.EducationCost);
    }

    // Other Cost 1


    Model.OtherCost1 = 1;

    if (Model.OtherCostCount1 == 0)
    {
        Model.OtherCost1Amt = 0;
    }
    else
    {
        Model.OtherCost1Amt = (Model.OtherCostCount1 * Model.OtherCost1);
    }

    // Other Cost 2

    Model.OtherCost2 = 1;

    if (Model.OtherCostCount2 == 0)
    {
        Model.OtherCost2Amt = 0;
    }
    else
    {
        Model.OtherCost2Amt = (Model.OtherCostCount2 * Model.OtherCost2);
    }

    // Other Cost 3

    Model.OtherCost3 = 1;

    if (Model.OtherCostCount3 == 0)
    {
        Model.OtherCost3Amt = 0;
    }
    else
    {
        Model.OtherCost3Amt = (Model.OtherCostCount3 * Model.OtherCost3);
    }


    // Tiers if FTE Calculation

    Model.FirstLineMangerBand8TotalFTE = (Model.FirstLineMangerBand8Hours / Model.LaborDelivery.DefaultFTE_Year);
    Model.SecondLineMangerBand9TotalFTE = (Model.SecondLineMangerBand9Hours / Model.LaborDelivery.DefaultFTE_Year);
    Model.AdditionalFTE = ((Model.AdditionalServices) / Model.LaborDelivery.DefaultFTE_Year);


    var FTE2 = (((Model.NumWorkstation * 0.130625) + Model.AvProduct.ProductComplexityBase) * (Model.AvProduct.ProductComplexityFac)) / Model.LaborDelivery.DefaultFTE_Year;



    var Band2FteHours = (Model.SteadyStateSubTotalHours * Model.LaborDelivery.Band2Percentage);
    var Band3FteHours = (Model.SteadyStateSubTotalHours * Model.LaborDelivery.Band3Percentage);
    var Band4FteHours = (Model.SteadyStateSubTotalHours * Model.LaborDelivery.Band4Percentage);
    var Band5FteHours = (Model.SteadyStateSubTotalHours * Model.LaborDelivery.Band5Percentage);
    var Band6FteHours = (Model.SteadyStateSubTotalHours * Model.LaborDelivery.Band6Percentage);
    var Band7FteHours = (Model.SteadyStateSubTotalHours * Model.LaborDelivery.Band7Percentage);
    var Band8FteHours = (Model.SteadyStateSubTotalHours * Model.LaborDelivery.Band8Percentage);
    var Band9FteHours = (Model.SteadyStateSubTotalHours * Model.LaborDelivery.Band9Percentage);

    Model.TotalComponentsFTE = ((Model.TotalComponents_Hours) / Model.LaborDelivery.DefaultFTE_Year);
    Model.TotalCustomFTE = ((Model.TotalCustomHours) / Model.LaborDelivery.DefaultFTE_Year);

    // Model.Prod2ProdId = txtLaborDeliveryId;


    Model.SteadyStateGrandTotalFTE = (Model.SteadyStateFTETtl + Model.AdditionalFTE + Model.FirstLineMangerBand8TotalFTE + Model.SecondLineMangerBand9TotalFTE + Model.TotalComponentsFTE + Model.TotalCustomFTE);
    Model.GrandTotalFTE = (Model.SteadyStateGrandTotalFTE + Model.TnTWorksheet.TransitionHoursFTE + Model.TnTWorksheet.TransfortionHoursFTE);

    // Calc for Adjusted Hours for OverRide Feature
    #region Calc for Adjusted Hours for OverRide Feature

    var Prod1TotalHours = (Model.WkstnsHoursCalc + Model.SrvsHoursCalc + Model.IPsHoursCalc + Model.AddlConHoursCalc);



    #endregion Calc for Adjusted Hours for OverRide Feature


    // var SteadyStateTotalBand3_AZ = (AvWkstnBand3_A1Z + Model.AvSvrBand3 + Model.AddConBand3);

    //Component Hours Fix and ReCalc
    var Prod1TotalComponentHours_AZ = (Model.Prod1ComponentHours1 + Model.Prod1ComponentHours2 + Model.Prod1ComponentHours3 + Model.Prod1ComponentHours4 + Model.Prod1ComponentHours5 + Model.Prod1ComponentHours6 + Model.Prod1ComponentHours7 + Model.Prod1ComponentHours8 + Model.Prod1ComponentHours10 + Model.Prod1ComponentHours11 + Model.Prod1ComponentHours12 + Model.Prod1ComponentHours13 + Model.Prod1ComponentHours14 + Model.Prod1ComponentHours15);


    #endregion Calculations and variables

}

<h2>Edit</h2>


<div id="SizingTitle-Legend1">
    <div class="row" style="width:1300px">
        <div class="col-md-3">
            <div class="box box-default">
                <div class="box-header with-border">
                    <h5 class="box-title">Sizing Info:</h5>
                </div><!-- /.box-header -->
                <div class="box-body">

                    <div class="row">
                        <div class="col-5" style="font-weight:bold; font-family:Arial; font-size:11px; color:darkblue">Sizing Request-#</div>
                        <div class="col-7" style="font-weight:bolder">
                            @Html.DisplayFor(model => model.DisplayForSizingID, new { htmlAttributes = new { @class = "form-control", @style = "Background-color: #f2fcfc;" } })
                            @Html.ValidationMessageFor(model => model.DisplayForSizingID, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-5" style="font-weight:bold; font-family:Arial; font-size:11px; color:darkblue">RFS# -</div>
                        <div class="col-7">
                            @Html.DisplayFor(model => model.RFSNum, new { htmlAttributes = new { @class = "form-control", @style = "Background-color: #f2fcfc;" } })
                            @Html.ValidationMessageFor(model => model.RFSNum, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-5" style="font-weight:bold; font-family:Arial; font-size:11px; color:darkblue">Sales Connect# -</div>
                        <div class="col-7">
                            @Html.DisplayFor(model => model.SalesConnectNum, new { htmlAttributes = new { @class = "form-control", @style = "Background-color: #f2fcfc;" } })
                            @Html.ValidationMessageFor(model => model.SalesConnectNum, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>

            </div>


        </div>
        <div class="col-md-1">
            <h2></h2>
        </div>
        <div class="col-md-3" style="color:blue; font-family:'Franklin Gothic'; text-align:center">
            <h2>
                @Html.DisplayFor(model => model.AcctCust.AcctName, new { htmlAttributes = new { @class = "form-control", @style = "Background-color: #f2fcfc;" } })
                @Html.ValidationMessageFor(model => Model.AcctCust.AcctName, "", new { @class = "text-danger" })
            </h2>
        </div>
        <div class="col-md-2"></div>
        <div class="col-md-3">


            <div class="box box-default">
                <div class="box-header with-border">
                    <h4 class="box-title">Status/Details</h4>
                </div><!-- /.box-header -->

                <div class="box-body">

                    <div class="row">
                        <div class="col-4" style="font-weight:bold; font-family:Arial; font-size:11px">Status:</div>
                        <div class="col-8">
                            @Html.DisplayFor(model => model.StatusState.StatusStateName, new { htmlAttributes = new { @class = "form-control", @style = "Background-color: #f2fcfc; font-size:10px" } })
                            @Html.ValidationMessageFor(model => Model.StatusState.StatusStateName, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-4" style="font-weight:bold; font-family:Arial; font-size:11px">Prepared By:</div>
                        <div class="col-8">
                            @Html.DisplayFor(model => model.PrepardedBy, new { htmlAttributes = new { @class = "form-control", @style = "Background-color: #f2fcfc;" } })
                            @Html.ValidationMessageFor(model => Model.PrepardedBy, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-4" style="font-weight:bold; font-family:Arial; font-size:11px">Valid Until:</div>
                        <div class="col-8">
                            @Html.DisplayFor(model => model.ValidToDate, new { htmlAttributes = new { @class = "form-control", @style = "Background-color: #f2fcfc;" } })
                            @Html.ValidationMessageFor(model => Model.ValidToDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">

        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SizingId)
        @Html.HiddenFor(model => Model.AvProduct.ProductComplexityBase)
        @Html.HiddenFor(model => Model.AvProduct.ProductComplexityFac)
        @Html.HiddenFor(model => Model.LaborDelivery.DefaultFTE_Year)
        @Html.HiddenFor(model => Model.LaborDelivery.WorkWeek)


        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        <div id="Legend1">@Html.Partial("_Legend1")</div>

        <div id="Legend2" hidden>@Html.Partial("_Legend02")</div>


        <div class="row">
            <div class="col-3"><input type="submit" value="Calc" class="btn btn-dropbox" /></div>
            <div class="col-1"></div>
            <div class="col-1"></div>
            <div class="col-1">@* @Html.ActionLink("Delivery View #1", "DeliveryView01", new { id = Model.SizingId }, htmlAttributes: new { target = "_blank", @class = "btn btn-default btn-sm" })*@</div>
            <div class="col-1">@* @Html.ActionLink("Delivery View #2", "DeliveryView02", new { id = Model.SizingId }, htmlAttributes: new { target = "_blank", @class = "btn btn-default btn-sm" })*@</div>
            <div class="col-1">@Html.ActionLink("PDF View", "GBO", "SizingUserDashboard2", new { id = Model.SizingId }, htmlAttributes: new { target = "_blank", @class = "btn btn-default btn-sm" })</div>

            <div class="col-2">
                <div class="form-group">
                    <div class="row" style="font-size:10px;">
                        <div class="col-3">Change Status:</div>
                        <div class="col-9" style="text-align:left; font-size:10px;">
                            @Html.DropDownList("StatusStateId", null, htmlAttributes: new { @class = "form-control", @style = "Background-color: #f2fcfc; font-size:10px; height:30px" })
                            @Html.ValidationMessageFor(model => model.StatusStateId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-2" style="font-size:10px; height:25px">
                <a class="btn btn-sm" href="@Url.Action("Index", "SizingUserDashboard")">Exit &raquo;</a>
            </div>


        </div>



        <div class="form-group" hidden>
            @Html.LabelFor(model => model.ConfigId, "ConfigId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ConfigId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfigId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden>
            <div class="col-6">@Html.LabelFor(model => model.StatusStateId, "StatusStateId", htmlAttributes: new { @class = "control-label col-md-3" })</div>
            <div class="col-6">
                @Html.DropDownList("StatusStateId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusStateId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden>
            <div class="col-6">@Html.LabelFor(model => model.TnTId, "TnTId", htmlAttributes: new { @class = "control-label col-md-3" })</div>
            <div class="col-6">
                @Html.DropDownList("TnTId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TnTId, "", new { @class = "text-danger" })
            </div>
        </div>

        @* Currently active tab: <input type="text" id="active_tab">
            Currently active tab: <input type="text" id="active_tab2"> *@
        <div id="DivCalcFTE">

            <div id="tabs" style="width: 1275px; padding: 10px; margin: 10px">
                <ul>
                    <li><a href="#tabs-1">Account/Request Info:</a></li>
                    <li><a href="#tabs-2">Product/Service Selection:</a></li>
                    <li><a href="#tabs-3">Additional Services:</a></li>
                    <li><a href="#tabs-4">Steady-State/Other Costs:</a></li>
                    <li><a href="#tabs-5">T and T Worksheet</a></li>
                    <li><a href="#tabs-6">Overview/Details</a></li>

                </ul>

                <div id="tabs-1">
                    <div class="row">

                        <div class="row">
                            <div class="col-md-5">
                                <!-- general form elements -->
                                <div class="box box-primary">
                                    <div class="box-header with-border">
                                        <p style="font-weight:bold">Acct:/ Customer / Product Info:</p>
                                    </div>
                                    <!-- /.box-header -->
                                    <!-- form start -->
                                    <form role="form">
                                        <div class="box-body">
                                            <h3 class="box-title"> </h3>
                                            <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                                <div class="col-6">@Html.LabelFor(model => model.AcctCustId, "AcctCustId", htmlAttributes: new { @class = "control-label col-md-3" })</div>
                                                <div class="col-6">
                                                    @Html.DropDownList("AcctCustId", null, htmlAttributes: new { @class = "form-control", Style = "height:25px" })
                                                    @Html.ValidationMessageFor(model => model.AcctCustId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                                <div class="col-6">@Html.LabelFor(model => model.SizingTypeId, "SizingTypeId", htmlAttributes: new { @class = "control-label col-md-3" })</div>
                                                <div class="col-6">
                                                    @Html.DropDownList("SizingTypeId", null, htmlAttributes: new { @class = "form-control", Style = "height:25px" })
                                                    @Html.ValidationMessageFor(model => model.SizingTypeId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-6">@Html.LabelFor(model => model.AvProductId, "LaborDeliveryId", htmlAttributes: new { @class = "control-label col-md-3" })</div>
                                                <div class="col-6">
                                                    @Html.DropDownList("AvProductId", null, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.AvProductId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-6">@Html.LabelFor(model => model.LaborDeliveryId, "LaborDeliveryId", htmlAttributes: new { @class = "control-label col-md-3" })</div>
                                                <div class="col-6">
                                                    @Html.DropDownList("LaborDeliveryId", null, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.LaborDeliveryId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            @*  <div class="row">
                                                    <div class="col-6">@Html.LabelFor(model => model.LaborDeliveryId, "LaborDeliveryId", htmlAttributes: new { @class = "control-label col-md-3" })</div>
                                                    <div class="col-6">
                                                        @Html.DropDownList("LaborDeliveryId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.LaborDeliveryId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-6" style="text-align:right"> @Html.LabelFor(model => model.SalesConnectNum, htmlAttributes: new { @class = "control-label col-md-12" })</div>

                                                    <div class="col-6">
                                                        @Html.EditorFor(model => model.SalesConnectNum, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                                        @Html.ValidationMessageFor(model => model.SalesConnectNum, "", new { @class = "text-danger" })
                                                    </div>


                                                </div>
                                                <div class="row">
                                                    <div class="col-6" style="text-align:right">@Html.LabelFor(model => model.RFSNum, "RFSNum", htmlAttributes: new { @class = "control-label col-md-12" })</div>
                                                    <div class="col-6">
                                                        @Html.EditorFor(model => model.RFSNum, new { htmlAttributes = new { @class = "form-control", Stye = "Background-color: #f2fcfc;" } })
                                                        @Html.ValidationMessageFor(model => model.RFSNum, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>  *@
                                            <div class="row">
                                                <div class="col-6"></div>
                                                <div class="col-6"></div>
                                            </div>

                                            <hr />
                                            <h6 class="box-title"> Time/Length: Transition / Transformation </h6>
                                            <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                                <div class="col-md-9" style="background-color:#ffffff; height:25px">Enter number of Weeks for Transition: </div>
                                                <div class="col-md-3" height:25px">
                                                    @Html.EditorFor(model => model.TransitionWeeks, new { htmlAttributes = new { @class = "form-control", @style = "Background-color: #f2fcfc; height:25px" } })
                                                    @Html.ValidationMessageFor(model => model.TransitionWeeks, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                                <div class="col-md-9" style="background-color:#ffffff; height:25px"> Enter number of Weeks for Transformation: </div>
                                                <div class="col-md-3" style="background-color:#ffffff; height:25px">
                                                    @Html.EditorFor(model => model.TransformationWeeks, new { htmlAttributes = new { @class = "form-control", @style = "Background-color: #f2fcfc; height:25px" } })
                                                    @Html.ValidationMessageFor(model => model.TransformationWeeks, "", new { @class = "text-danger" })
                                                </div>
                                            </div>




                                        </div>
                                        <!-- /.box-body -->

                                        <div class="box-footer">

                                        </div>
                                    </form>
                                </div>
                                <!-- /.box -->
                            </div>

                            <div class="col-md-7">
                                <!-- general form elements -->
                                <div class="box box-primary">
                                    <div class="box-header with-border">
                                        <p style="font-weight:bold">Reference: Accounts Info and Status:</p>
                                    </div>
                                    <!-- /.box-header -->
                                    <!-- form start -->

                                    <div class="box-body">
                                        <h3 class="box-title"> </h3>
                                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            <div class="col-6" style="text-align:right">
                                                @Html.LabelFor(model => model.SalesConnectNum, htmlAttributes: new { @class = "control-label col-md-12" })
                                            </div>

                                            <div class="col-6">
                                                @Html.EditorFor(model => model.SalesConnectNum, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                                @Html.ValidationMessageFor(model => model.SalesConnectNum, "", new { @class = "text-danger" })
                                            </div>


                                        </div>
                                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            <div class="col-6" style="text-align:right">
                                                @Html.LabelFor(model => model.RFSNum, "RFSNum", htmlAttributes: new { @class = "control-label col-md-12" })
                                            </div>
                                            <div class="col-6">
                                                @Html.EditorFor(model => model.RFSNum, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                                @Html.ValidationMessageFor(model => model.RFSNum, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            <div class="col-6" style="text-align:right">@Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-12" })</div>
                                            <div class="col-6">
                                                @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                                @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            <div class="col-6" style="text-align:right">@Html.LabelFor(model => model.ValidToDate, htmlAttributes: new { @class = "control-label col-md-12" })</div>
                                            <div class="col-6">
                                                @Html.EditorFor(model => model.ValidToDate, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                                @Html.ValidationMessageFor(model => model.ValidToDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            <div class="col-6"></div>
                                            <div class="col-6"></div>
                                        </div>

                                        <hr />


                                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            <div class="col-6" style="text-align:right">@Html.LabelFor(model => model.PrepardedBy, htmlAttributes: new { @class = "control-label col-md-12" })</div>
                                            <div class="col-6">
                                                @Html.EditorFor(model => model.PrepardedBy, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                                @Html.ValidationMessageFor(model => model.PrepardedBy, "", new { @class = "text-danger" })
                                            </div>
                                        </div> <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            @Html.LabelFor(model => model.MemoNote, htmlAttributes: new { @class = "control-label col-md-4" })
                                            @Html.EditorFor(model => model.MemoNote, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                            @Html.ValidationMessageFor(model => model.MemoNote, "", new { @class = "text-danger" })

                                        </div>


                                        @* <div class="row">
                                                <div class="form-group">
                                                    <div class="col-6">@Html.LabelFor(model => model.StatusStateId, "StatusStateId", htmlAttributes: new { @class = "control-label col-md-3" })</div>
                                                    <div class="col-6">
                                                        @Html.DropDownList("StatusStateId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.StatusStateId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div> *@
                                        @*   <div class="row">
                                                <div class="form-group">
                                                    <div class="col-6">@Html.LabelFor(model => model.ConfigId, "ConfigId", htmlAttributes: new { @class = "control-label col-md-3" })</div>
                                                    <div class="col-6">
                                                        @Html.DropDownList("ConfigId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.ConfigId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                            </div> *@

                                        @*  <div class="row">
                                                <div class="form-group">
                                                    <div class="col-6">@Html.LabelFor(model => model.TnTId, "TnTId", htmlAttributes: new { @class = "control-label col-md-3" })</div>
                                                    <div class="col-6">
                                                        @Html.DropDownList("TnTId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.TnTId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div> *@


                                    </div>
                                    <!-- /.box-body -->

                                    <div class="box-footer">

                                    </div>

                                </div>
                                <!-- /.box -->
                            </div>
                        </div>
                    </div>

                </div>
                <div class="row"></div>

                <div id="tabs-2">
                    <p>Product/Service Selection:</p>

                    <div id="TabbedProductView0">@Html.Partial("_ProductsTabbedView", Model)</div>

                </div>


                <div id="tabs-3">


                    <div class="box box-default">
                        <div class="box-header with-border">
                            <h2 class="box-title">Additional Services</h2>
                            <div class="col-xs-12 col-md-12">
                                <div class="box box-default" style="width: 1050px; padding: 10px; margin: 10px">
                                    <div class="box-body">

                                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            <div class="col-md-2" style="background-color:#C6E2EE;">Node Type:</div>
                                            <div class="col-md-1" style="background-color:#C6E2EE;">Count</div>
                                            <div class="col-md-1" style="background-color:#C6E2EE;">Hours</div>
                                            <div class="col-md-1" style="background-color:#C6E2EE;">Total FTE</div>

                                        </div>

                                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            <div class="col-md-2">:</div>
                                            <div class="col-md-3" style="background-color:#ffcc99;font-weight:bold">Companion Services</div>


                                        </div>

                                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            <div class="col-md-2">App &amp; Change Control:</div>
                                            <div class="col-md-1" style="background-color:#ffcc99;">
                                                @Html.EditorFor(model => model.NumAppChange, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                                @Html.ValidationMessageFor(model => model.NumAppChange, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-md-1" style="background-color:#ffcc99;">
                                                @Html.EditorFor(model => model.AppChangeHoursCalc, new { htmlAttributes = new { @class = "form-control", Style = "height:25px", disabled = "disabled", @readonly = "readonly" } })
                                                @Html.ValidationMessageFor(model => model.AppChangeHoursCalc, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="col-md-1" style="background-color:#ffcc99; font-weight:bold; font-family:Arial;">
                                                @Html.EditorFor(model => model.AppChangeFTE, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", Style = "height:25px" } })
                                                @Html.ValidationMessageFor(model => model.AppChangeFTE, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            <div class="col-md-2">Softw. LifeCycle Mgmnt: </div>
                                            <div class="col-md-1" style="background-color:#ffcc99; height:25px">
                                                @Html.EditorFor(model => model.SoftLifeSvrYesNo)
                                                @Html.ValidationMessageFor(model => model.SoftLifeSvrYesNo, "", new { @class = "text-danger", Style = "height:25px" })
                                            </div>
                                            <div class="col-md-1" style="background-color:#ffcc99;">
                                                @Html.EditorFor(model => model.SoftLifeSrvHoursCalc, new { htmlAttributes = new { @class = "form-control", Style = "height:25px", disabled = "disabled", @readonly = "readonly" } })
                                                @Html.ValidationMessageFor(model => model.SoftLifeSrvHoursCalc, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="col-md-1" style="background-color:#ffcc99; font-weight:bold; font-family:Arial;">
                                                @Html.EditorFor(model => model.SoftLifeSvrFTE, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", Style = "height:25px" } })
                                                @Html.ValidationMessageFor(model => model.SoftLifeSvrFTE, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            <div class="col-md-2">Sec. Compliance Review:</div>
                                            <div class="col-md-1" style="background-color:#ffcc99; height:25px">

                                                @Html.EditorFor(model => model.SecCompRptYesNo)
                                                @Html.ValidationMessageFor(model => model.SecCompRptYesNo, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-md-1" style="background-color:#ffcc99;">
                                                @Html.EditorFor(model => model.SecCompHoursCalc, new { htmlAttributes = new { @class = "form-control", Style = "height:25px", disabled = "disabled", @readonly = "readonly" } })
                                                @Html.ValidationMessageFor(model => model.SecCompHoursCalc, "", new { @class = "text-danger" })
                                            </div>



                                            <div class="col-md-1" style="background-color:#ffcc99; font-weight:bold; font-family:Arial;">
                                                @Html.EditorFor(model => model.SecComplRptFTE, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", Style = "height:25px" } })
                                                @Html.ValidationMessageFor(model => model.SecComplRptFTE, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            <div class="col-md-2">Detection Reporting:</div>
                                            <div class="col-md-1" style="background-color:#ffcc99; height:25px">

                                                @Html.EditorFor(model => model.ReportingYesNo)
                                                @Html.ValidationMessageFor(model => model.ReportingYesNo, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-md-1" style="background-color:#ffcc99;">
                                                @Html.EditorFor(model => model.RportingHoursCalc, new { htmlAttributes = new { @class = "form-control", Style = "height:25px", disabled = "disabled", @readonly = "readonly" } })
                                                @Html.ValidationMessageFor(model => model.RportingHoursCalc, "", new { @class = "text-danger" })
                                            </div>


                                            <div class="col-md-1" style="background-color:#ffcc99; font-weight:bold; font-family:Arial;">
                                                @Html.EditorFor(model => model.ReportingFTE, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", Style = "height:25px" } })
                                                @Html.ValidationMessageFor(model => model.ReportingFTE, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            <div class="col-md-2">Health/SLA Reports:</div>
                                            <div class="col-md-1" style="background-color:#ffcc99; height:25px">

                                                @Html.EditorFor(model => model.SLAReportingYesNo)
                                                @Html.ValidationMessageFor(model => model.SLAReportingYesNo, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-md-1" style="background-color:#ffcc99;">
                                                @Html.EditorFor(model => model.SlaRptHoursCalc, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", Style = "height:25px" } })
                                                @Html.ValidationMessageFor(model => model.SlaRptHoursCalc, "", new { @class = "text-danger" })
                                            </div>


                                            <div class="col-md-1" style="background-color:#ffcc99; font-weight:bold; font-family:Arial;">
                                                @Html.EditorFor(model => model.SlaRprtFTE, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", Style = "height:25px" } })
                                                @Html.ValidationMessageFor(model => model.SlaRprtFTE, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                            <div class="col-md-2" style="background-color:#C6E2EE;">.</div>
                                            <div class="col-md-1" style="background-color:#C6E2EE;">.</div>
                                            <div class="col-md-1" style="background-color:#C6E2EE;">.</div>
                                            <div class="col-md-1" style="background-color:#C6E2EE;">.</div>


                                        </div>

                                        <div class="row" style="font-weight:bold; font-family:Arial;">
                                            <div class="col-md-3">.</div>
                                            <div class="col-md-1" style="font-weight:bold; font-family:Arial; font-size:9px">
                                                @Html.EditorFor(model => model.AdditionalServices, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                                @Html.ValidationMessageFor(model => model.AdditionalServices, "", new { @class = "text-danger" })
                                            </div>
                                            @*<div class="col-md-7">@testTotal</div>*@
                                            @*<div class="col-md-1">
                                                    @Html.EditorFor(model => model.AdditionalFTE, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                                    @Html.ValidationMessageFor(model => model.AdditionalFTE, "", new { @class = "text-danger" })
                                                </div>*@

                                        </div>
                                        <input type="submit" value="Calc" class="btn btn-primary" />



                                    </div>
                                </div>


                            </div>
                        </div>
                    </div>
                </div>

                <div id="tabs-4">


                    <div class="box box-default" style="width: 1050px; padding: 10px; margin: 10px">
                        <div class="box-header">
                            <h2 class="box-title">Review: Steady-State Totals </h2>
                        </div>

                        <div class="box-body">

                            <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                <div class="col-md-2" style="background-color:#C6E2EE;">.</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">.</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">Hours</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">Band 3</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">Band 4</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">Band 5</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">Band 6</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">Band 7</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">Band 8</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">Band 9</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">Total FTE</div>

                            </div>

                            <div class="row" style="font-weight:normal; font-family:Arial; font-size:10px; height:25px">
                                <div class="col-md-2">Steady State Totals</div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px">.</div>
                                <div class="col-md-1" style="background-color:#ffcc99; font-size:10px">

                                    @Html.EditorFor(model => model.SteadyStateTotalHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateTotalHours, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99;">

                                    @Html.EditorFor(model => model.SteadyStateTotalBand3, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateTotalBand3, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99;">

                                    @Html.EditorFor(model => model.SteadyStateTotalBand4, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateTotalBand4, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99;">

                                    @Html.EditorFor(model => model.SteadyStateTotalBand5, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateTotalBand5, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99;">

                                    @Html.EditorFor(model => model.SteadyStateTotalBand6, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateTotalBand6, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99;">

                                    @Html.EditorFor(model => model.SteadyStateTotalBand7, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateTotalBand7, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99;">

                                    @Html.EditorFor(model => model.SteadyStateTotalBand8, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateTotalBand8, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99;">

                                    @Html.EditorFor(model => model.SteadyStateTotalBand9, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateTotalBand9, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99;">
                                    @Html.EditorFor(model => model.FTE, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.FTE, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row" style="font-weight:normal; font-family:Arial; font-size:10px; height:25px">
                                <div class="col-md-2">1st Line Manage (Band 8)</div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px">.</div>
                                <div class="col-md-1" style="background-color:#ffcc99; font-weight:bold; font-family:Arial">
                                    @Html.EditorFor(model => model.FirstLineMangerBand8Hours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.FirstLineMangerBand8Hours, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#eeeded; height:25px">

                                </div>
                                <div class="col-md-1" style="background-color:#eeeded; height:25px">

                                </div>
                                <div class="col-md-1" style="background-color:#eeeded; height:25px">

                                </div>
                                <div class="col-md-1" style="background-color:#eeeded; height:25px">

                                </div>
                                <div class="col-md-1" style="background-color:#eeeded; height:25px">

                                </div>
                                <div class="col-md-1" style="background-color:#eeeded; height:25px">

                                </div>
                                <div class="col-md-1" style="background-color:#eeeded; height:25px">

                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99; font-weight:bold; font-family:Arial">
                                    @Html.EditorFor(model => model.FirstLineMangerBand8TotalFTE, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.FirstLineMangerBand8TotalFTE, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row" style="font-weight:normal; font-family:Arial; font-size:10px; height:25px">
                                <div class="col-md-2">2nd Line Manage (Band 9)</div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px">.</div>
                                <div class="col-md-1" style="background-color:#ffcc99; font-weight:bold; font-family:Arial; height:25px">
                                    @Html.EditorFor(model => model.SecondLineMangerBand9Hours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SecondLineMangerBand9Hours, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-1" style="background-color:#eeeded; height:25px">

                                </div>
                                <div class="col-md-1" style="background-color:#eeeded; height:25px">

                                </div>
                                <div class="col-md-1" style="background-color:#eeeded; height:25px">

                                </div>
                                <div class="col-md-1" style="background-color:#eeeded; height:25px">

                                </div>
                                <div class="col-md-1" style="background-color:#eeeded; height:25px">

                                </div>
                                <div class="col-md-1" style="background-color:#eeeded; height:25px">

                                </div>
                                <div class="col-md-1" style="background-color:#eeeded; height:25px">

                                </div>

                                <div class="col-md-1" style="background-color:#ffcc99; font-weight:bold; color:brown; font-family:Arial">
                                    @Html.EditorFor(model => model.SecondLineMangerBand9Total, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SecondLineMangerBand9Total, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row" style="background-color:#ffffff; font-weight:normal; font-family:Arial; font-size:10px; height:25px">
                                <div class="col-md-2" style="text-align:right">Sub-Totals ---> </div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px">.</div>
                                <div class="col-md-1" style="text-align:center; background-color:#ffcc99; height:25px">
                                    @Html.EditorFor(model => model.SteadyStateSubTotalHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateSubTotalHours, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99">
                                    @Html.EditorFor(model => model.SteadyStateSubTotalBand3, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateSubTotalBand3, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99">
                                    @Html.EditorFor(model => model.SteadyStateSubTotalBand4, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateSubTotalBand4, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99">
                                    @Html.EditorFor(model => model.SteadyStateSubTotalBand5, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateSubTotalBand5, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99">
                                    @Html.EditorFor(model => model.SteadyStateSubTotalBand6, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateSubTotalBand6, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99">
                                    @Html.EditorFor(model => model.SteadyStateSubTotalBand7, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateSubTotalBand7, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99">
                                    @Html.EditorFor(model => model.SteadyStateSubTotalBand8, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateSubTotalBand8, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99">
                                    @Html.EditorFor(model => model.SteadyStateSubTotalBand9, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateSubTotalBand9, "", new { @class = "text-danger" })
                                </div>


                                <div class="col-md-1" style="background-color:#ffcc99">
                                    @Html.EditorFor(model => model.SteadyStateSubTotalTotal, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly", @style = "width:120%" } })
                                    @Html.ValidationMessageFor(model => model.SteadyStateSubTotalTotal, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                <div class="col-md-12" style="background-color:#C6E2EE;">:</div>

                            </div>
                            <hr />
                            <h5 class="box-title">Other Costs - Enter Here:</h5>


                            <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                <div class="col-md-2" style="background-color:#C6E2EE;">Other Cost</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">.</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">Count</div>
                                <div class="col-md-2" style="background-color:#C6E2EE;">.</div>
                                <div class="col-md-2" style="background-color:#C6E2EE;">Description </div>
                                <div class="col-md-1" style="background-color:#C6E2EE;"> .</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;"> .</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">Cost</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">Amount</div>
                            </div>
                            <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                <div class="col-md-2">Travel</div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px">.</div>
                                <div class="col-md-1" style="background-color:#ffcc99;">
                                    @Html.EditorFor(model => model.TravelCostCount, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.TravelCostCount, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px">.</div>
                                <div class="col-md-4" style="background-color:#ffcc99; height:25px">Travel funding</div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px"> .</div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px">
                                    @Html.EditorFor(model => model.TravelCost, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.TravelCost, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99;">
                                    @Html.EditorFor(model => model.TravelCostAmt, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.TravelCostAmt, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                <div class="col-md-2">Remote Console</div>
                                <div class="col-md-1" style="background-color: #ffcc99; height:25px">.</div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px">
                                    @Html.EditorFor(model => model.RemoteConsoleCostCount, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.RemoteConsoleCostCount, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px">. </div>
                                <div class="col-md-4" style="background-color:#ffcc99; height:25px">Dedicated Laptop for access to customer infrastructure.</div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px"> .</div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px">
                                    @Html.EditorFor(model => model.RemoteConsoleCost, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.RemoteConsoleCost, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99;">
                                    @Html.EditorFor(model => model.RemoteConsoleCostAmt, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.RemoteConsoleCostAmt, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                <div class="col-md-2">Education</div>
                                <div class="col-md-1" style="background-color: #ffcc99; height:25px">.</div>
                                <div class="col-md-1" style="background-color: #ffcc99; height:25px">
                                    @Html.EditorFor(model => model.EducationCostCount, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.EducationCostCount, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px"> .</div>
                                <div class="col-md-4" style="background-color:#ffcc99; height:25px">Education to stay current on vendors products</div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px"> .</div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px">
                                    @Html.EditorFor(model => model.EducationCost, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.EducationCost, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color: #ffcc99;">
                                    @Html.EditorFor(model => model.EducationCostAmt, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.EducationCostAmt, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                <div class="col-md-2">Other Cost 1</div>
                                <div class="col-md-1" style="background-color: #ffcc99; height:25px">.</div>
                                <div class="col-md-1" style="background-color: #ffcc99; height:25px">
                                    @Html.EditorFor(model => model.OtherCostCount1, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.OtherCostCount1, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color: #ffcc99; height:25px; text-align:left"> --> </div>
                                <div class="col-md-5" style="background-color: #ffcc99; height:25px">
                                    @Html.EditorFor(model => model.OtherCostDesc1, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.OtherCostDesc1, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99;">
                                    @Html.EditorFor(model => model.OtherCost1, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.OtherCost1, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99;">
                                    @Html.EditorFor(model => model.OtherCost1Amt, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.OtherCost1Amt, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                <div class="col-md-2">Other Cost 2</div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px">.</div>
                                <div class="col-md-1" style="background-color: #ffcc99; height:25px">
                                    @Html.EditorFor(model => model.OtherCostCount2, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.OtherCostCount2, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color: #ffcc99; height:25px"> --> </div>
                                <div class="col-md-5" style="background-color:#ffcc99; height:25px">
                                    @Html.EditorFor(model => model.OtherCostDesc2, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.OtherCostDesc2, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px">
                                    @Html.EditorFor(model => model.OtherCost2, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.OtherCost2, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color: #ffcc99; height:25px">
                                    @Html.EditorFor(model => model.OtherCost2Amt, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.OtherCost2Amt, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                <div class="col-md-2">Other Cost 3</div>
                                <div class="col-md-1" style="background-color: #ffcc99; height:25px">.</div>
                                <div class="col-md-1" style="background-color: #ffcc99; height:25px">
                                    @Html.EditorFor(model => model.OtherCostCount3, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.OtherCostCount3, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color:#ffcc99; height:25px"> --> </div>
                                <div class="col-md-5" style="background-color:#ffcc99; height:25px">
                                    @Html.EditorFor(model => model.OtherCostDesc3, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.OtherCostDesc3, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color: #ffcc99;">
                                    @Html.EditorFor(model => model.OtherCost3, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.OtherCost3, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1" style="background-color: #ffcc99;">
                                    @Html.EditorFor(model => model.OtherCost3Amt, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.OtherCost3Amt, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row" style="font-weight:bold; font-family:Arial; font-size:10px">
                                <div class="col-md-2" style="font-weight:bold;">.</div>
                                <div class="col-md-1" style="background-color: #ffcc99; height:25px">.</div>
                                <div class="col-md-1" style="background-color: #ffcc99; height:25px">.</div>
                                <div class="col-md-1" style="background-color: #ffcc99; height:25px">.</div>
                                <div class="col-md-3" style="background-color: #ffcc99; height:25px">.</div>
                                <div class="col-md-3" style="background-color: #ffcc99; font-weight:bold; height:25px">Other Costs Dollar Sub-Total -></div>
                                <div class="col-md-1" style="background-color: #ffcc99; font-weight:bold; height:25px">
                                    @Html.EditorFor(model => model.OtherCostsDollarSubTotal, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })
                                    @Html.ValidationMessageFor(model => model.OtherCostsDollarSubTotal, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row" style="font-weight:bold; font-family:Arial;font-size:10px">
                                <div class="col-md-3" style="background-color:#C6E2EE;">.</div>
                                <div class="col-md-2" style="background-color:#C6E2EE;">.</div>
                                <div class="col-md-2" style="background-color:#C6E2EE;">.</div>
                                <div class="col-md-2" style="background-color:#C6E2EE;">.</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">.</div>
                                <div class="col-md-1" style="background-color:#C6E2EE;">.</div>
                                <div class="col-md-1" style="background-color:#C6E2EE ;">.</div>
                            </div>

                        </div>
                    </div>



                    <input type="submit" value="Re-Calculate Form" class="btn btn-primary" />
                </div>

                <div id="tabs-5">
                    <p>T and T Worksheet</p>

                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-10"><h3>'Infrastructure and EndPoint Security  Sizing Transition & Transformation Worksheet</h3></div>
                        <div class="col-md-1"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">

                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-1">#</div>
                        <div class="col-md-6">Description</div>
                        <div class="col-md-1">Count</div>
                        <div class="col-md-1">Transition Hours/Item</div>
                        <div class="col-md-1">Transition Hours</div>
                        <div class="col-md-1">Transformation Hours/Item</div>
                        <div class="col-md-1">Transformation Hours</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">1</div>
                        <div class="col-md-6">Execute transition plan, task tracking, conferences, minutes, communication, status reporting, etc</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ExecuteTransitionPlan_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ExecuteTransitionPlan_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ExecuteTransitionPlan_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ExecuteTransitionPlan_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ExecuteTransitionPlan_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ExecuteTransitionPlan_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ExecuteTransitionPlan_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ExecuteTransitionPlan_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ExecuteTransitionPlan_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ExecuteTransitionPlan_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">2</div>
                        <div class="col-md-6">Create (best practice/custom), Review, Deploy and Document initial policies (incl. QA test of policies on endpoints)</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.CreateBestPracticeCustom_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.CreateBestPracticeCustom_Count, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.CreateBestPracticeCustom_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.CreateBestPracticeCustom_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.CreateBestPracticeCustom_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.CreateBestPracticeCustom_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.CreateBestPracticeCustom_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.CreateBestPracticeCustom_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.CreateBestPracticeCustom_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.CreateBestPracticeCustom_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">3</div>
                        <div class="col-md-6">Test infrastructure (POC test, non-production data test, stress test, server/console failover, etc.).</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.TestInfrastructurePOC_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.TestInfrastructurePOC_Count, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.TestInfrastructurePOC_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.TestInfrastructurePOC_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.TestInfrastructurePOC_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.TestInfrastructurePOC_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.TestInfrastructurePOC_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.TestInfrastructurePOC_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.TestInfrastructurePOC_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.TestInfrastructurePOC_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">

                        <div class="col-md-1">4</div>
                        <div class="col-md-6">Troubleshoot/tune infrastructure. Engage vendor and other teams as needed</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.TroubleshootTune_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.TroubleshootTune_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.TroubleshootTune_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.TroubleshootTune_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.TroubleshootTune_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.TroubleshootTune_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.TroubleshootTune_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigure_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.TroubleshootTune_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.TroubleshootTune_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>





                    <div class="row">
                        <div class="col-md-1">4</div>
                        <div class="col-md-6">Install/configure product on infrastructure servers; patch or hotfix</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigure_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigure_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigure_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigure_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigure_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigure_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigure_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigure_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigure_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigure_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">5</div>
                        <div class="col-md-6">Administrator training of GDC pooled resources</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.AdministratorTraining_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.AdministratorTraining_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.AdministratorTraining_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.AdministratorTraining_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.AdministratorTraining_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.AdministratorTraining_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.AdministratorTraining_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.AdministratorTraining_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.AdministratorTraining_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.AdministratorTraining_TransformationHours, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-1">6</div>
                        <div class="col-md-6">Develop Service Responsibility Matrix; review among stakeholders</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopServiceResponsibilityMatrix_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopServiceResponsibilityMatrix_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopServiceResponsibilityMatrix_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopServiceResponsibilityMatrix_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopServiceResponsibilityMatrix_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopServiceResponsibilityMatrix_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopServiceResponsibilityMatrix_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopServiceResponsibilityMatrix_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopServiceResponsibilityMatrix_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopServiceResponsibilityMatrix_TransformationHours, "", new { @class = "text-danger" })
                        </div>



                    </div>
                    <div class="row">
                        <div class="col-md-1">7</div>
                        <div class="col-md-6">Establish any needed service accounts, business justifications, approval processes, testing.</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.EstablishAnyNeededServiceAccounts_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.EstablishAnyNeededServiceAccounts_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.EstablishAnyNeededServiceAccounts_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.EstablishAnyNeededServiceAccounts_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.EstablishAnyNeededServiceAccounts_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.EstablishAnyNeededServiceAccounts_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.EstablishAnyNeededServiceAccounts_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.EstablishAnyNeededServiceAccounts_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.EstablishAnyNeededServiceAccounts_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.EstablishAnyNeededServiceAccounts_TransformationHours, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-1">8</div>
                        <div class="col-md-6">Research and setup email automation (SMTP or via special triggers) - includes alerts, failure notifications, etc. as needed.</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ResearchAndSetupEmailAutomation_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ResearchAndSetupEmailAutomation_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ResearchAndSetupEmailAutomation_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ResearchAndSetupEmailAutomation_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ResearchAndSetupEmailAutomation_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ResearchAndSetupEmailAutomation_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ResearchAndSetupEmailAutomation_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ResearchAndSetupEmailAutomation_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ResearchAndSetupEmailAutomation_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ResearchAndSetupEmailAutomation_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">9</div>
                        <div class="col-md-6">Install/configure remote consoles</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigureRemoteConsoles_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigureRemoteConsoles_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigureRemoteConsoles_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigureRemoteConsoles_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigureRemoteConsoles_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigureRemoteConsoles_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigureRemoteConsoles_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigureRemoteConsoles_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigureRemoteConsoles_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigureRemoteConsoles_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">10</div>
                        <div class="col-md-6">Work with SECOPS to ensure proper performance; understanding of error codes, baseline performance expectation, etc.</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.WorkWithSECOPS_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.WorkWithSECOPS_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.WorkWithSECOPS_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.WorkWithSECOPS_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.WorkWithSECOPS_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.WorkWithSECOPS_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.WorkWithSECOPS_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.WorkWithSECOPS_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.WorkWithSECOPS_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.WorkWithSECOPS_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">11</div>
                        <div class="col-md-6">Staffing (coordinating)</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.StaffingCcoordinating_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.StaffingCcoordinating_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.StaffingCcoordinating_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.StaffingCcoordinating_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.StaffingCcoordinating_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.StaffingCcoordinating_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.StaffingCcoordinating_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.StaffingCcoordinating_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.StaffingCcoordinating_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.StaffingCcoordinating_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">12</div>
                        <div class="col-md-6">Identify/test/document onboarding procedures.</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.IdentifyTestDocument_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.IdentifyTestDocument_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.IdentifyTestDocument_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.IdentifyTestDocument_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.IdentifyTestDocument_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.IdentifyTestDocument_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.IdentifyTestDocument_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.IdentifyTestDocument_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.IdentifyTestDocument_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.IdentifyTestDocument_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">13</div>
                        <div class="col-md-6">Obtain network and OS access - Wave 1 (Initial staffing needed for Knowledge Transfer)</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave1_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave1_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave1_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave1_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave1_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave1_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave1_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave1_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave1_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave1_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">14</div>
                        <div class="col-md-6">Obtain network and OS access - Wave 2 (Staffing needed for Steady State)</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave2_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave2_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave2_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave2_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave2_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave2_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave2_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave2_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave2_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ObtainNetworkAndOsAccessWave2_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-1">15</div>
                        <div class="col-md-6">Develop/provide agent to software deployment group; oversee agent deployment (manual install required)</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopProvideAgentSoftware_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopProvideAgentSoftware_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopProvideAgentSoftware_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopProvideAgentSoftware_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopProvideAgentSoftware_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopProvideAgentSoftware_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopProvideAgentSoftware_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopProvideAgentSoftware_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopProvideAgentSoftware_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopProvideAgentSoftware_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    <div class="row">
                        <div class="col-md-1">16</div>
                        <div class="col-md-6">Install/configure ODBC or other connectors to metaconsoles; </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.CustomerReviewSignoff_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigureODBC_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.CustomerReviewSignoff_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.CustomerReviewSignoff_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.CustomerReviewSignoff_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.CustomerReviewSignoff_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.CustomerReviewSignoff_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.CustomerReviewSignoff_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.CustomerReviewSignoff_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.CustomerReviewSignoff_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">17</div>
                        <div class="col-md-6">Customer review and sign-off on infrastructure set up, test results, etc.</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigureODBC_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigureODBC_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigureODBC_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigureODBC_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigureODBC_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigureODBC_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigureODBC_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigureODBC_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.InstallConfigureODBC_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.InstallConfigureODBC_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">18</div>
                        <div class="col-md-6">Establish Health check regimen for product and infrastructure</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.EstablishHealthCheck_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.EstablishHealthCheck_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.EstablishHealthCheck_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.EstablishHealthCheck_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.EstablishHealthCheck_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.EstablishHealthCheck_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.EstablishHealthCheck_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.EstablishHealthCheck_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.EstablishHealthCheck_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.EstablishHealthCheck_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">19</div>
                        <div class="col-md-6">Develop workflows for patch management, change management, incident management, policy review</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopWorkFlows_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopWorkFlows_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopWorkFlows_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopWorkFlows_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopWorkFlows_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopWorkFlows_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopWorkFlows_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopWorkFlows_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.DevelopWorkFlows_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.DevelopWorkFlows_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">20</div>
                        <div class="col-md-6">Operational documentation</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.OperationalDocumentation_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.OperationalDocumentation_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.OperationalDocumentation_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.OperationalDocumentation_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.OperationalDocumentation_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.OperationalDocumentation_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.OperationalDocumentation_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.OperationalDocumentation_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.OperationalDocumentation_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.OperationalDocumentation_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">21</div>
                        <div class="col-md-6">Shadow/Establish/Review all procedures, monitoring of console, health check, support ticket queue, etc.</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ShadowEstablishReviewAllProcedures_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ShadowEstablishReviewAllProcedures_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ShadowEstablishReviewAllProcedures_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ShadowEstablishReviewAllProcedures_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ShadowEstablishReviewAllProcedures_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ShadowEstablishReviewAllProcedures_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ShadowEstablishReviewAllProcedures_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ShadowEstablishReviewAllProcedures_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.ShadowEstablishReviewAllProcedures_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.ShadowEstablishReviewAllProcedures_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">22</div>
                        <div class="col-md-6">Other (details available in project plan)</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.OtherDetail_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.OtherDetail_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.OtherDetail_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.OtherDetail_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.OtherDetail_TransitionHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.OtherDetail_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.OtherDetail_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.OtherDetail_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.OtherDetail_TransformationHours, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.OtherDetail_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">23</div>
                        <div class="col-md-6">Special Items 1</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem1_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem1_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem1_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem1_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem1_TransitionHours, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem1_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem1_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem1_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem1_TransformationHours, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem1_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">24</div>
                        <div class="col-md-6">Special Items 2</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem2_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem2_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem2_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem2_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem2_TransitionHours, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem2_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem2_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem2_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem2_TransformationHours, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem2_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">

                        <div class="col-md-1">25</div>
                        <div class="col-md-6">Special Items 3</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem3_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem3_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem3_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem3_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem3_TransitionHours, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem3_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem3_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem3_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem3_TransformationHours, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem3_TransformationHours, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-1">26</div>
                        <div class="col-md-6">Special Items 4</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem4_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem4_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem4_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem4_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem4_TransitionHours, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem4_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem4_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem4_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem4_TransformationHours, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem4_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">27</div>
                        <div class="col-md-6">Special Item 5</div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem5_Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem5_Count, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem5_TransitionHoursItem, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem5_TransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem5_TransitionHours, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem5_TransitionHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem5_TransformationHoursItem, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem5_TransformationHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.TnTWorksheet.SpecialItem5_TransformationHours, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.SpecialItem5_TransformationHours, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-8">.</div>
                        <div class="col-md-4"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-6"></div>
                        <div class="col-md-6"></div>

                    </div>
                    <div class="row">
                        <div class="col-md-6"></div>
                        <div class="col-md-6"></div>

                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-6"></div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1" style="font-weight:bold; font-family:Arial; font-size:x-small">Transition Hrs</div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1" style="font-weight:bold; font-family:Arial; font-size:x-small">Tranform Hrs</div>
                    </div>

                    <div class="row">
                        <div class="col-md-1">.</div>
                        <div class="col-md-6">.</div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1" style="font-weight:bold; font-family:Arial">
                            @Html.EditorFor(model => model.TnTWorksheet.TotalTransitionHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.TotalTransitionHoursItem, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1" style="font-weight:bold; font-family:Arial">
                            @Html.EditorFor(model => model.TnTWorksheet.TotalTransformationHoursItem, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.TotalTransformationHoursItem, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-1">.</div>
                        <div class="col-md-6">.</div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1" style="font-weight:bold; font-family:Arial">
                            @Html.EditorFor(model => model.TnTWorksheet.TransitionSubTotalsHoursItems, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.TransitionSubTotalsHoursItems, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1" style="font-weight:bold; font-family:Arial">
                            @Html.EditorFor(model => model.TnTWorksheet.TransformationSubTotalsHoursItems, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TnTWorksheet.TransformationSubTotalsHoursItems, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-6"></div>
                        <div class="col-md-6"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-6"></div>
                        <div class="col-md-6"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-6"></div>
                        <div class="col-md-6"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="col-md-6"></div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1" style="font-weight:bold; font-family:Arial; font-size:x-small">.</div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1" style="font-weight:bold; font-family:Arial; font-size:x-small">.</div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">.</div>
                        <div class="col-md-6">.</div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1"></div>
                        @*    <div class="col-md-1" style="font-weight:bold; font-family:Arial;">
                                @Html.EditorFor(model => model.TransitionWeeks, new         { htmlAttributes = new {@class = "form-control",@style = "Background-color: #ffcc99;" } })

                                @Html.ValidationMessageFor(model => model.TransitionWeeks, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-1"></div>
                            <div class="col-md-1" style="font-weight:bold; font-family:Arial">
                                @Html.EditorFor(model => model.TransformatonWeeks, new { htmlAttributes = new { @class = "form-control", @style = "Background-color: #ffcc99;" } })
                                @Html.ValidationMessageFor(model => model.TransformatonWeeks, "", new { @class = "text-danger" })
                            </div>*@

                    </div>

                    <div class="row">
                        <div class="col-md-6">

                            <input type="submit" value="Re-Calculate Form" class="btn btn-primary" />
                        </div>
                        <div class="col-md-6">.col-md-6</div>

                    </div>

                </div>

                <div id="tabs-6">


                    <div class="box box-default">
                        <div class="box-header with-border">
                            <h3 class="box-title">Details:</h3>
                            <h3 class="box-title">Under Construction:</h3>

                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-remove"></i></button>
                            </div>
                        </div>

                    </div>
                    <div class="container">

                        <div class="row">
                            <div class="col-3" id="DeliveryProd1Sec">
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-laptop"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">
                                            Product #1
                                        </span>

                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.AvProduct.ProductName, new { htmlAttributes = new { @class = "form-control", Style = "height:33px" } })
                                            @Html.ValidationMessageFor(model => model.NumWorkstation, "", new { @class = "text-danger" })
                                        </span>

                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="info-box-text" style="font-size:9px">
                                            @Html.DisplayFor(model => model.AvProduct.ProductDesc, new { htmlAttributes = new { @class = "form-control", Style = "height:33px" } })
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-laptop"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">
                                            Workstations:
                                        </span>

                                        <span class="info-box-number">

                                            @Html.DisplayFor(model => model.NumWorkstation, new { htmlAttributes = new { @class = "form-control", Style = "height:33px" } })
                                            @Html.ValidationMessageFor(model => model.NumWorkstation, "", new { @class = "text-danger" })
                                        </span>

                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-server"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Servers</span>
                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.NumServer, new { htmlAttributes = new { @class = "form-control", Style = "height:33px" } })
                                            @Html.ValidationMessageFor(model => model.NumServer, "", new { @class = "text-danger" })
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-sitemap"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">IP/EP</span>
                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.NumIpAddress, new { htmlAttributes = new { @class = "form-control", Style = "height:33px" } })
                                            @Html.ValidationMessageFor(model => model.NumIpAddress, "", new { @class = "text-danger" })
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-calculator"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Total Endpoints</span>
                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.ProdLegendTtl_1, new { htmlAttributes = new { @class = "form-control", Style = "height:33px" } })
                                            @Html.ValidationMessageFor(model => model.ProdLegendTtl_1, "", new { @class = "text-danger" })
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gears"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Components</span>
                                        <span class="info-box-number">41,410</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            Hours from Components
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #1</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component1Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #2</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component2Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #3</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component3Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #4</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component4Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #5</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component5Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #6</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component6Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #7</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component7Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #8</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component8Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #9</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component9Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #10</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component10Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #11</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component11Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #12</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component12Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #13</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component13Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #14</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component14Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #15</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.AvProduct.Component15Desc, new { disabled = "disabled", @readonly = "readonly" })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->


                            </div>





                            <div class="col-3" id="DeliveryProd2Sec">

                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue">
                                    <span class="info-box-icon"><i class="fa fa-laptop"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">
                                            Product #2
                                        </span>
                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.DescProduct_2, new { htmlAttributes = new { @class = "form-control", Style = "height:33px" } })
                                        </span>

                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="info-box-text" style="font-size:9px">
                                            @Html.DisplayFor(model => model.AvProduct.ProductDesc, new { htmlAttributes = new { @class = "form-control", Style = "height:33px" } })
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-laptop"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Workstations</span>
                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.NumWorkstation1, new { htmlAttributes = new { @class = "form-control", Style = "height: 25px" } })
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-server"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">SERVERS</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.NumServer1, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">IP/EP</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.NumIpAddress1, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Total Endpoints</span>
                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.ProdLegendTtl_2, new { htmlAttributes = new { @class = "form-control", Style = "height:33px" } })
                                            @Html.ValidationMessageFor(model => model.ProdLegendTtl_1, "", new { @class = "text-danger" })
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">COMPONENTS</span>
                                        <span class="info-box-number">
                                            41000
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #1</span>
                                        <span class="info-box-number" style="font-size:14px">
                                            @Html.DisplayFor(model => model.Prod2Compnent1Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #2</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod2Compnent2Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #3</span>
                                        <span class="info-box-number" style="font-size:14px">@Html.DisplayFor(model => model.Prod2Compnent3Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #4</span>
                                        <span class="info-box-number">41,410</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #5</span>
                                        <span class="info-box-number">41,410</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #6</span>
                                        <span class="info-box-number">41,410</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #7</span>
                                        <span class="info-box-number">41,410</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #8</span>
                                        <span class="info-box-number">41,410</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #9</span>
                                        <span class="info-box-number">41,410</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #10</span>
                                        <span class="info-box-number">41,410</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component 11</span>
                                        <span class="info-box-number">41,410</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #12</span>
                                        <span class="info-box-number">41,410</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #13</span>
                                        <span class="info-box-number">41,410</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #14</span>
                                        <span class="info-box-number">41,410</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #15</span>
                                        <span class="info-box-number">41,410</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->


                            </div>
                            <div class="col-3" id="DeliveryProd3Sec">

                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-gradient">
                                    <span class="info-box-icon"><i class="fa fa-laptop"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Product #3</span>
                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.DescProduct_3, new { htmlAttributes = new { @class = "form-control", Style = "height:33px" } })
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-laptop"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Workstations:</span>
                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.NumWorkstation2, new { htmlAttributes = new { @class = "form-control", Style = "height: 25px" } })
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-server"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">SERVERS</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.NumServer2, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">IP/EndPoints</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.NumIpAddress2, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Total Endpoints</span>
                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.ProdLegendTtl_3, new { htmlAttributes = new { @class = "form-control", Style = "height:33px" } })
                                            @Html.ValidationMessageFor(model => model.ProdLegendTtl_1, "", new { @class = "text-danger" })
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">COMPONENTS</span>
                                        <span class="info-box-number">
                                            41000
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #1</span>
                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.Prod3Compnent1Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #2</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod3Compnent2Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #3</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod3Compnent3Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #4</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod3Compnent4Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #5</span>
                                        <span class="info-box-number">
                                            <span class="info-box-number">
                                                @Html.DisplayFor(model => model.Prod3Compnent5Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            </span>
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #6</span>
                                        <span class="info-box-number">
                                            <span class="info-box-number">@Html.DisplayFor(model => model.Prod3Compnent6Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #7</span>
                                        <span class="info-box-number"><span class="info-box-number">@Html.DisplayFor(model => model.Prod3Compnent7Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span></span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #8</span>
                                        <span class="info-box-number"><span class="info-box-number">@Html.DisplayFor(model => model.Prod3Compnent8Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span></span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #9</span>
                                        <span class="info-box-number"><span class="info-box-number">@Html.DisplayFor(model => model.Prod3Compnent9Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span></span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #10</span>
                                        <span class="info-box-number"><span class="info-box-number">@Html.DisplayFor(model => model.Prod3Compnent10Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span></span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component 11</span>
                                        <span class="info-box-number"><span class="info-box-number">@Html.DisplayFor(model => model.Prod3Compnent11Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span></span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #12</span>
                                        <span class="info-box-number"><span class="info-box-number">@Html.DisplayFor(model => model.Prod3Compnent12Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span></span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #13</span>
                                        <span class="info-box-number"><span class="info-box-number">@Html.DisplayFor(model => model.Prod3Compnent13Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span></span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #14</span>
                                        <span class="info-box-number"><span class="info-box-number">@Html.DisplayFor(model => model.Prod3Compnent14Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span></span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #15</span>
                                        <span class="info-box-number"><span class="info-box-number">@Html.DisplayFor(model => model.Prod3Compnent15Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span></span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->




                            </div>
                            <div class="col-3" id="DeliveryProd4Sec">

                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-light-blue-gradient">
                                    <span class="info-box-icon"><i class="fa fa-laptop"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Product #4</span>
                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.DescProduct_4, new { htmlAttributes = new { @class = "form-control", Style = "height:33px" } })
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-laptop"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Workstations:</span>
                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.NumWorkstation2, new { htmlAttributes = new { @class = "form-control", Style = "height: 25px" } })
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-server"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">SERVERS</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.NumServer2, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">IP/EndPoints</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.NumIpAddress2, new { htmlAttributes = new { @class = "form-control", Style = "height:25px" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Total Endpoints</span>
                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.ProdLegendTtl_3, new { htmlAttributes = new { @class = "form-control", Style = "height:33px" } })
                                            @Html.ValidationMessageFor(model => model.ProdLegendTtl_1, "", new { @class = "text-danger" })
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">COMPONENTS</span>
                                        <span class="info-box-number">
                                            41000
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #1</span>
                                        <span class="info-box-number">
                                            @Html.DisplayFor(model => model.Prod4Compnent1Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #2</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod4Compnent2Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #3</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod4Compnent3Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #4</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod4Compnent4Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #5</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod4Compnent5Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #6</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod4Compnent6Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #7</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod4Compnent7Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #8</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod4Compnent8Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #9</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod4Compnent9Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #10</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod4Compnent10Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component 11</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod4Compnent11Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                v                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #12</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod4Compnent12Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #13</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod4Compnent13Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #14</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod4Compnent14Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->
                                <!-- Apply any bg-* class to to the info-box to color it -->
                                <div class="info-box bg-blue-active">
                                    <span class="info-box-icon"><i class="fa fa-gear"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Component #15</span>
                                        <span class="info-box-number">@Html.DisplayFor(model => model.Prod4Compnent15Desc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</span>
                                        <!-- The progress section is optional -->
                                        <div class="progress">
                                            <div class="progress-bar" style="width: 70%"></div>
                                        </div>
                                        <span class="progress-description">
                                            70% Increase in 30 Days
                                        </span>
                                    </div><!-- /.info-box-content -->
                                </div><!-- /.info-box -->


                            </div>
                        </div>
                        <div class="row"></div>
                        <div class="row"></div>
                        <div class="row"></div>

                    </div>

                </div>

            </div>
        </div>





        @* <script src="~/Scripts/jquery-3.2.1.min.js"></script>*@



        <div classs="row" id="ProductComplexity">
            <div class="col-md-9">
                <div class="box box-default">
                    <div class="box-header with-border">
                        <h3 class="box-title">Product Complexity</h3>

                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-remove"></i></button>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:smaller">
                            <div class="col-md-2" style="background-color:#C6E2EE; text-align:right">Product:</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">Base</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">Factor</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">FTE Band3</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">FTE Band4</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">FTE Band5</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">FTE Band6</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">FTE Band7</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">FTE Band8</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">FTE Band9</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">.</div>
                        </div>

                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:smaller">
                            <div class="col-md-2" style="background-color:#C6E2EE;text-align:right">@Html.TextBoxFor(s => s.AvProduct.ProductName, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.ProductComplexityBase, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.ProductComplexityFac, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.LaborDelivery.Band3Count, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.LaborDelivery.Band4Count, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.LaborDelivery.Band5Count, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.LaborDelivery.Band6Count, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.LaborDelivery.Band7Count, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.LaborDelivery.Band8Count, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.LaborDelivery.Band9Count, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;"></div>

                        </div>

                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:smaller">
                            <div class="col-md-2" style="background-color:#C6E2EE;">.</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">.</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">.</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.LaborDelivery.Band3Percentage, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.LaborDelivery.Band4Percentage, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.LaborDelivery.Band5Percentage, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.LaborDelivery.Band6Percentage, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.LaborDelivery.Band7Percentage, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.LaborDelivery.Band8Percentage, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.LaborDelivery.Band9Percentage, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;"></div>

                        </div>

                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:smaller">
                            <div class="col-md-2" style="background-color:#C6E2EE; text-align:right">Product-Complexity:</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">Comp1</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">Comp2</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">Comp3</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">Comp4</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">Comp5</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">Comp6</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">Comp7</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">Comp8</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">Base</div>
                        </div>

                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:smaller">
                            <div class="col-md-2" style="background-color:#C6E2EE;">.</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.Component1Desc, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.Component2Desc, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.Component3Desc, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.Component4Desc, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.Component5Desc, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.Component6Desc, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.Component7Desc, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.Component8Desc, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.Component9Desc, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;"></div>

                        </div>
                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:smaller">
                            <div class="col-md-2" style="background-color:#C6E2EE;">.</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.ComponentComplexityFac1, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.ComponentComplexityFac2, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.ComponentComplexityFac3, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.ComponentComplexityFac4, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.ComponentComplexityFac5, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.ComponentComplexityFac6, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.ComponentComplexityFac7, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.ComponentComplexityFac8, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;">@Html.TextBoxFor(s => s.AvProduct.ComponentComplexityFac9, new { @class = "myEditable", disabled = "disabled" })</div>
                            <div class="col-md-1" style="background-color:#C6E2EE;"></div>

                        </div>

                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:smaller">
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                        </div>
                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:smaller">
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                        </div>
                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:smaller">
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                        </div>
                        <div class="row" style="font-weight:bold; font-family:Arial; font-size:smaller">
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                            <div class="col-md-1" style="background-color:#ffffff;">.</div>
                        </div>
                    </div>
                </div>
            </div>

        </div>


        @Html.ActionLink("Back to List", "Index")

    </div>



    #region Old code to make room for Xfer



    #endregion






}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/Content/css")


    <script>
        // Code to Block Post on Enter Key Press
        $(document).keypress(function (e) {
            if (e.keyCode === 13) {
                e.preventDefault();
                return false;
            }
        });
    </script>

    @* Script for Ajax Form Saving*@
    @* <script src="~/Scripts/jquery-3.3.1.min.js"></script> *@

    @*<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

        <link rel="stylesheet" href="/resources/demos/style.css">

        <script src="~/Scripts/jquery-1.10.2.js"></script>
        <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        >
        <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
        <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
        <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
        <script src="~/Scripts/jquery-ui-i18n.js"></script>*@


    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-ui.js"></script>


    <script>
        $(function () {
            $("#tabs").tabs();
        });
    </script>

    <script>
        $(function () {
            $("#ProductsViewTabs").tabs();
        });
    </script>

    <script>
        $(function () {
            $("#ProductTabs").tabs();
        });
    </script>

    <script>

        $(function () {

            $("#accordion").accordion();

        });

    </script>




    @* New Component expansion feature *@
    <script type="text/javascript">

        $('#AvProductView0').hide();

        $(function () {

            $('#chk_Avproduct0').change(function () {

                if ($('#chk_Avproduct0').is(':checked'))

                    $("#AvProductView0").fadeIn();

                else

                    $('#AvProductView0').fadeOut();

            });

        });

    </script>

    <script type="text/javascript">

        $('#testdiv').hide();

        $(function () {

            $('#chkStatus').change(function () {

                if ($('#chkStatus').is(':checked'))

                    $("#testdiv").fadeIn();

                else

                    $('#testdiv').fadeOut();

            });

        });

    </script>

    <script type="text/javascript">

        $('#ProductComplexity').hide();

        $(function () {

            $('#chkProdComplx').change(function () {

                if ($('#chkProdComplx').is(':checked'))

                    $("#ProductComplexity").fadeIn();

                else

                    $('#ProductComplexity').fadeOut();

            });

        });

    </script>

    <script type="text/javascript">

        $('#Product1').hide();

        $(function () {

            $('#chkProduct1').change(function () {

                if ($('#chkProduct1').is(':checked'))

                    $("#Product1").fadeIn();

                else

                    $('#Product1').fadeOut();

            });

        });

    </script>

    <script type="text/javascript">

        $('#Product2').hide();

        $(function () {

            $('#chkProduct2').change(function () {

                if ($('#chkProduct2').is(':checked'))

                    $("#Product2").fadeIn();

                else

                    $('#Product2').fadeOut();

            });

        });

    </script>

    <script type="text/javascript">

        $('#Product3').hide();

        $(function () {

            $('#chkProduct3').change(function () {

                if ($('#chkProduct3').is(':checked'))

                    $("#Product3").fadeIn();

                else

                    $('#Product3').fadeOut();

            });

        });

    </script>

    <script>
        $(function () {
            $("#AvProdAccordian1").accordion({
                collapsible: true
            });
        });
    </script>




    <script type="text/javascript">
        $(function () {
            $("#ddl_DeliveredFrom1").change(function () {
              //  alert($(this).val() + " " + $(this).find("option:selected").html());
                var id = $(this).val();
                $.ajax({
                    type: "Post",
                    url: '@Url.Action("GetDeliveredFrom1ID", "Dashboard_Old")',
                    data: '{id: "' + id + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        //alert(data.LastName);
                        $("#txtLaborDeliveryId").val(data.LaborDeliveryId);
                        $("#txtRegions").val(data.Regions);
                        $("#txtDefaultFTE_Year").val(data.DefaultFTE_Year);
                        $("#txtWorkWeek").val(data.WorkWeek);
                        $("#txtDeliveryCtrCostFactor").val(data.DeliveryCtrCostFactor);
                    },

                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Delivery Center.');
                    }
                });

            });
        });
    </script>


    @* Product #1 Calc*@
    <script type="text/javascript">
        $(function () {
            $("#AvProductId").change(function () {
              //  alert($(this).val() + " " + $(this).find("option:selected").html());
                var id = $(this).val();
                $.ajax({
                    type: "Post",
                    url: '@Url.Action("GetProductByID1", "SizingUserDashBoard")',
                    data: '{id: "' + id + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        //alert(data.LastName);
                        $("#txtAvProdId").val(data.AvProductId);
                        $("#txtProductName1").val(data.ProductName);
                        $("#txtProductDesc1").val(data.ProductDesc);
                        $("#txtProductComplexityFac1").val(data.ProductComplexityFac);
                        $("#txtProductComplexityBase1").val(data.ProductComplexityBase);
                        $("#txtTotalComplexity1").val(data.TotalComplexity);
                        $("#txtComponent1Desc1").val(data.Component1Desc);
                        $("#txtComponent2Desc1").val(data.Component2Desc);
                        $("#txtComponent3Desc1").val(data.Component3Desc);
                        $("#txtComponent4Desc1").val(data.Component4Desc);
                        $("#txtComponent5Desc1").val(data.Component5Desc);
                        $("#txtComponent6Desc1").val(data.Component6Desc);
                        $("#txtComponent7Desc1").val(data.Component7Desc);
                        $("#txtComponent8Desc1").val(data.Component8Desc);
                        $("#txtComponent9Desc1").val(data.Component9Desc);
                        $("#txtComponent10Desc1").val(data.Component10Desc);
                        $("#txtComponent11Desc1").val(data.Component11Desc);
                        $("#txtComponent12Desc1").val(data.Component12Desc);
                        $("#txtComponent13Desc1").val(data.Component13Desc);
                        $("#txtComponent14Desc1").val(data.Component14Desc);
                        $("#txtComponent15Desc1").val(data.Component15Desc);
                       @* $("#TestProdDesc12").val(data.Component12Desc);
                        $("#TestProdDesc13").val(data.Component13Desc);
                        $("#Prod1Compnent2Desc").val($("#txtComponent2Desc1").val());
                        $("#Prod1Compnent3Desc").val($("#txtComponent3Desc1").val());*@

                        $("#TestProdDesc12").val($("#txtComponent12Desc1").val());
                        $("#TestProdDesc13").val($("#txtComponent13Desc1").val());


                        $("#Prod1Compnent1Desc").val(data.Component1Desc);
                        $("#Prod1Compnent2Desc").val(data.Component2Desc);
                        $("#Prod1Compnent3Desc").val(data.Component3Desc);
                        $("#Prod1Compnent4Desc").val(data.Component4Desc);
                        $("#Prod1Compnent5Desc").val(data.Component5Desc);

                        $("#Prod1Compnent6Desc").val(data.Component6Desc);
                        $("#Prod1Compnent7Desc").val(data.Component7Desc);
                        $("#Prod1Compnent8Desc").val(data.Component8Desc);
                        $("#Prod1Compnent9Desc").val(data.Component9Desc);
                        $("#Prod1Compnent10Desc").val(data.Component10Desc);

                        $("#Prod1Compnent11Desc").val(data.Component11Desc);
                        $("#Prod1Compnent12Desc").val(data.Component12Desc);
                        $("#Prod1Compnent13Desc").val(data.Component13Desc);
                        $("#Prod1Compnent14Desc").val(data.Component14Desc);
                        $("#Prod1Compnent15Desc").val(data.Component15Desc);


                        $("#Compnent1Desc").val(data.Component1Desc);
                        $("#Compnent2Desc").val(data.Component2Desc);
                        $("#Compnent3Desc").val(data.Component3Desc);
                        $("#Compnent4Desc").val(data.Component4Desc);
                        $("#Compnent5Desc").val(data.Component5Desc);
                        $("#Compnent6Desc").val(data.Component6Desc);
                        $("#Compnent7Desc").val(data.Component7Desc);
                        $("#Compnent8Desc").val(data.Component8Desc);
                        $("#Compnent9Desc").val(data.Component9Desc);
                        $("#Compnent10Desc").val(data.Component10Desc);
                        $("#Compnent11Desc").val(data.Component11Desc);
                        $("#Compnent12Desc").val(data.Component12Desc);
                        $("#Compnent13Desc").val(data.Component13Desc);
                        $("#Compnent14Desc").val(data.Component14Desc);
                        $("#Compnent15Desc").val(data.Component15Desc);


                        $("#Avproduct.Compnent15Desc").val(data.Component15Desc);




                        $("#txtComponentComplexityFac1_1").val(data.ComponentComplexityFac1);

                        $("#Prod1ComponentComplexityFac1").val(data.ComponentComplexityFac1);

                        $("#txtComponentComplexityFac1_1").val(data.ComponentComplexityFac1);
                        $("#txtComponentComplexityFac2_1").val(data.ComponentComplexityFac2);
                        $("#txtComponentComplexityFac3_1").val(data.ComponentComplexityFac3);
                        $("#txtComponentComplexityFac4_1").val(data.ComponentComplexityFac4);
                        $("#txtComponentComplexityFac5_1").val(data.ComponentComplexityFac5);
                        $("#txtComponentComplexityFac6_1").val(data.ComponentComplexityFac6);
                        $("#txtComponentComplexityFac7_1").val(data.ComponentComplexityFac7);
                        $("#txtComponentComplexityFac8_1").val(data.ComponentComplexityFac8);
                        $("#txtComponentComplexityFac9_1").val(data.ComponentComplexityFac9);
                        $("#txtComponentComplexityFac10_1").val(data.ComponentComplexityFac10);
                        $("#txtComponentComplexityFac11_1").val(data.ComponentComplexityFac11);
                        $("#txtComponentComplexityFac12_1").val(data.ComponentComplexityFac12);
                        $("#txtComponentComplexityFac13_1").val(data.ComponentComplexityFac13);
                        $("#txtComponentComplexityFac14_1").val(data.ComponentComplexityFac14);
                        $("#txtComponentComplexityFac15_1").val(data.ComponentComplexityFac15);
                        $("#TestProdValue12").val(data.ComponentComplexityFac12);
                        $("#TestProdValue13").val(data.ComponentComplexityFac12);
                        $("#DescProduct_1").val(data.ProductName);



                    },

                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Products.');
                    }
                });

            });
        });
    </script>


    @* Product #2 Calc*@
    <script type="text/javascript">
        $(function () {
           // $("#ddl_product2").change(function () {
            $("#AvProductId1A").change(function () {
              //  alert($(this).val() + " " + $(this).find("option:selected").html());
                var id = $(this).val();
                $.ajax({
                    type: "Post",
                    url: '@Url.Action("GetProductByID2", "SizingUserDashboard")',
                    data: '{id: "' + id + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        //alert(data.LastName);



                        $("#txtAvProdId2").val(data.AvProductId);
                        $("#txtProductName2").val(data.ProductName);
                        $("#DescProduct_2").val(data.ProductName);
                        $("#txtProductDesc2").val(data.ProductDesc);
                        $("#txtProductComplexityFac2").val(data.ProductComplexityFac);
                        $("#txtProductComplexityBase2").val(data.ProductComplexityBase);
                        $("#txtTotalComplexity2").val(data.TotalComplexity);
                        $("#txtComponent1Desc2").val(data.Component1Desc);
                        $("#txtComponent2Desc2").val(data.Component2Desc);
                        $("#txtComponent3Desc2").val(data.Component3Desc);
                        $("#txtComponent4Desc2").val(data.Component4Desc);
                        $("#txtComponent5Desc2").val(data.Component5Desc);
                        $("#txtComponent6Desc2").val(data.Component6Desc);
                        $("#txtComponent7Desc2").val(data.Component7Desc);
                        $("#txtComponent8Desc2").val(data.Component8Desc);
                        $("#txtComponent9Desc2").val(data.Component9Desc);
                        $("#txtComponent10Desc2").val(data.Component10Desc);
                        $("#txtComponent11Desc2").val(data.Component11Desc);
                        $("#txtComponent12Desc2").val(data.Component12Desc);
                        $("#txtComponent13Desc2").val(data.Component13Desc);
                        $("#txtComponent14Desc2").val(data.Component14Desc);
                        $("#txtComponent15Desc2").val(data.Component15Desc)


                        $("#Prod2Compnent1Desc").val(data.Component1Desc);
                        $("#Prod2Compnent2Desc").val(data.Component2Desc);
                        $("#Prod2Compnent3Desc").val(data.Component3Desc);
                        $("#Prod2Compnent4Desc").val(data.Component4Desc);
                        $("#Prod2Compnent5Desc").val(data.Component5Desc);

                        $("#Prod2Compnent6Desc").val(data.Component6Desc);
                        $("#Prod2Compnent7Desc").val(data.Component7Desc);
                        $("#Prod2Compnent8Desc").val(data.Component8Desc);
                        $("#Prod2Compnent9Desc").val(data.Component9Desc);
                        $("#Prod2Compnent10Desc").val(data.Component10Desc);

                        $("#Prod2Compnent11Desc").val(data.Component11Desc);
                        $("#Prod2Compnent12Desc").val(data.Component12Desc);
                        $("#Prod2Compnent13Desc").val(data.Component13Desc);
                        $("#Prod2Compnent14Desc").val(data.Component14Desc);
                        $("#Prod2Compnent15Desc").val(data.Component15Desc);


                        $("#Prod2ComponentComplexityFac1_1").val(data.ComponentComplexityFac1);
                        $("#Prod2ComponentComplexityFac2_1").val(data.ComponentComplexityFac2);
                        $("#Prod2ComponentComplexityFac3_1").val(data.ComponentComplexityFac3);
                        $("#Prod2ComponentComplexityFac4_1").val(data.ComponentComplexityFac4);
                        $("#Prod2ComponentComplexityFac5_1").val(data.ComponentComplexityFac5);
                        $("#Prod2ComponentComplexityFac6_1").val(data.ComponentComplexityFac6);
                        $("#Prod2ComponentComplexityFac7_1").val(data.ComponentComplexityFac7);
                        $("#Prod2ComponentComplexityFac8_1").val(data.ComponentComplexityFac8);
                        $("#Prod2ComponentComplexityFac9_1").val(data.ComponentComplexityFac9);
                        $("#Prod2ComponentComplexityFac10_1").val(data.ComponentComplexityFac10);
                        $("#Prod2ComponentComplexityFac11_1").val(data.ComponentComplexityFac11);
                        $("#Prod2ComponentComplexityFac12_1").val(data.ComponentComplexityFac12);
                        $("#Prod2ComponentComplexityFac13_1").val(data.ComponentComplexityFac13);
                        $("#Prod2ComponentComplexityFac14_1").val(data.ComponentComplexityFac14);
                        $("#Prod2ComponentComplexityFac15_1").val(data.ComponentComplexityFac15);

                        $("#txtComponentComplexityFac1_2").val(data.ComponentComplexityFac1);

                        $("#ComponentComplexityFac1_2").val(data.ComponentComplexityFac2);
                        $("#txtComponentComplexityFac3_2").val(data.ComponentComplexityFac3);
                        $("#txtComponentComplexityFac4_2").val(data.ComponentComplexityFac4);
                        $("#txtComponentComplexityFac5_2").val(data.ComponentComplexityFac5);
                        $("#txtComponentComplexityFac6_2").val(data.ComponentComplexityFac6);
                        $("#txtComponentComplexityFac7_2").val(data.ComponentComplexityFac7);
                        $("#txtComponentComplexityFac8_2").val(data.ComponentComplexityFac8);
                        $("#txtComponentComplexityFac9_2").val(data.ComponentComplexityFac9);
                        $("#txtComponentComplexityFac10_2").val(data.ComponentComplexityFac10);
                        $("#txtComponentComplexityFac11_2").val(data.ComponentComplexityFac11);
                        $("#txtComponentComplexityFac12_2").val(data.ComponentComplexityFac12);
                        $("#txtComponentComplexityFac13_2").val(data.ComponentComplexityFac13);
                        $("#txtComponentComplexityFac14_2").val(data.ComponentComplexityFac14);
                        $("#txtComponentComplexityFac15_2").val(data.ComponentComplexityFac15);



                    },

                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Products.');
                    }
                });

            });
        });
    </script>

    @* Product #3 Calc*@
    <script type="text/javascript">
        $(function () {
           // $("#ddl_product3").select2("val", "");
            $("#AvProductId2A").change(function () {
              //  alert($(this).val() + " " + $(this).find("option:selected").html());
                var id = $(this).val();
                $.ajax({
                    type: "Post",
                    url: '@Url.Action("GetProductByID3", "SizingUserDashboard")',
                    data: '{id: "' + id + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        //alert(data.LastName);
                        $("#txtAvProdId3").val(data.AvProductId);
                        $("#txtProductName3").val(data.ProductName);
                        $("#DescProduct_3").val(data.ProductName);
                        $("#txtProductDesc3").val(data.ProductDesc);
                        $("#txtProductComplexityFac3").val(data.ProductComplexityFac);
                        $("#txtProductComplexityBase3").val(data.ProductComplexityBase);
                        $("#txtTotalComplexity3").val(data.TotalComplexity);
                        $("#txtComponent1Desc3").val(data.Component1Desc);
                        $("#txtComponent2Desc3").val(data.Component2Desc);
                        $("#txtComponent3Desc3").val(data.Component3Desc);
                        $("#txtComponent4Desc3").val(data.Component4Desc);
                        $("#txtComponent5Desc3").val(data.Component5Desc);
                        $("#txtComponent6Desc3").val(data.Component6Desc);
                        $("#txtComponent7Desc3").val(data.Component7Desc);
                        $("#txtComponent8Desc3").val(data.Component8Desc);
                        $("#txtComponent9Desc3").val(data.Component9Desc);
                        $("#txtComponent10Desc3").val(data.Component10Desc);
                        $("#txtComponent11Desc3").val(data.Component11Desc);
                        $("#txtComponent12Desc3").val(data.Component12Desc);
                        $("#txtComponent13Desc3").val(data.Component13Desc);
                        $("#txtComponent14Desc3").val(data.Component14Desc);
                        $("#txtComponent15Desc3").val(data.Component15Desc)


                        $("#Prod3Compnent1Desc").val(data.Component1Desc);
                        $("#Prod3Compnent2Desc").val(data.Component2Desc);
                        $("#Prod3Compnent3Desc").val(data.Component3Desc);
                        $("#Prod3Compnent4Desc").val(data.Component4Desc);
                        $("#Prod3Compnent5Desc").val(data.Component5Desc);

                        $("#Prod3Compnent6Desc").val(data.Component6Desc);
                        $("#Prod3Compnent7Desc").val(data.Component7Desc);
                        $("#Prod3Compnent8Desc").val(data.Component8Desc);
                        $("#Prod3Compnent9Desc").val(data.Component9Desc);
                        $("#Prod3Compnent10Desc").val(data.Component10Desc);

                        $("#Prod3Compnent11Desc").val(data.Component11Desc);
                        $("#Prod3Compnent12Desc").val(data.Component12Desc);
                        $("#Prod3Compnent13Desc").val(data.Component13Desc);
                        $("#Prod3Compnent14Desc").val(data.Component14Desc);
                        $("#Prod3Compnent15Desc").val(data.Component15Desc);

                        $("#Prod3ComponentComplexityFac1_1").val(data.ComponentComplexityFac1);
                        $("#Prod3ComponentComplexityFac2_1").val(data.ComponentComplexityFac2);
                        $("#Prod3ComponentComplexityFac3_1").val(data.ComponentComplexityFac3);
                        $("#Prod3ComponentComplexityFac4_1").val(data.ComponentComplexityFac4);
                        $("#Prod3ComponentComplexityFac5_1").val(data.ComponentComplexityFac5);
                        $("#Prod3ComponentComplexityFac6_1").val(data.ComponentComplexityFac6);
                        $("#Prod3ComponentComplexityFac7_1").val(data.ComponentComplexityFac7);
                        $("#Prod3ComponentComplexityFac8_1").val(data.ComponentComplexityFac8);
                        $("#Prod3ComponentComplexityFac9_1").val(data.ComponentComplexityFac9);
                        $("#Prod3ComponentComplexityFac10_1").val(data.ComponentComplexityFac10);
                        $("#Prod3ComponentComplexityFac11_1").val(data.ComponentComplexityFac11);
                        $("#Prod3ComponentComplexityFac12_1").val(data.ComponentComplexityFac12);
                        $("#Prod3ComponentComplexityFac13_1").val(data.ComponentComplexityFac13);
                        $("#Prod3ComponentComplexityFac14_1").val(data.ComponentComplexityFac14);
                        $("#Prod3ComponentComplexityFac15_1").val(data.ComponentComplexityFac15);



                        $("#txtComponentComplexityFac1_3").val(data.ComponentComplexityFac1);
                        $("#txtComponentComplexityFac2_3").val(data.ComponentComplexityFac2);
                        $("#txtComponentComplexityFac3_3").val(data.ComponentComplexityFac3);
                        $("#txtComponentComplexityFac4_3").val(data.ComponentComplexityFac4);
                        $("#txtComponentComplexityFac5_3").val(data.ComponentComplexityFac5);
                        $("#txtComponentComplexityFac6_3").val(data.ComponentComplexityFac6);
                        $("#txtComponentComplexityFac7_3").val(data.ComponentComplexityFac7);
                        $("#txtComponentComplexityFac8_3").val(data.ComponentComplexityFac8);
                        $("#txtComponentComplexityFac9_3").val(data.ComponentComplexityFac9);
                        $("#txtComponentComplexityFac10_3").val(data.ComponentComplexityFac10);
                        $("#txtComponentComplexityFac11_3").val(data.ComponentComplexityFac11);
                        $("#txtComponentComplexityFac12_3").val(data.ComponentComplexityFac12);
                        $("#txtComponentComplexityFac13_3").val(data.ComponentComplexityFac13);
                        $("#txtComponentComplexityFac14_3").val(data.ComponentComplexityFac14);
                        $("#txtComponentComplexityFac15_3").val(data.ComponentComplexityFac15)
                    },

                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Products.');
                    }
                });

            });
        });
    </script>

    @* Product #4 Calc*@
    <script type="text/javascript">
        $(function () {
            $("#AvProductId3A").change(function () {
              //  alert($(this).val() + " " + $(this).find("option:selected").html());
                var id = $(this).val();
                $.ajax({
                    type: "Post",
                    url: '@Url.Action("GetProductByID4", "SizingUserDashboard")',
                    data: '{id: "' + id + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        //alert(data.LastName);
                        $("#txtAvProdId4").val(data.AvProductId);
                        $("#txtProductName4").val(data.ProductName);
                        $("#DescProduct_4").val(data.ProductName);
                        $("#txtProductDesc4").val(data.ProductDesc);
                        $("#txtProductComplexityFac4").val(data.ProductComplexityFac);
                        $("#txtProductComplexityBase4").val(data.ProductComplexityBase);
                        $("#txtTotalComplexity4").val(data.TotalComplexity);
                        @* $("#txtComponent1Desc4").val(data.Component1Desc);
                        $("#txtComponent2Desc4").val(data.Component2Desc);
                        $("#txtComponent3Desc4").val(data.Component3Desc);
                        $("#txtComponent4Desc4").val(data.Component4Desc);
                        $("#txtComponent5Desc4").val(data.Component5Desc);
                        $("#txtComponent6Desc4").val(data.Component6Desc);
                        $("#txtComponent7Desc4").val(data.Component7Desc);
                        $("#txtComponent8Desc4").val(data.Component8Desc);
                        $("#txtComponent9Desc4").val(data.Component9Desc);
                        $("#txtComponent10Desc4").val(data.Component10Desc);
                        $("#txtComponent11Desc4").val(data.Component11Desc);
                        $("#txtComponent12Desc4").val(data.Component12Desc);
                        $("#txtComponent13Desc4").val(data.Component13Desc);
                        $("#txtComponent14Desc4").val(data.Component14Desc);
                        $("#txtComponent15Desc4").val(data.Component15Desc);*@

                        $("#Prod4Compnent1Desc").val(data.Component1Desc);
                        $("#Prod4Compnent2Desc").val(data.Component2Desc);
                        $("#Prod4Compnent3Desc").val(data.Component3Desc);
                        $("#Prod4Compnent4Desc").val(data.Component4Desc);
                        $("#Prod4Compnent5Desc").val(data.Component5Desc);
                        $("#Prod4Compnent6Desc").val(data.Component6Desc);
                        $("#Prod4Compnent7Desc").val(data.Component7Desc);
                        $("#Prod4Compnent8Desc").val(data.Component8Desc);
                        $("#Prod4Compnent9Desc").val(data.Component9Desc);
                        $("#Prod4Compnent10Desc").val(data.Component10Desc);
                        $("#Prod4Compnent11Desc").val(data.Component11Desc);
                        $("#Prod4Compnent12Desc").val(data.Component12Desc);
                        $("#Prod4Compnent13Desc").val(data.Component13Desc);
                        $("#Prod4Compnent14Desc").val(data.Component14Desc);
                        $("#Prod4Compnent15Desc").val(data.Component15Desc);

                        $("#Prod4ComponentComplexityFac1_1").val(data.ComponentComplexityFac1);
                        $("#Prod4ComponentComplexityFac2_1").val(data.ComponentComplexityFac2);
                        $("#Prod4ComponentComplexityFac3_1").val(data.ComponentComplexityFac3);
                        $("#Prod4ComponentComplexityFac4_1").val(data.ComponentComplexityFac4);
                        $("#Prod4ComponentComplexityFac5_1").val(data.ComponentComplexityFac5);
                        $("#Prod4ComponentComplexityFac6_1").val(data.ComponentComplexityFac6);
                        $("#Prod4ComponentComplexityFac7_1").val(data.ComponentComplexityFac7);
                        $("#Prod4ComponentComplexityFac8_1").val(data.ComponentComplexityFac8);
                        $("#Prod4ComponentComplexityFac9_1").val(data.ComponentComplexityFac9);
                        $("#Prod4ComponentComplexityFac10_1").val(data.ComponentComplexityFac10);
                        $("#Prod4ComponentComplexityFac11_1").val(data.ComponentComplexityFac11);
                        $("#Prod4ComponentComplexityFac12_1").val(data.ComponentComplexityFac12);
                        $("#Prod4ComponentComplexityFac13_1").val(data.ComponentComplexityFac13);
                        $("#Prod4ComponentComplexityFac14_1").val(data.ComponentComplexityFac14);
                        $("#Prod4ComponentComplexityFac15_1").val(data.ComponentComplexityFac15);


                      @*  $("#txtComponentComplexityFac1_4").val(data.ComponentComplexityFac1);
                        $("#txtComponentComplexityFac2_4").val(data.ComponentComplexityFac2);
                        $("#txtComponentComplexityFac3_4").val(data.ComponentComplexityFac3);
                        $("#txtComponentComplexityFac4_4").val(data.ComponentComplexityFac4);
                        $("#txtComponentComplexityFac5_4").val(data.ComponentComplexityFac5);
                        $("#txtComponentComplexityFac6_4").val(data.ComponentComplexityFac6);
                        $("#txtComponentComplexityFac7_4").val(data.ComponentComplexityFac7);
                        $("#txtComponentComplexityFac8_4").val(data.ComponentComplexityFac8);
                        $("#txtComponentComplexityFac9_4").val(data.ComponentComplexityFac9);
                        $("#txtComponentComplexityFac10_4").val(data.ComponentComplexityFac10);
                        $("#txtComponentComplexityFac11_4").val(data.ComponentComplexityFac11);
                        $("#txtComponentComplexityFac12_4").val(data.ComponentComplexityFac12);
                        $("#txtComponentComplexityFac13_4").val(data.ComponentComplexityFac13);
                        $("#txtComponentComplexityFac14_4").val(data.ComponentComplexityFac14);
                        $("#txtComponentComplexityFac15_4").val(data.ComponentComplexityFac15); *@


                    },

                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Products.');
                    }
                });

            });
        });
    </script>

    @* Labor and Delivery #1 Calc*@
    <script type="text/javascript">
        $(function () {
            $("#ddl_delivered1").change(function () {
              //  alert($(this).val() + " " + $(this).find("option:selected").html());
                var id = $(this).val();
                $.ajax({
                    type: "Post",
                    url: '@Url.Action("GetLaborByID1", "SizingUserDashboard")',
                    data: '{id: "' + id + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        //alert(data.LastName);
                        $("#txtLaborId1").val(data.LaborDeliveryId);
                        $("#txtRegionNumber_1").val(data.RegionNumber);
                        $("#txtRegions_1").val(data.Regions);
                        $("#txtDeliveryOption_1").val(data.DeliveryOption);
                        $("#txtCurrencyType_1").val(data.CurrencyType);
                        $("#txtDefaultFTE_Year_1").val(data.DefaultFTE_Year);
                    },

                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Labor and Delivery.');
                    }
                });

            });
        });
    </script>

    @* Labor and Delivery #2 Calc*@
    <script type="text/javascript">
        $(function () {
            $("#LaborDeliveryId1A").change(function () {
              //  alert($(this).val() + " " + $(this).find("option:selected").html()); LaborDeliveryId1A
                var id = $(this).val();
                $.ajax({
                    type: "Post",
                    url: '@Url.Action("GetLaborByID2", "SizingUserDashboard")',
                    data: '{id: "' + id + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        //alert(data.LastName);
                        $("#txtLaborId2").val(data.LaborDeliveryId);
                        $("#txtRegionNumber_2").val(data.RegionNumber);
                        $("#txtRegions_2").val(data.Regions);
                        $("#txtDeliveryOption_2").val(data.DeliveryOption);
                        $("#txtCurrencyType_2").val(data.CurrencyType);
                        $("#txtDefaultFTE_Year_2").val(data.DefaultFTE_Year);

                        $("#DescLaborDelivery_2").val(data.Regions);
                        $("#Default_Yr_LaborDelivery_2").val(data.DefaultFTE_Year);

                        $("#TxtBand3Percentage_1").val(data.Band3Percentage);
                        $("#TxtBand4Percentage_1").val(data.Band4Percentage);
                        $("#TxtBand5Percentage_1").val(data.Band5Percentage);
                        $("#TxtBand6Percentage_1").val(data.Band6Percentage);
                        $("#TxtBand7Percentage_1").val(data.Band7Percentage);
                        $("#TxtBand8Percentage_1").val(data.Band8Percentage);
                        $("#TxtBand9Percentage_1").val(data.Band9Percentage);

                        $("#Prod2_Band3_Percentage").val(data.Band3Percentage);
                        $("#Prod2_Band4_Percentage").val(data.Band4Percentage);
                        $("#Prod2_Band5_Percentage").val(data.Band5Percentage);
                        $("#Prod2_Band6_Percentage").val(data.Band6Percentage);
                        $("#Prod2_Band7_Percentage").val(data.Band7Percentage);
                        $("#Prod2_Band8_Percentage").val(data.Band8Percentage);
                        $("#Prod2_Band9_Percentage").val(data.Band9Percentage);


                    },

                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Labor and Delivery.');
                    }
                });

            });
        });
    </script>

    @* Labor and Delivery #3 Calc*@
    <script type="text/javascript">
        $(function () {
            $("#LaborDeliveryId2A").change(function () {
              //  alert($(this).val() + " " + $(this).find("option:selected").html());
                var id = $(this).val();
                $.ajax({
                    type: "Post",
                    url: '@Url.Action("GetLaborByID3", "SizingUserDashboard")',
                    data: '{id: "' + id + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        //alert(data.LastName);
                        $("#txtLaborId3").val(data.LaborDeliveryId);
                        $("#txtRegionNumber_3").val(data.RegionNumber);
                        $("#txtRegions_3").val(data.Regions);
                        $("#txtDeliveryOption_3").val(data.DeliveryOption);
                        $("#txtCurrencyType_3").val(data.CurrencyType);
                        $("#txtDefaultFTE_Year_3").val(data.DefaultFTE_Year);

                        $("#DescLaborDelivery_3").val(data.Regions);
                        $("#Default_Yr_LaborDelivery_3").val(data.DefaultFTE_Year);

                        $("#Prod3_Band3_Percentage").val(data.Band3Percentage);
                        $("#Prod3_Band4_Percentage").val(data.Band4Percentage);
                        $("#Prod3_Band5_Percentage").val(data.Band5Percentage);
                        $("#Prod3_Band6_Percentage").val(data.Band6Percentage);
                        $("#Prod3_Band7_Percentage").val(data.Band7Percentage);
                        $("#Prod3_Band8_Percentage").val(data.Band8Percentage);
                        $("#Prod3_Band9_Percentage").val(data.Band9Percentage);
                    },

                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Labor and Delivery.');
                    }
                });

            });
        });
    </script>

    @* Labor and Delivery #4 Calc*@
    <script type="text/javascript">
        $(function () {
            $("#LaborDeliveryId3A").change(function () {
              //  alert($(this).val() + " " + $(this).find("option:selected").html());
                var id = $(this).val();
                $.ajax({
                    type: "Post",
                    url: '@Url.Action("GetLaborByID4", "SizingUserDashboard")',
                    data: '{id: "' + id + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        //alert(data.LastName);
                        $("#txtLaborId4").val(data.LaborDeliveryId);
                        $("#txtRegionNumber_4").val(data.RegionNumber);
                        $("#txtRegions_4").val(data.Regions);
                        $("#txtDeliveryOption_4").val(data.DeliveryOption);
                        $("#txtCurrencyType_4").val(data.CurrencyType);
                        $("#txtDefaultFTE_Year_4").val(data.DefaultFTE_Year);

                        $("#DescLaborDelivery_4").val(data.Regions);
                        $("#Default_Yr_LaborDelivery_4").val(data.DefaultFTE_Year);

                        $("#Prod4_Band3_Percentage").val(data.Band3Percentage);
                        $("#Prod4_Band4_Percentage").val(data.Band4Percentage);
                        $("#Prod4_Band5_Percentage").val(data.Band5Percentage);
                        $("#Prod4_Band6_Percentage").val(data.Band6Percentage);
                        $("#Prod4_Band7_Percentage").val(data.Band7Percentage);
                        $("#Prod4_Band8_Percentage").val(data.Band8Percentage);
                        $("#Prod4_Band9_Percentage").val(data.Band9Percentage);

                    },

                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Labor and Delivery.');
                    }
                });

            });
        });
    </script>

    @*    <script type="text/javascript">
            $(function () {
                $("#tabs").tabs({
                    active: 1,
                    activate: function (event, ui) {
                        var active = $(".selector").tabs("option", "active");
                        console.log(active);
                        $('#active_tab').val(active.context.activeElement.id);
                    }
                });

            });
        </script> *@


    @* <script type="text/javascript">
            $(function () {
                $("#ProductsViewTabs").tabs({
                    active: 0,
                    activate: function (event, ui) {
                        var active = $(".selector").tabs("option", "active");
                        console.log(active);
                        $('#active_tab2').val(active.context.activeElement.id);
                    }
                });

            });
        </script> *@


    @* Code for Primary Tab to maintain Tab Position during Session*@
    <script type="text/javascript">
        $(document).ready(function () {
            var currentMainTabIndex = "0";

            $tab = $("#tabs").tabs({
                activate: function (e, ui) {
                    currentMainTabIndex = ui.newTab.index().toString();
                    sessionStorage.setItem('tab-index', currentMainTabIndex);
                }
            });

            if (sessionStorage.getItem('tab-index') != null) {
                currentMainTabIndex = sessionStorage.getItem('tab-index');
                console.log(currentMainTabIndex);
                $tab.tabs('option', 'active', currentMainTabIndex);
            }
            $('#btn-sub').on('click', function () {
                sessionStorage.setItem("tab-index", currentMainTabIndex);
                //window.location = "/Home/Index/";
            });
        });
    </script>


    @* Code for Products Tab to maintain Tab Position during Session*@

    <script type="text/javascript">
        $(document).ready(function () {
            var currentTabIndex = "0";

            $tab = $("#ProductsViewTabs").tabs({
                activate: function (e, ui) {
                    currentTabIndex = ui.newTab.index().toString();
                    sessionStorage.setItem('tab-index', currentTabIndex);
                }
            });

            if (sessionStorage.getItem('tab-index') != null) {
                currentTabIndex = sessionStorage.getItem('tab-index');
                console.log(currentTabIndex);
                $tab.tabs('option', 'active', currentTabIndex);
            }
            $('#btn-sub').on('click', function () {
                sessionStorage.setItem("tab-index", currentTabIndex);
                //window.location = "/Home/Index/";
            });
        });
    </script>


    @* // Code to Clear Products and Dleivery Centers *@

    @* // Product# 1 *@

    <script type="text/javascript">
        $(document).ready(function () {
            $("#ClearData").click(function () {

                $("#AvProduct.Component1Desc")[0].value = "";
                $("#Component2Desc")[0].value = "";
                $("#Component3Desc")[0].value = "";
                $("#Component4Desc")[0].value = "";
                $("#Component5Desc")[0].value = "";

                $("#Component6Desc")[0].value = "";
                $("#Component7Desc")[0].value = "";
                $("#Component8Desc")[0].value = "";
                $("#Component9Desc")[0].value = "";
                $("#Component10Desc")[0].value = "";

                $("#Component11Desc")[0].value = "";
                $("#Component12Desc")[0].value = "";
                $("#Component13Desc")[0].value = "";
                $("#Component14Desc")[0].value = "";
                $("#Component15Desc")[0].value = "";


                $("#Prod1Component1_Wkstn").prop("checked", false);
                $("#Prod1Component2_Wkstn").prop("checked", false);
                $("#Prod1Component3_Wkstn").prop("checked", false);
                $("#Prod1Component4_Wkstn").prop("checked", false);
                $("#Prod1Component5_Wkstn").prop("checked", false);

                $("#Prod1Component6_Wkstn").prop("checked", false);
                $("#Prod1Component7_Wkstn").prop("checked", false);
                $("#Prod1Component8_Wkstn").prop("checked", false);
                $("#Prod1Component9_Wkstn").prop("checked", false);
                $("#Prod1Component10_Wkstn").prop("checked", false);

                $("#Prod1Component11_Wkstn").prop("checked", false);
                $("#Prod1Component12_Wkstn").prop("checked", false);
                $("#Prod1Component13_Wkstn").prop("checked", false);
                $("#Prod1Component14_Wkstn").prop("checked", false);
                $("#Prod1Component15_Wkstn").prop("checked", false);

                $("#Prod1Component1_Svr").prop("checked", false);
                $("#Prod1Component2_Svr").prop("checked", false);
                $("#Prod1Component3_Svr").prop("checked", false);
                $("#Prod1Component4_Svr").prop("checked", false);
                $("#Prod1Component5_Svr").prop("checked", false);

                $("#Prod1Component6_Svr").prop("checked", false);
                $("#Prod1Component7_Svr").prop("checked", false);
                $("#Prod1Component8_Svr").prop("checked", false);
                $("#Prod1Component9_Svr").prop("checked", false);
                $("#Prod1Component10_Svr").prop("checked", false);

                $("#Prod1Component11_Svr").prop("checked", false);
                $("#Prod1Component12_Svr").prop("checked", false);
                $("#Prod1Component13_Svr").prop("checked", false);
                $("#Prod1Component14_Svr").prop("checked", false);
                $("#Prod1Component15_Svr").prop("checked", false);

                $("#Prod1Component1_IP").prop("checked", false);
                $("#Prod1Component2_IP").prop("checked", false);
                $("#Prod1Component3_IP").prop("checked", false);
                $("#Prod1Component4_IP").prop("checked", false);
                $("#Prod1Component5_IP").prop("checked", false);

                $("#Prod1Component6_IP").prop("checked", false);
                $("#Prod1Component7_IP").prop("checked", false);
                $("#Prod1Component8_IP").prop("checked", false);
                $("#Prod1Component9_IP").prop("checked", false);
                $("#Prod1Component10_IP").prop("checked", false);

                $("#Prod1Component11_IP").prop("checked", false);
                $("#Prod1Component12_IP").prop("checked", false);
                $("#Prod1Component13_IP").prop("checked", false);
                $("#Prod1Component14_IP").prop("checked", false);
                $("#Prod1Component15_IP").prop("checked", false);


                $("#Prod1Component_Qty1")[0].value = 0;
                $("#Prod1Component_Qty2")[0].value = 0;
                $("#Prod1Component_Qty3")[0].value = 0;
                $("#Prod1Component_Qty4")[0].value = 0;
                $("#Prod1Component_Qty5")[0].value = 0;

                $("#Prod1Component_Qty6")[0].value = 0;
                $("#Prod1Component_Qty7")[0].value = 0;
                $("#Prod1Component_Qty8")[0].value = 0;
                $("#Prod1Component_Qty9")[0].value = 0;
                $("#Prod1Component_Qty10")[0].value = 0;

                $("#Prod1Component_Qty11")[0].value = 0;
                $("#Prod1Component_Qty12")[0].value = 0;
                $("#Prod1Component_Qty13")[0].value = 0;
                $("#Prod1Component_Qty14")[0].value = 0;
                $("#Prod1Component_Qty15")[0].value = 0;
                $("#DescProduct_1")[0].value = "";
                $("#DescLaborDelivery_1")[0].value = "";

                $("#NumWorkstation")[0].value = 0;
                $("#NumServer")[0].value = 0;
                $("#NumIpAddress")[0].value = 0;
                $("#NumAddlCon")[0].value = 0;

                $("#Prod1ComponentHours1")[0].value = 0;
                $("#Prod1ComponentHours2")[0].value = 0;
                $("#Prod1ComponentHours3")[0].value = 0;
                $("#Prod1ComponentHours4")[0].value = 0;
                $("#Prod1ComponentHours5")[0].value = 0;

                $("#Prod1ComponentHours6")[0].value = 0;
                $("#Prod1ComponentHours7")[0].value = 0;
                $("#Prod1ComponentHours8")[0].value = 0;
                $("#Prod1ComponentHours9")[0].value = 0;
                $("#Prod1ComponentHours10")[0].value = 0;

                $("#Prod1ComponentHours11")[0].value = 0;
                $("#Prod1ComponentHours12")[0].value = 0;
                $("#Prod1ComponentHours13")[0].value = 0;
                $("#Prod1ComponentHours14")[0].value = 0;
                $("#Prod1ComponentHours15")[0].value = 0;

                return false;
            });
        });
    </script>



    @* // Product#2 ClearData *@

    <script type="text/javascript">
        $(document).ready(function () {
            $("#ClearData1").click(function () {

                $("#Prod2Compnent1Desc")[0].value = "";
                $("#Prod2Compnent2Desc")[0].value = "";
                $("#Prod2Compnent3Desc")[0].value = "";
                $("#Prod2Compnent4Desc")[0].value = "";
                $("#Prod2Compnent5Desc")[0].value = "";

                $("#Prod2Compnent6Desc")[0].value = "";
                $("#Prod2Compnent7Desc")[0].value = "";
                $("#Prod2Compnent8Desc")[0].value = "";
                $("#Prod2Compnent9Desc")[0].value = "";
                $("#Prod2Compnent10Desc")[0].value = "";

                $("#Prod2Compnent11Desc")[0].value = "";
                $("#Prod2Compnent12Desc")[0].value = "";
                $("#Prod2Compnent13Desc")[0].value = "";
                $("#Prod2Compnent14Desc")[0].value = "";
                $("#Prod2Compnent15Desc")[0].value = "";


                $("#Prod2Component1_Wkstn").prop("checked", false);
                $("#Prod2Component2_Wkstn").prop("checked", false);
                $("#Prod2Component3_Wkstn").prop("checked", false);
                $("#Prod2Component4_Wkstn").prop("checked", false);
                $("#Prod2Component5_Wkstn").prop("checked", false);

                $("#Prod2Component6_Wkstn").prop("checked", false);
                $("#Prod2Component7_Wkstn").prop("checked", false);
                $("#Prod2Component8_Wkstn").prop("checked", false);
                $("#Prod2Component9_Wkstn").prop("checked", false);
                $("#Prod2Component10_Wkstn").prop("checked", false);

                $("#Prod2Component11_Wkstn").prop("checked", false);
                $("#Prod2Component12_Wkstn").prop("checked", false);
                $("#Prod2Component13_Wkstn").prop("checked", false);
                $("#Prod2Component14_Wkstn").prop("checked", false);
                $("#Prod2Component15_Wkstn").prop("checked", false);

                $("#Prod2Component1_Svr").prop("checked", false);
                $("#Prod2Component2_Svr").prop("checked", false);
                $("#Prod2Component3_Svr").prop("checked", false);
                $("#Prod2Component4_Svr").prop("checked", false);
                $("#Prod2Component5_Svr").prop("checked", false);

                $("#Prod2Component6_Svr").prop("checked", false);
                $("#Prod2Component7_Svr").prop("checked", false);
                $("#Prod2Component8_Svr").prop("checked", false);
                $("#Prod2Component9_Svr").prop("checked", false);
                $("#Prod2Component10_Svr").prop("checked", false);

                $("#Prod2Component11_Svr").prop("checked", false);
                $("#Prod2Component12_Svr").prop("checked", false);
                $("#Prod2Component13_Svr").prop("checked", false);
                $("#Prod2Component14_Svr").prop("checked", false);
                $("#Prod2Component15_Svr").prop("checked", false);

                $("#Prod2Component1_IP").prop("checked", false);
                $("#Prod2Component2_IP").prop("checked", false);
                $("#Prod2Component3_IP").prop("checked", false);
                $("#Prod2Component4_IP").prop("checked", false);
                $("#Prod2Component5_IP").prop("checked", false);

                $("#Prod2Component6_IP").prop("checked", false);
                $("#Prod2Component7_IP").prop("checked", false);
                $("#Prod2Component8_IP").prop("checked", false);
                $("#Prod2Component9_IP").prop("checked", false);
                $("#Prod2Component10_IP").prop("checked", false);

                $("#Prod2Component11_IP").prop("checked", false);
                $("#Prod2Component12_IP").prop("checked", false);
                $("#Prod2Component13_IP").prop("checked", false);
                $("#Prod2Component14_IP").prop("checked", false);
                $("#Prod2Component15_IP").prop("checked", false);


                $("#Prod2Component_Qty1")[0].value = 0;
                $("#Prod2Component_Qty2")[0].value = 0;
                $("#Prod2Component_Qty3")[0].value = 0;
                $("#Prod2Component_Qty4")[0].value = 0;
                $("#Prod2Component_Qty5")[0].value = 0;

                $("#Prod2Component_Qty6")[0].value = 0;
                $("#Prod2Component_Qty7")[0].value = 0;
                $("#Prod2Component_Qty8")[0].value = 0;
                $("#Prod2Component_Qty9")[0].value = 0;
                $("#Prod2Component_Qty10")[0].value = 0;

                $("#Prod2Component_Qty11")[0].value = 0;
                $("#Prod2Component_Qty12")[0].value = 0;
                $("#Prod2Component_Qty13")[0].value = 0;
                $("#Prod2Component_Qty14")[0].value = 0;
                $("#Prod2Component_Qty15")[0].value = 0;
                $("#DescProduct_2")[0].value = "";
                $("#DescLaborDelivery_2")[0].value = "";

                $("#NumWorkstation1")[0].value = 0;
                $("#NumServer1")[0].value = 0;
                $("#NumIpAddress1")[0].value = 0;
                $("#NumAddlCon1")[0].value = 0;
                $("#NumMonths_2")[0].value = 0;

                $("#Prod2ComponentHours1")[0].value = 0;
                $("#Prod2ComponentHours2")[0].value = 0;
                $("#Prod2ComponentHours3")[0].value = 0;
                $("#Prod2ComponentHours4")[0].value = 0;
                $("#Prod2ComponentHours5")[0].value = 0;

                $("#Prod2ComponentHours6")[0].value = 0;
                $("#Prod2ComponentHours7")[0].value = 0;
                $("#Prod2ComponentHours8")[0].value = 0;
                $("#Prod2ComponentHours9")[0].value = 0;
                $("#Prod2ComponentHours10")[0].value = 0;

                $("#Prod2ComponentHours11")[0].value = 0;
                $("#Prod2ComponentHours12")[0].value = 0;
                $("#Prod2ComponentHours13")[0].value = 0;
                $("#Prod2ComponentHours14")[0].value = 0;
                $("#Prod2ComponentHours15")[0].value = 0;

                return false;
            });
        });
    </script>

    @* // Product#3 ClearData*@

    <script type="text/javascript">
        $(document).ready(function () {
            $("#ClearData2").click(function () {

                $("#Prod3Compnent1Desc")[0].value = "";
                $("#Prod3Compnent2Desc")[0].value = "";
                $("#Prod3Compnent3Desc")[0].value = "";
                $("#Prod3Compnent4Desc")[0].value = "";
                $("#Prod3Compnent5Desc")[0].value = "";

                $("#Prod3Compnent6Desc")[0].value = "";
                $("#Prod3Compnent7Desc")[0].value = "";
                $("#Prod3Compnent8Desc")[0].value = "";
                $("#Prod3Compnent9Desc")[0].value = "";
                $("#Prod3Compnent10Desc")[0].value = "";

                $("#Prod3Compnent11Desc")[0].value = "";
                $("#Prod3Compnent12Desc")[0].value = "";
                $("#Prod3Compnent13Desc")[0].value = "";
                $("#Prod3Compnent14Desc")[0].value = "";
                $("#Prod3Compnent15Desc")[0].value = "";


                $("#Prod3Component1_Wkstn").prop("checked", false);
                $("#Prod3Component2_Wkstn").prop("checked", false);
                $("#Prod3Component3_Wkstn").prop("checked", false);
                $("#Prod3Component4_Wkstn").prop("checked", false);
                $("#Prod3Component5_Wkstn").prop("checked", false);

                $("#Prod3Component6_Wkstn").prop("checked", false);
                $("#Prod3Component7_Wkstn").prop("checked", false);
                $("#Prod3Component8_Wkstn").prop("checked", false);
                $("#Prod3Component9_Wkstn").prop("checked", false);
                $("#Prod3Component10_Wkstn").prop("checked", false);

                $("#Prod3Component11_Wkstn").prop("checked", false);
                $("#Prod3Component12_Wkstn").prop("checked", false);
                $("#Prod3Component13_Wkstn").prop("checked", false);
                $("#Prod3Component14_Wkstn").prop("checked", false);
                $("#Prod3Component15_Wkstn").prop("checked", false);

                $("#Prod3Component1_Svr").prop("checked", false);
                $("#Prod3Component2_Svr").prop("checked", false);
                $("#Prod3Component3_Svr").prop("checked", false);
                $("#Prod3Component4_Svr").prop("checked", false);
                $("#Prod3Component5_Svr").prop("checked", false);

                $("#Prod3Component6_Svr").prop("checked", false);
                $("#Prod3Component7_Svr").prop("checked", false);
                $("#Prod3Component8_Svr").prop("checked", false);
                $("#Prod3Component9_Svr").prop("checked", false);
                $("#Prod3Component10_Svr").prop("checked", false);

                $("#Prod3Component11_Svr").prop("checked", false);
                $("#Prod3Component12_Svr").prop("checked", false);
                $("#Prod3Component13_Svr").prop("checked", false);
                $("#Prod3Component14_Svr").prop("checked", false);
                $("#Prod3Component15_Svr").prop("checked", false);

                $("#Prod3Component1_IP").prop("checked", false);
                $("#Prod3Component2_IP").prop("checked", false);
                $("#Prod3Component3_IP").prop("checked", false);
                $("#Prod3Component4_IP").prop("checked", false);
                $("#Prod3Component5_IP").prop("checked", false);

                $("#Prod3Component6_IP").prop("checked", false);
                $("#Prod3Component7_IP").prop("checked", false);
                $("#Prod3Component8_IP").prop("checked", false);
                $("#Prod3Component9_IP").prop("checked", false);
                $("#Prod3Component10_IP").prop("checked", false);

                $("#Prod3Component11_IP").prop("checked", false);
                $("#Prod3Component12_IP").prop("checked", false);
                $("#Prod3Component13_IP").prop("checked", false);
                $("#Prod3Component14_IP").prop("checked", false);
                $("#Prod3Component15_IP").prop("checked", false);


                $("#Prod3Component_Qty1")[0].value = 0;
                $("#Prod3Component_Qty2")[0].value = 0;
                $("#Prod3Component_Qty3")[0].value = 0;
                $("#Prod3Component_Qty4")[0].value = 0;
                $("#Prod3Component_Qty5")[0].value = 0;

                $("#Prod3Component_Qty6")[0].value = 0;
                $("#Prod3Component_Qty7")[0].value = 0;
                $("#Prod3Component_Qty8")[0].value = 0;
                $("#Prod3Component_Qty9")[0].value = 0;
                $("#Prod3Component_Qty10")[0].value = 0;

                $("#Prod3Component_Qty11")[0].value = 0;
                $("#Prod3Component_Qty12")[0].value = 0;
                $("#Prod3Component_Qty13")[0].value = 0;
                $("#Prod3Component_Qty14")[0].value = 0;
                $("#Prod3Component_Qty15")[0].value = 0;

                $("#DescProduct_3")[0].value = "";
                $("#DescLaborDelivery_3")[0].value = "";

                $("#NumWorkstation2")[0].value = 0;
                $("#NumServer2")[0].value = 0;
                $("#NumIpAddress2")[0].value = 0;
                $("#NumAddlCon2")[0].value = 0;

                $("#Prod3ComponentHours1")[0].value = 0;
                $("#Prod3ComponentHours2")[0].value = 0;
                $("#Prod3ComponentHours3")[0].value = 0;
                $("#Prod3ComponentHours4")[0].value = 0;
                $("#Prod3ComponentHours5")[0].value = 0;

                $("#Prod3ComponentHours6")[0].value = 0;
                $("#Prod3ComponentHours7")[0].value = 0;
                $("#Prod3ComponentHours8")[0].value = 0;
                $("#Prod3ComponentHours9")[0].value = 0;
                $("#Prod3ComponentHours10")[0].value = 0;

                $("#Prod3ComponentHours11")[0].value = 0;
                $("#Prod3ComponentHours12")[0].value = 0;
                $("#Prod3ComponentHours13")[0].value = 0;
                $("#Prod3ComponentHours14")[0].value = 0;
                $("#Prod3ComponentHours15")[0].value = 0;


                return false;
            });
        });
    </script>

    @* // Product#4 ClearData *@

    <script type="text/javascript">
        $(document).ready(function () {
            $("#ClearData3").click(function () {

                $("#DescProduct_4")[0].value = "";
                $("#DescLaborDelivery_4")[0].value = "";

                $("#NumWorkstation3")[0].value = 0;
                $("#NumServer3")[0].value = 0;
                $("#NumIpAddress3")[0].value = 0;
                $("#NumAddlCon3")[0].value = 0;
                $("#NumMonths_3")[0].value = 0;

                $("#Prod4Compnent1Desc")[0].value = "";
                $("#Prod4Compnent2Desc")[0].value = "";
                $("#Prod4Compnent3Desc")[0].value = "";
                $("#Prod4Compnent4Desc")[0].value = "";
                $("#Prod4Compnent5Desc")[0].value = "";

                $("#Prod4Compnent6Desc")[0].value = "";
                $("#Prod4Compnent7Desc")[0].value = "";
                $("#Prod4Compnent8Desc")[0].value = "";
                $("#Prod4Compnent9Desc")[0].value = "";
                $("#Prod4Compnent10Desc")[0].value = "";

                $("#Prod4Compnent11Desc")[0].value = "";
                $("#Prod4Compnent12Desc")[0].value = "";
                $("#Prod4Compnent13Desc")[0].value = "";
                $("#Prod4Compnent14Desc")[0].value = "";
                $("#Prod4Compnent15Desc")[0].value = "";


                $("#Prod4Component1_Wkstn").prop("checked", false);
                $("#Prod4Component2_Wkstn").prop("checked", false);
                $("#Prod4Component3_Wkstn").prop("checked", false);
                $("#Prod4Component4_Wkstn").prop("checked", false);
                $("#Prod4Component5_Wkstn").prop("checked", false);

                $("#Prod4Component6_Wkstn").prop("checked", false);
                $("#Prod4Component7_Wkstn").prop("checked", false);
                $("#Prod4Component8_Wkstn").prop("checked", false);
                $("#Prod4Component9_Wkstn").prop("checked", false);
                $("#Prod4Component10_Wkstn").prop("checked", false);

                $("#Prod4Component11_Wkstn").prop("checked", false);
                $("#Prod4Component12_Wkstn").prop("checked", false);
                $("#Prod4Component13_Wkstn").prop("checked", false);
                $("#Prod4Component14_Wkstn").prop("checked", false);
                $("#Prod4Component15_Wkstn").prop("checked", false);

                $("#Prod4Component1_Svr").prop("checked", false);
                $("#Prod4Component2_Svr").prop("checked", false);
                $("#Prod4Component3_Svr").prop("checked", false);
                $("#Prod4Component4_Svr").prop("checked", false);
                $("#Prod4Component5_Svr").prop("checked", false);

                $("#Prod4Component6_Svr").prop("checked", false);
                $("#Prod4Component7_Svr").prop("checked", false);
                $("#Prod4Component8_Svr").prop("checked", false);
                $("#Prod4Component9_Svr").prop("checked", false);
                $("#Prod4Component10_Svr").prop("checked", false);

                $("#Prod4Component11_Svr").prop("checked", false);
                $("#Prod4Component12_Svr").prop("checked", false);
                $("#Prod4Component13_Svr").prop("checked", false);
                $("#Prod4Component14_Svr").prop("checked", false);
                $("#Prod4Component15_Svr").prop("checked", false);

                $("#Prod4Component1_IP").prop("checked", false);
                $("#Prod4Component2_IP").prop("checked", false);
                $("#Prod4Component3_IP").prop("checked", false);
                $("#Prod4Component4_IP").prop("checked", false);
                $("#Prod4Component5_IP").prop("checked", false);

                $("#Prod4Component6_IP").prop("checked", false);
                $("#Prod4Component7_IP").prop("checked", false);
                $("#Prod4Component8_IP").prop("checked", false);
                $("#Prod4Component9_IP").prop("checked", false);
                $("#Prod4Component10_IP").prop("checked", false);

                $("#Prod4Component11_IP").prop("checked", false);
                $("#Prod4Component12_IP").prop("checked", false);
                $("#Prod4Component13_IP").prop("checked", false);
                $("#Prod4Component14_IP").prop("checked", false);
                $("#Prod4Component15_IP").prop("checked", false);


                $("#Prod4Component_Qty1")[0].value = 0;
                $("#Prod4Component_Qty2")[0].value = 0;
                $("#Prod4Component_Qty3")[0].value = 0;
                $("#Prod4Component_Qty4")[0].value = 0;
                $("#Prod4Component_Qty5")[0].value = 0;

                $("#Prod4Component_Qty6")[0].value = 0;
                $("#Prod4Component_Qty7")[0].value = 0;
                $("#Prod4Component_Qty8")[0].value = 0;
                $("#Prod4Component_Qty9")[0].value = 0;
                $("#Prod4Component_Qty10")[0].value = 0;

                $("#Prod4Component_Qty11")[0].value = 0;
                $("#Prod4Component_Qty12")[0].value = 0;
                $("#Prod4Component_Qty13")[0].value = 0;
                $("#Prod4Component_Qty14")[0].value = 0;
                $("#Prod4Component_Qty15")[0].value = 0;



                $("#Prod4ComponentHours1")[0].value = 0;
                $("#Prod4ComponentHours2")[0].value = 0;
                $("#Prod4ComponentHours3")[0].value = 0;
                $("#Prod4ComponentHours4")[0].value = 0;
                $("#Prod4ComponentHours5")[0].value = 0;

                $("#Prod4ComponentHours6")[0].value = 0;
                $("#Prod4ComponentHours7")[0].value = 0;
                $("#Prod4ComponentHours8")[0].value = 0;
                $("#Prod4ComponentHours9")[0].value = 0;
                $("#Prod4ComponentHours10")[0].value = 0;

                $("#Prod4ComponentHours11")[0].value = 0;
                $("#Prod4ComponentHours12")[0].value = 0;
                $("#Prod4ComponentHours13")[0].value = 0;
                $("#Prod4ComponentHours14")[0].value = 0;
                $("#Prod4ComponentHours15")[0].value = 0;

                return false;
            });
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-1.7.1.js"></script>
    <script src="~/Scripts/jquery-1.7.1.min.js"></script>
    <script type="text/javascript">
    $(document).ready(function () {
        //Country Dropdown Selectedchange event
        $("#ProdCategoryId").change(function () {
            $("#AvSecProduct").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("SizngUserDashboard/GetSecProds")', // Calling json method
                dataType: 'json',
                data: { id: $("#ProdCategoryId").val() },
                // Get Selected Country ID.
                success: function (states) {
                    $.each(avproducts, function (i, state) {
                        $("#AvSecProduct").append('<option value="' + avproducts.Value + '">' +
                             state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });
    </script>



}